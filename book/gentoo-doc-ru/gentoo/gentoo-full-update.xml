<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <info>
        <title>HOWTO Полное обновление системы</title>
    </info>
    <para>Ссылка на оригинал:</para>
    <para>
        <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/HOWTO_Полное_обновление_системы">http://ru.gentoo-wiki.com/HOWTO_Полное_обновление_системы</link>
    </para>
    <para>С версии: 1.2</para>
    <section>
        <info>
            <title>Приведение в порядок /var/lib/portage/world </title>
        </info>
        <para>В world должен быть список программ, которые нужно доустановить к тем, которые уже входят в "system" (т.е. в текущий профайл). </para>
        <orderedlist>
            <listitem>
                <para>в world не должно быть никаких библиотек, и т.д., которые не нужны сами по себе, а нужны только для удовлетворения чьих-то зависимостей (чтобы не продолжать устанавливать/обновлять их, если они уже станут не нужны по какой-то причине) ;</para>
            </listitem>
            <listitem>
                <para>программ, которые уже входят в "system", не должно быть в world </para>
            </listitem>
            <listitem>
                <para>в world нельзя указывать определенную версию софта, это лучше делать в <filename>/etc/portage/package.mask</filename>;</para>
            </listitem>
            <listitem>
                <para>скрипт regenworld может помочь восстановить world путем анализа <filename>/var/log/emerge.log</filename> и генерации на его базе файла world (он перезапишет текущий world!) ;</para>
            </listitem>
            <listitem>
                <para>скрипт <command>dep -p -w</command> (входящий в состав пакета udept) поможет найти избыточные записи в world (которые всё равно нужны другим записям в world или входят в system);</para>
            </listitem>
            <listitem>
                <para>перед серьёзными обновлениями желательно просмотреть <filename>/etc/portage/*</filename>, т.к. там могут быть уже не актуальные записи мешающие текущему обновлению. </para>
            </listitem>
        </orderedlist>
    </section>
    <section>
        <info>
            <title>Обновление profile </title>
        </info>
        <orderedlist>
            <listitem>
                <para>Не каждый Gentoo release включает в себя новый profile (например, 2004.1 был без profile). </para>
            </listitem>
            <listitem>
                <para>Даже если новый profile есть, то переходить на него не обязательно (если это будет обязательно, то старый профайл будет "протестующий" (deprecated) и emerge об этом должен будет громко кричать). </para>
            </listitem>
            <listitem>
                <para>Инструкции по обновлению profile будут выкладываться здесь: <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.gentoo.org/doc/ru/gentoo-upgrading.xml">http://www.gentoo.org/doc/ru/gentoo-upgrading.xml</link> и как правило сводиться к изменению симлинка <filename>/etc/make.profile</filename>.</para>
            </listitem>
        </orderedlist>
    </section>
    <section>
        <info>
            <title> USE-флаги </title>
        </info>
        <orderedlist>
            <listitem>
                <para>Запустить <command>emerge -uDpv --newuse world</command> и проверить что USE-флаги для всех пакетов выставлены корректно, и при необходимости скорректировать </para>
            </listitem>
        </orderedlist>
        <para>USE-флаги выставляются в /etc/make.conf и <filename>/etc/portage/package.use</filename>.</para>
    </section>
    <section>
        <info>
            <title>Запуск обновления системы (если не нужно обновлять toolchain) </title>
        </info>
        <orderedlist>
            <listitem>
                <para>Если </para>
            </listitem>
        </orderedlist>
        <para>        <command>emerge -puDav --newuse world</command>
        </para>
        <para>показывает что будет обновляться пакет входящий в toolchain (linux-headers, glibc, binutils или gcc), то крайне рекомендуется полностью перекомпилировать всю систему  — см. следующий пункт  — а иначе можно вместо следующего пункта просто запустить: </para>
        <para>        <command>emerge -uDav --newuse world</command>
        </para>
    </section>
    <section>
        <info>
            <title>Некоторые причины не использовать emerge -U вместо -u </title>
        </info>
        <para>Причина 1: Проблемы со SLOT</para>
        <para>Это, к примеру, происходит потому, что некоторые люди хотели gimp-2 вместо gimp-1.2. Представьте ситуацию, где gimp-1.2 помечен stable и находится в SLOT 1, gimp-2 помечен unstable и находится в SLOT 2. Теперь при выполнении <command>ACCEPT_KEYWORDS=~x86 emerge gimp</command> получите gimp-2. </para>
        <para>Позже, когда вы посчитаете, что наступило время обновить свою систему чем-либо похожим на "emerge -U world", эта команда установит gimp-1.2, потому, что gimp находится в world-файле, и флаг "-U" не обрабатывает SLOT должным образом. </para>
        <para>Причина 2: Проблемы, в случае удаления ebuild-ов с Portage-дерева. </para>
        <para>Допустим, в Portage находятся 2 версии пакетов foo, foo-1.4 (помеченный как stable) и foo-1.6 (помеченный как unstable). Вы хотите вариант unstable и делаете emerge, как с вышеуказанным gimp. Позже обновляете world как было сказано выше, но в промежутке этого времени вышло критическое обновление для foo-1.6  — foo-1.6.1. Теперь появляется несколько возможностей обработки. </para>
        <orderedlist>
            <listitem>
                <para>foo-1.6 был удален из Portage. Будет установлен foo-1.4, несмотря на "снижение" версии вместо флага "-U" </para>
            </listitem>
            <listitem>
                <para>Ситуация будет еще хуже, если foo-1.6 не был удалён из Portage по какой-либо причине: foo-1.6 (тот, что с критической уязвимостью) будет оставаться на вашей системе до тех пор, пока не будет помечено stable что-либо выше чем foo-1.6. </para>
            </listitem>
        </orderedlist>
        <warning>
            <para>Предупреждение: Не рекомендуется использовать <command>ACCEPT_KEYWORDS=~x86 emerge foo</command> о чем можно почитать здесь <link xlink:href="http://www.gentoo.org/doc/ru/gentoo-amd64-faq.xml#keyword">http://www.gentoo.org/doc/ru/gentoo-amd64-faq.xml#keyword</link>.</para>
        </warning>
    </section>
    <section>
        <info>
            <title>Обновление одного из пакетов входящих в toolchain </title>
        </info>
        <orderedlist>
            <listitem>
                <para>Если обновляется хотя-бы один из linux-headers, glibc, binutils или gcc, то рекомендуется пересобрать их дважды, после чего весь system, после чего весь world. </para>
            </listitem>
        </orderedlist>
        <note>
            <para>Цель двойной компиляции toolchain  — получить гарантированно стабильный и корректный toolchain не зависящий от предыдущего. Перекомпилировать system/world после этого жёсткой необходимости нет, по крайней мере если остальной софт продолжает работать (возможно даже используя библиотеки из старого toolchain  — см. предыдущие пункты об апгрейде). </para>
            <para>Цель перекомпиляции system/world  — чтобы весь софт получил потенциальное преимущество от установки нового toolchain. system перекомпилируется перед world из тех-же соображений, т.к. при компиляции программ из world используются утилиты из system. </para>
        </note>
        <orderedlist>
            <listitem>
                <para>Если увеличивается первая или вторая цифра версии gcc, то перед второй сборкой нужно переключиться на новую версию через gcc-config  — иначе новый gcc просто установится параллельно со старым в "новый слот", но по умолчанию использоваться будет старый. </para>
            </listitem>
            <listitem>
                <para>При сборке system после двойной перекомпиляции toolchain нет необходимости опять компилировать toolchain как часть system. Аналогично при сборке world после system нет небходимости опять компилировать пакеты из system как часть world. Это можно попробовать обойти либо вручную, либо используя скрипты <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://forums.gentoo.org/viewtopic.php?t=282474">[1]</link>, либо через бинарные пакеты и `<command>emerge -k</command>` (я предпочитаю последний вариант). </para>
            </listitem>
            <listitem>
                <para>Итак, рекомендованный набор команд: </para>
            </listitem>
        </orderedlist>
        <example>
            <title>Рекомендованный набор команд</title>
            <screen><lineannotation># для того, чтобы безопасно использовать `emerge -k` нужно очистить
# каталог с текущими бинарными пакетами
# (напр., переместить его в /tmp/portage-packages)</lineannotation>

pkgdir=$(portageq pkgdir)
mv $pkgdir /tmp/portage-packages1
install -d -o portage -g portage $pkgdir

<lineannotation># первая сборка toolchain</lineannotation>
emerge linux-headers glibc binutils gcc-config gcc

<lineannotation># выбрать новый gcc если он установился в новый слот</lineannotation>
gcc-config имя_или_номер_нового_gcc
<lineannotation># см. `gcc-config -l`</lineannotation>
source /etc/profile

<lineannotation># компиляция toolchain с созданием бинарных пакетов</lineannotation>
emerge -b glibc binutils gcc portage

<lineannotation># не компилить glibc, binutils и gcc</lineannotation>
emerge -bke system 

<lineannotation># не компилить предыдущие пакеты (включая system)</lineannotation>
emerge -bke world</screen>
        </example>
        <note>
            <para>Примечание: Чисто теоретически существует пакет binutils-config, который когда-нибудь может потребоваться использовать аналогично gcc-config.</para>
        </note>
    </section>
    <section>
        <info>
            <title>Обновление безопасности. </title>
        </info>
        <note>
            <para>Примечание: Даже после <command>emerge -uDav --newuse world</command> в системе могут оставаться устаревшие пакеты с дырами в безопасности  — в слотах! </para>
        </note>
        <screen>glsa-check -l | grep '\[N\]'
emerge ... <lineannotation># если нужно</lineannotation></screen>
    </section>
    <section>
        <info>
            <title> Удаление неиспользуемых пакетов. </title>
        </info>
        <para>После обновления системы в ней могут оказаться пакеты, которые никто не использует. Эти пакеты желательно удалить, т.к. они не будут в дальнейшем обновляться при <command>emerge -uDav --newuse world</command>. </para>
        <screen>emerge -a depclean <lineannotation># очень осторожно!!!</lineannotation></screen>
        <orderedlist>
            <listitem>
                <para>После обновления библиотек может потребоваться перекомпилировать программы, которые эти библиотеки используют: </para>
            </listitem>
        </orderedlist>
        <note>
            <para>Примечание: Для glsa-check, revdep-rebuild необходимо установить пакет gentoolkit </para>
        </note>
        <screen>rm /root/.revdep-rebuild*.?_*
revdep-rebuild -p
revdep-rebuild</screen>
    </section>
    <section>
        <info>
            <title> Обновление конфигов. </title>
        </info>
        <para>dispatch-conf</para>
        <orderedlist>
            <listitem>
                <para>Если используется runit-init и обновлялся пакет baselayout, то нужно восстановить <filename>/sbin/init</filename>: </para>
            </listitem>
        </orderedlist>
        <programlisting>ls -l /sbin/*init*
if (/sbin/init это бинарник, а не симлинк) {
  mv /sbin/init /sbin/init-sysv
  ln -s runit-init /sbin/init
}</programlisting>
        <orderedlist>
            <listitem>
                <para>Отслеживание важных сообщений при установке пакетов. </para>
            </listitem>
        </orderedlist>
        <para>В процессе <command>emerge world</command> выдаётся очень много сообщений, причём важные комментарии перемешаны с командами компиляции, и отследить их при сборке нескольких пакетов одновременно невозможно. </para>
        <para>Но все эти сообщения можно получить из log-файлов после окончания установки emerge world. Для этого нужно использовать либо enotice, либо portlog-info. </para>
    </section>
</article>
