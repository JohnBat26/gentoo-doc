<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <info>
        <title>Gentoo и GPRS</title>
    </info>
    <section>
        <title>Настройка GPRS в Linux</title>
        <para>Ссылка на оригинал: <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/Настройка_GPRS_в_Linux">http://ru.gentoo-wiki.com</link>
        </para>
        <para>С версии: 1.3</para>
        <para/>
        <section>
            <info>
                <title>Введение</title>
            </info>
            <para/>
            <para>Это руководство поможет настроить мобильный телефон для связи с провайдером через GPRS (на примере beeline). Для того, чтобы настроить мобильный телефон для связи через GPRS, вам понадобится подключить на вашем телефоне услугу GPRS. Обзавестись Mini-USB кабелем. Поправить ручками кое-что в ядре и собрать дополнительные пакеты из набора portage. </para>
        </section>
        <section>
            <info>
                <title>Подготовка</title>
            </info>
            <para>Для наших задач нам понадобится изменить несколько файлов настроек.</para>
            <para>Я использовал</para>
            <itemizedlist>
                <listitem>
                    <para>ядро gentoo-sources-2.4.28-gentoo-r5 из portage, </para>
                </listitem>
                <listitem>
                    <para>дозвонщик wvdial оттуда же</para>
                </listitem>
                <listitem>
                    <para>и ppp-2.4.3-r1 тоже соответсвенно из portage. </para>
                </listitem>
            </itemizedlist>
            <para>Изменяем файлы: </para>
            <para>Открываем <filename>/etc/make.conf</filename> для редактирования <command>nano -w /etc/make.conf</command>
            </para>
            <para>Добавляем mppe-mppc (Нужно для подключения с шифрованием Microsoft MS-CHAPv2) к вашим USE Файл: <filename>/etc/make.conf</filename>
            </para>
            <example>
                <title>Файл: <filename>/etc/make.conf</filename></title>
                <programlisting>USE="mppe-mppc" </programlisting>
            </example>
        </section>
        <section>
            <info>
                <title>Сборка пакетов</title>
            </info>
            <para>Собираем pppd: </para>
            <screen>emerge /usr/portage/net-dialup/ppp/ppp-2.4.3-r1.ebuild</screen>
            <para>собираем wvdial: </para>
            <screen>emerge wvdial</screen>
            <para>редактируем ядро </para>
            <screen>cd /usr/src/linux &amp;&amp; make menuconfig </screen>
            <para>(подразумевается что linux это символичесская ссылка на исходники ядра) </para>
            <para>изменяем: </para>
            <example>
                <title>Конфигурация ядра Linux: PPP point-to-point support </title>
                <screen>Device  Drivers --->
  Network Device Support --->
    &lt;M>  (PPP point-to-point protocol) support
    [ ]  PPP multilink support (EXPEREMRNTAL) (Вы же не хотите объединять несколько телефонов в один канал)
    [M]  PPP filtering
    &lt;M>  PPP support for async serial ports
    &lt;M>  PPP support for sync tty ports
    &lt;M>  PPP Deflate compression
    &lt;M>  PPP BSD-Compress compression
    &lt;M>  PPP over Ethernet (EXPEREMENTAL)</screen>
            </example>
            <note>
                <para>Т.к. у меня ядро 2.6.12-gentoo-r6, то выше названные модули я просто включил в ядро, и не возился в дальнейшем с их загрузкой. Пока проблем не было. </para>
            </note>
            <example>
                <title>Конфигурация ядра Linux: ISDN Subsystem </title>
                <screen>Device Drivers --->
  [*]  ISDN Support --->
    --- ISDN support
    &lt;*>  Old ISDN4Linux (deprecated)  --->
      [*]  Support asynchronus PPP
      [*]  PPP filtering for ISDN
      [*]  Use VJ-compression with asynchronus PPP</screen>
            </example>
            <example>
                <title>Конфигурация ядра Linux: USB support </title>
                <screen>Device Drivers --->
  [*]  USB support --->
    --- USB support
         *** USB Host Controller Driver ***
    &lt;*>  ECHI HCD (USB2.0) support
    (так как у меня чип материнской платы Intel то)
    &lt;*>  UHCI HCD (most Intel and VIA) support
         *** USB Device Class drivers ***
    &lt;M>  USB Modem (CDC ACM) support</screen>
            </example>
            <note>
                <para>Для ядра 2.6.12-gentoo-r6 нужно установить: </para>
                <example>
                    <title>Конфигурация ядра Linux: ISDN Subsystem </title>
                    <screen>Device Drivers --->
  [*]  ISDN Support --->
    --- ISDN support
    &lt;*>  CAPI 2.0 subsystem  --->
      --- CAPI 2.0 subsystem
        [*]  CAPI2.0 Middleware support (EXPERIMENTAL) <lineannotation>(Может и не нужно, но с ним работает)</lineannotation></screen>
                </example>
                <para>Для C380 в данном разделе остальное у меня отключено. </para>
                <para>И по меньшей мере для C380 дополнительно требуется установить: </para>
                <example>
                    <title>Конфигурация ядра Linux: USB Serial Converter support </title>
                    <screen>Device Drivers --->
  [*]  USB support --->
    --- USB support
    &lt;*>  USB Serial Converter support --->
      --- USB Serial Converter support
      [*]  USB Serial Console device support</screen>
                </example>
            </note>
            <para>Сохраняем конфигурацию ядра и выполняем сборку. После сборки устанавливаем новое ядро (Процесс установки ядра описан во многих источниках так что не буду повторяться) и перезагружаем машину. </para>
        </section>
        <section>
            <info>
                <title>Настройка</title>
            </info>
            <para>После перезагрузки пытаемся загрузить модули </para>
            <para>перед всеми манипуляциями проверить есть ли в <filename>/dev</filename> устройство ttyACM0, иначе скрипт и терминалка не увидят модема (телефона) по крайней мере в Fedore Core 2.0 если с ttyUSB0(1,2,3,4,5) ничего не вышло наберите находясь в <filename>/dev</filename> "<command>mknod ttyACM0 c 160 0</command>" (спасибо Pooh) и все должно заработать, естественно что модемом после этого будет устройство ttyACM0 (Yuri г. Barnaul) </para>
            <orderedlist>
                <listitem>
                    <para>стандартный модуль PPP</para>
                    <screen>modprobe ppp_generic </screen>
                </listitem>
                <listitem>
                    <para>Модуль для асинхронной передачи</para>
                    <screen>modprobe ppp_async </screen>
                </listitem>
                <listitem>
                    <para>Модуль для нашего телефона</para>
                    <screen>modprobe acm </screen>
                </listitem>
            </orderedlist>
            <para>Проверяем загрузились модули</para>
            <screen>lsmod </screen>
            <para>Вывод должен выглядеть примерно так</para>
            <screen>ppp_async               6848   0  (unused)
ppp_generic            22628   0  [ppp_async]
slhc                    4624   0  [ppp_generic]
acm                    45353   0  [xxxxxxxxxxx] <lineannotation>(не помню точно что должно быть)</lineannotation></screen>
            <para>Производим первичную конфигурацию wvdial </para>
            <screen>cd /etc &amp;&amp; wvdialconf wvdial.conf </screen>
            <para>открываем для редактирования <filename>/etc/wvdial.conf</filename></para>
            <screen>nano -w wvdial.conf</screen>
            <para>и изменяем сделующие строки </para>
            <example>
                <title>Файл: /etc/wvdial.conf</title>
                <programlisting>Init2 = AT+CGDCONT=1,"IP","internet.beeline.ru"
Phone = *99***1#
Username = beeline
Password = beeline</programlisting>
            </example>
            <para>сохраняем полученный файл. Если значение Init2 уже занато (для C380 в нем дополнительные комманды инициализации), то используйте значение Init3 (<code>Init3 = AT+CGDCONT=1,"IP","internet.beeline.ru"</code>). </para>
            <para>На некоторых тарифах имя пользователя и пароль пустые, тогда файл для C380 и ядра 2.6.12-r6 будет выглядеть примерно так:</para>
            <example>
                <title>Файл: <filename>/etc/wvdial.con</filename></title>
                <programlisting>Modem = /dev/ttyACM0
Baud = 460800
Init1 = ATZ
Init2 = ATQ0 V1 E1 S0=0 &amp;C1 &amp;D2 +FCLASS=0
Init3 = AT+CGDCONT=1,"IP","internet.usi.ru"
ISDN = 0
Modem Type = Analog Modem
Phone = *99***1#
Username = ""
Password = ""</programlisting>
            </example>
        </section>
        <section>
            <info>
                <title>Установка соединения</title>
            </info>
            <para>запускаем wvdial </para>
            <screen>wvdial </screen>
            <para>Потираем ручки и юзаем GPRS на Linux </para>
        </section>
        <section>
            <info>
                <title>Автоматическая установка соединения</title>
            </info>
            <para>Если вы используете udev, можно настроить автоматическое подключение GPRS при подключении телефона к USB. </para>
            <para>Для этого создайте такой вот файл: </para>
            <example>
                <title>Файл: <filename>/etc/udev/rules.d/90-gprs-autodial.rules</filename></title>
                <programlisting>KERNEL=="ttyACM0",      RUN="/usr/bin/wvdial"</programlisting>
            </example>
            <para>(немного некрасиво, но работает на ура) </para>
            <para>..а при отключении телефона соединение оборвётся и без наших скриптов.. </para>
            <note>
                <para>А вообще, на домашних компьютерах можно использовать и графическую звонилку kppp, там и в командной строке набирать ничего не надо, да и удобнее она чем wvdial. </para>
            </note>
        </section>
        <section>
            <info>
                <title>Заключение</title>
            </info>
            <para>Данная статья ни в коем случае не претендует на то что это является правильным и единственным способом подключения GPRS. Вся ответсвенность за действия ложится на ваши плечи. Я описал то что у меня работает. Допускаю что мог в чем то ошибиться так как писал это все на память так что милости прошу ваши коментарии и исправления можно отправлять по email <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="mailto:darkman@rusgate.org">darkman@rusgate.org</link>
            </para>
        </section>
    </section>
    <section>
        <info>
            <title>GPRS через USB</title>
        </info>
        <para>Ссылка на оригинал: <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://linuxforum.ru/index.php?showtopic=52062">http://linuxforum.ru/</link>
        </para>
        <para>Автор: Nikoli (Linuxforum.ru)</para>
        <para>С версии: 1.3</para>
        <para>Появилась необходимость в GPRS соединение в качестве страховочного. Телефоны подключал по USB. Потратил пару часов на настройку, но в итоге получилось довольно простое решение. Здесь для Gentoo такого руководства не выкладывали, надеюсь моё будет полезно. Если считаете необходимым, добавьте его в FAQ.</para>
        <para>1) Ядро должно быть собрано с:</para>
        <screen>Device Drivers  --->
            USB support  --->
            &lt;M>   USB Modem (CDC ACM) support</screen>
        <para>2) Должен быть установлен ppp</para>
        <para>3) В <filename>/etc/conf.d/net</filename> нужно добавить:</para>
        <programlisting>#**********/-------Nokia with Megafon
            config_ppp1=( "ppp" )
            link_ppp1="ttyACM0"
            pppd_ppp1=(
            "debug" # Comment this off, if you don't need more info
            #460800 # Serial port line speed
            "crtscts" # hardware flow control for cable
            "local" # Ignore carrier detect signal from the modem:
            "lcp-echo-failure 0"
            "lcp-echo-interval 0"
            # IP addresses:
            ":0.0.0.0"
            # - accept peers idea of our local address and set address peer as 10.6.6.6
            # (any address would do, since IPCP gives 0.0.0.0 to it)
            # - if you use the 10. network at home or something and pppd rejects it,
            # change the address
            "noipdefault" # pppd must not propose any IP address to the peer!
            "ipcp-accept-local" # Accept peers idea of our local address
            "defaultroute" # Add the ppp interface as default route to the IP routing table
            #replacedefaultroute # New route should be our default route to Internet
            "usepeerdns" # User DNS returned by server
            "noauth" # The phone is not required to authenticate
            # Most phone do not support compression, so turn it off.
            #noipv6
            #novj
            #nobsdcomp
            #novjccomp
            #nopcomp
            #noaccomp
            # Username and password:
            # If username and password are required by the APN, put here the username
            # and put the username-password combination to the secrets file:
            # /etc/ppp/pap-secrets for PAP and /etc/ppp/chap-secrets for CHAP
            # authentication. See pppd man pages for details.
            'user "internet"' # Change this
            "persist" # Persistent connection
            "maxfail 99999" # Retry and retry and retry if failed...
            )
            chat_ppp1=(
            'TIMEOUT'  '45'
            'ABORT'    'BUSY'
            'ABORT'    'NO CARRIER'
            'ABORT'    'ERROR'
            ''         'ATE1'
            'OK'       'AT+CGDCONT=1,"IP","internet"'
            'OK'       'ATD*99***1#'
            'CONNECT'  'c'
            )
            
            #**********/-------Motorola with Beeline
            config_ppp2=( "ppp" )
            link_ppp2="ttyACM0"
            pppd_ppp2=(
            "debug" # Comment this off, if you don't need more info
            #460800 # Serial port line speed
            "crtscts" # hardware flow control for cable
            "local" # Ignore carrier detect signal from the modem:
            "lcp-echo-failure 0"
            "lcp-echo-interval 0"
            # IP addresses:
            ":0.0.0.0"
            # - accept peers idea of our local address and set address peer as 10.6.6.6
            # (any address would do, since IPCP gives 0.0.0.0 to it)
            # - if you use the 10. network at home or something and pppd rejects it,
            # change the address
            "noipdefault" # pppd must not propose any IP address to the peer!
            "ipcp-accept-local" # Accept peers idea of our local address
            "defaultroute" # Add the ppp interface as default route to the IP routing table
            #replacedefaultroute # New route should be our default route to Internet
            "usepeerdns" # User DNS returned by server
            "noauth" # The phone is not required to authenticate
            # Most phone do not support compression, so turn it off.
            #noipv6
            #novj
            #nobsdcomp
            #novjccomp
            #nopcomp
            #noaccomp
            # Username and password:
            # If username and password are required by the APN, put here the username
            # and put the username-password combination to the secrets file:
            # /etc/ppp/pap-secrets for PAP and /etc/ppp/chap-secrets for CHAP
            # authentication. See pppd man pages for details.
            'user "internet.beeline.ru"' # Change this
            "persist" # Persistent connection
            "maxfail 99999" # Retry and retry and retry if failed...
            )
            chat_ppp2=(
            'TIMEOUT'  '45'
            'ABORT'    'BUSY'
            'ABORT'    'NO CARRIER'
            'ABORT'    'ERROR'
            ''         'ATE1'
            'OK'       'AT+CGDCONT=1,"IP","internet.beeline.ru"'
            'OK'       'ATD*99***1#'
            'CONNECT'  'c'
            )</programlisting>
        <para>4) Сделайте ссылки на net.lo</para>
        <screen>ln -s /etc/init.d/net.lo /etc/init.d/net.ppp1ln -s /etc/init.d/net.lo /etc/init.d/net.ppp2</screen>
        <para>5) Подключите телефон с помощью USB, появится /dev/ttyACM0</para>
        <para>6) Выполните</para>
        <screen>/etc/init.d/net.ppp1 start</screen>
        <para>Возможно у вас появится соединение с интернетом.Полезно почитать вывод <command>tail -f /var/log/messages</command>:</para>
        <para>Проверял на том, что было. С отключённым сжатием у меня заработало, у вас его возможно нужно выключить. Если у вас есть замечания по улучшению, буду рад.По мотивам:</para>
        <para><link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://gentoo-wiki.com/Nokia_S60_and_N_series">http://gentoo-wiki.com/Nokia_S60_and_N_series</link></para>
        <para><link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://gentoo-wiki.com/HOWTO_Phone_sync">http://gentoo-wiki.com/HOWTO_Phone_sync</link>
        </para>
        <para><link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.opennet.ru/base/modem/gprs_linux.txt.html">http://www.opennet.ru/base/modem/gprs_linux.txt.html</link>
        </para>
    </section>
    <section>
        <info>
            <title>GPRS через KPPP</title>
        </info>
        <para>Ссылка на оригинал: <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.linuxcenter.ru/lib/articles/networking/kppp_gprs_hints.phtml">http://www.linuxcenter.ru/lib/articles/networking/kppp_gprs_hints.phtml</link>
        </para>
        <para>Автор: Валентин Синицин</para>
        <para>С версии: 1.3</para>
        <para>Телефон с поддержкой GPRS сегодня есть практически у каждого. Руководств по настройке GPRS-соединения в Linux тоже предостаточно, но большая часть из них ориентирована на конкретных операторов сотовой связи или не выходит за рамки mini-HOWTO. В этой статье мы постарались дать общее представление о том, что представляет собой "GPRS в Linux" и привели примерную схему действий для настройки подключения "стандартными средствами" — через KPPP</para>
        <para>С точки зрения повседневного использования сотовый телефон с поддержкой GPRS не слишком отличается от старого доброго модема на 14400 (да, и по скорости временами тоже). Значит, для подключения к "мобильному Интернету" можно использовать все привычные PPP-утилиты — ничего нового не потребуется. Впрочем, необходимо учесть кое-какие тонкости — о них мы и собираемся поговорить.</para>
        <para>Как и всякое приличное "железо", GPRS-модем идентифицируется в системе файлом устройства в <filename>/dev</filename>. Его конкретное имя может отличаться в зависимости от дистрибутива и способа подключения: для дата-кабеля оно может называться <filename>/dev/ttyUSB0</filename> (необходимо подгрузить драйвер используемого конвертера USB-to-Serial, чем, по сути, и является дата-кабель. Весьма распространенный вариант — pl2303, если в вашем дата-кабеле используется другая микросхема — ознакомьтесь с соответствующей секцией конфигуратора ядра Linux или поищите на форумах. В современных дистрибутивах с udev, как правило, необходим только скомпилированный модуль — все остальное, в том числе, создание файла устройства происходит автоматически), для IrDA — <filename>/dev/ircomm0</filename>, для Bluetooth — <filename>/dev/rfcomm0</filename>. В двух последних случаях потребуется некоторая предварительная настройка, выходящая за рамки данной статьи — все подробности можно найти в
            соответствующих HOWTO.</para>
        <para>Настройку GPRS-подключения, как уже упоминалось выше, можно произвести стандартными утилитами. Конкретные параметры можно найти на сайте вашего оператора сотовой связи, здесь же мы опишем стандартную схему действий на примере KPPP. </para>
        <orderedlist>
            <listitem>
                <para>Запустите KPPP и создайте новый модем (Confugure-&gt;Modems-&gt;New). Укажите используемое имя устройства (если нужного вам имени в списке нет, создайте соответствующую символическую ссылку. Лучше делать это прямо из правил udev) </para>
            </listitem>
            <listitem>
                <para>Перейдите на вкладку "Modem" и нажмите кнопку "Modem commands". Введите дополнительную строку инициализации вида <code>AT+CGDCONT=1,"IP","APN_NAME"</code>. Точный вид этой строки должен быть приведен на сайте вашего оператора. </para>
            </listitem>
            <listitem>
                <para>Проверьте модем, нажав на кнопку Query Modem. Если вы не увидите сообщения об ошибке, значит, все прошло, как надо. </para>
            </listitem>
            <listitem>
                <para>Создайте новое подключение. В качестве телефона введите *99***1# — точный вариант, опять же, ищите на сайте оператора. </para>
            </listitem>
            <listitem>
                <para>Теперь можно задать дополнительные аргументы pppd. Рекомендуем добавить "debug" — будете хорошо видеть, если что-то пойдет не так. Если оператор требует отключить сжатие данных — введите "связку" nodeflate + nobsdcomp; если необходимо избавиться от сжатия заголовков TCP/IP — добавьте nojv + novjccomp. </para>
            </listitem>
            <listitem>
                <para>Отдельного упоминания заслуживает фраза: "имя пользователи и пароль не используются". Дело в том, что KPPP не позволяет оставить имя пользователя и пароль пустыми, если используется PAP-авторизация, а некоторые операторы не принимают никакие реквизиты, кроме пустой строки. Проблема решается следующим образом: откройте файл <filename>/etc/ppp/options</filename> (от имени root) и добавьте в него опцию privgroup &lt;ваша_группа&gt;. Это позволит вам передавать в командной строке привилегированные опции pppd, в частности, noauth. Ею и следует воспользоваться. </para>
            </listitem>
            <listitem>
                <para>Закройте окно настроек. Введите имя пользователя и пароль (в случае, если они "не используются", ими может быть любой набор символов) и нажмите кнопку "Connect". Если все пройдет гладко, то через некоторое время KPPP свернется в трей — это значит, что подключение удалось. В противном случае проверьте файл журнала на предмет сообщений об ошибках. </para>
            </listitem>
        </orderedlist>
    </section>
    <section>
        <title>Экономим трафик, с помощью Toonel. (Linux)</title>
        <para>Ссылка на оригинал:<link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://doc.3dn.ru/publ/9-1-0-12">
            </link>
            <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://doc.3dn.ru/publ/9-1-0-12">http://doc.3dn.ru/publ/9-1-0-12</link>
        </para>
        <para>Автор: Дмитрий a.k.a. doc (<link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://doc.3dn.ru/">http://doc.3dn.ru</link>)</para>
        <para>С версии: 1.3</para>
        <para>Бесплатный сервис toonel.net. Клиент написан на java, поэтому необходима виртуальная машина java.</para>
        <para>Оф.сайт: <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.toonel.net/">www.toonel.net</link>
        </para>
        <para>Убедитесь, что у вас установлена виртуальная машина JAVA. Посмотрите в /usr/lib/jre-ххххх (х – номер версии), если нестоит то установите с диска дистрибутива (практический во всех дистрибутивах JAVA клиент есть), обычно называется j2re-xxxxx (х – номер версии), если Java стоит, то можно приступать к установке toonel.</para>
        <para>Прежде чем запускать файл toonel, поменяйте у него права на чтение и запись.</para>
        <para>Теперь выполняем простую команду:</para>
        <screen><prompt>$</prompt> <userinput>java -jar /указываем путь/toonel.jar</userinput></screen>
        <para>Появляется окно программы.</para>
        <para><!--<inlinegraphic fileref="embedded:Графический объект5" width="2.317cm" depth="3.301cm"/>
                <inlinegraphic fileref="embedded:Графический объект4" width="2.306cm" depth="3.303cm"/>
                <inlinegraphic fileref="embedded:Графический объект1" width="2.255cm" depth="3.299cm"/>-->Вкладка Stats – показывает статистику, </para>
        <para>вкладка Mapping – настройка программы, </para>
        <para>вкладка About – о программе.</para>
        <para>Теперь переходим к настройки, вкладка Mapping.</para>
        <para>Чтобы настроить сжатие в браузере жмем на 127.0.0.1</para>
        <para>Здесь стоит hostname: 127.0.0.1</para>
        <para>localport: 8080</para>
        <para>web interface port: 7999</para>
        <para>Устанавливаем нужный процент сжатия JPEG.</para>
        <para>Теперь переходим в браузер, входим в Настройки, Параметры соединения.</para>
        <para>Выбираем: Настройка прокси в ручную:</para>
        <para>HTPP-прокси: 127.0.0.1 Порт:8080</para>
        <para>SSL-прокси: 127.0.0.1 Порт:8080</para>
        <para>FTP-прокси: 127.0.0.1 Порт:8080</para>
        <para><!--<inlinegraphic fileref="embedded:Графический объект6" width="10.29cm" depth="6.476cm"/>Gopher-прокси:127.0.0.1 Порт:8080 -->Все теперь сжатие трафика с проводника установлено.</para>
        <section>
            <info>
                <title>Сжимаем трафик электронной почты.</title>
            </info>
            <para>В Toonel на вкладке Mapping жмем на – new port mapping – в hostname пишем pop3 вашего почтового сервера, например pop3.yandex.ru , в local port указываем порт для прокси сервера, например 8111 и в remote port указываем порт для входящей почты обычно 110, и жмем кнопку Apply.</para>
            <para>Для исходящей почты тоже самое только меняем порты, ну и конечножи сервер на smtp.</para>
            <!--<inlinegraphic fileref="embedded:Графический объект8" width="2.599cm" depth="3.908cm"/>
                <inlinegraphic fileref="embedded:Графический объект7" width="2.744cm" depth="3.919cm"/> </para>-->
            <para>Все toonel для сжатия почты готов, теперь переходим в почтовый клиент.</para>
            <para>Входим в Настройки, Параметры соединения, выбираем Настройка прокси вручную:</para>
            <para>HTTP-прокси: 127.0.0.1 Порт:8080</para>
            <para>SSL-прокси: 127.0.0.1 Порт:8080</para>
            <para>После настройки прокси, входим в Параметры учетной записи и меняем Имя сервера: на 127.0.0.1 а порт 110, на порт который указали в toonel 8111.</para>
            <para>Теперь и сжатие трафика входящей почты установлено.</para>
            <para>Для исходящей почты Имя сервера: на 127.0.0.1 а порт 25, на порт который указали в toonel 8026.</para>
            <para><!--<inlinegraphic fileref="embedded:Графический объект9" width="9.791cm" depth="7.111cm"/> -->Таким образом можно настроить сжатие любой программы которой вы пользуетесь выходя во всемирную паутину.</para>
        </section>
    </section>
    <section>
        <info>
            <title>GPRS  через Bluetooth</title>
        </info>
        <para>Смотрите "<link xlink:href="#">HOWTO Соединение с Internet !</link>"</para>
    </section>
</article>
