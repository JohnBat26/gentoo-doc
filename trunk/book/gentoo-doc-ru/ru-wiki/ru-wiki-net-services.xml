<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<article xmlns="http://docbook.org/ns/docbook"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <info>
        <title>Сетевые сервисы</title>
    </info>
        <section>
            <info>
                <title>Установка Apache2</title>
            </info>
            <section>
                <info>
                    <title>Установка </title>
                </info>
                <para>Apache2 сейчас работает на большинстве системах без проблем, если у вас возникли проблемы прочтите раздел Common Problems это может помочь. </para>
                <para>Начнем установку apache2: добавьте "apache2" к вашим USE флагу в файле /etc/make.conf и выполните: </para>
                <para>emerge apache</para>
            </section>
            <section>
                <info>
                    <title>Запуск Apache </title>
                </info>
                <para>Запустите Apache2: </para>
                <para>/etc/init.d/apache2 start</para>
                <para>Если вы хотите запускать apache2 при запуске системы выполните комманду: </para>
                <para>rc-update add apache2 default</para>
                <para>Посмотрите init scripts section для дополнительной информации. </para>
                <para>Теперь у вас есть работующий веб сервер Apache2. Перейдите в вашем браузере на страницу http://localhost/ и вы должны увидеть страницу приветствия. </para>
                <para>Вы найдете в /var/www/localhost/htdocs/index.html HTML код страницы приветствия которую вы видите на http://localhost/. Замечаем что Apache отображает htdocs/index.html когда вы пытаетесь открыть htdocs/ . Это особенность протокола HTTP. Apache не может передать директорию но может показать содержимое. Список (index) файлов в директории может быть передан. Apache ищет страницу со специальным именем index либо генерирует список файлов в директории. Если у вас есть страница с именем 'index' то будет отображена она; в этом случае вы не сможете посмотреть список файлов в директории. </para>
            </section>
            <section>
                <info>
                    <title>Модули </title>
                </info>
                <para>Apache очень гибок. Он может сёрфить файлы используя HTTP либо серфить файлы и помощью FTP. Он может передать файл с жесткого диска, либо вывод PHP скрипта. Для реализации этого Apache использует модули. Другие приложения используют для этого плагины. При добавлении модули добавляют функциональность. Их также можно инсталлировать, удалять, пересобирать (перекомпилировать). </para>
                <para>Модули Apache обычно называются mod_something. Некоторые уже включены в Апачь а некоторые нужно добавлять отдельно. В портежах содержатся множество модулей. Процесс установки выглядит примерно так: </para>
                <orderedlist>
                    <listitem>
                        <para>emerge module ;</para>
                    </listitem>
                    <listitem>
                        <para>отредактируйте /etc/conf.d/apache2 для активации добавьте -D MOD ;</para>
                    </listitem>
                    <listitem>
                        <para>опционально /etc/apache2/modules.d/xy_module  ;</para>
                    </listitem>
                    <listitem>
                        <para>добавьте директивы конфигурации в httpd.conf либо .htaccess  ;</para>
                    </listitem>
                </orderedlist>
                <para>        emerge mod_perl </para>
                <para>        nano /etc/conf.d/apache2</para>
                <para>        # change APACHE_OPTS="" to APACHE_OPTS="-D PERL"</para>
                <para>Документацию по конкретным модулям вы найдете Apache Index in this wiki. Вы также можете почитать the documentation для дополнительной информации о модулях Apache. </para>
            </section>
            <section>
                <info>
                    <title>Конфигурация </title>
                </info>
                <para>В файле httpd.conf, (/etc/apache2/httpd.conf,) который поставляется с Gentoo хранятся большинство настроек Apache. However, it probably does both more and less than you need it to. Apache configuration files have a consistent syntax. </para>
                <para>Любые строки начинающиеся с # игнорируются </para>
                <para># Apache не анализирует написанное здесь</para>
                <para># это комментарии</para>
                <para>Некоторые строки начинаются с директивы и могут иметь один или несколько аргументов. </para>
                <para>Директивы могут быть объединены в секции. Разделы обычно заключены в угловые скобки. </para>
                <para>&lt;Section&gt;</para>
                <para>  # Will only apply when the section matches</para>
                <para>  AnotherDirective</para>
                <para>&lt;/Section&gt;</para>
                <para>В разделе могут быть подразделы. Вот часть файла httpd.conf: </para>
                <para># If mod_alias is loaded</para>
                <para>&lt;IfModule mod_alias.c&gt;</para>
                <para>    # Alias is a directive and it only applies if mod_alias is loaded</para>
                <para>    Alias /icons/ "/usr/share/httpd/icons/"</para>
                <para>    # If the file is in the directory</para>
                <para>    &lt;Directory "/usr/share/httpd/icons"&gt;</para>
                <para>        # Options will only apply if:</para>
                <para>        #   mod_alias is loaded AND</para>
                <para>        #   the file is in the directory</para>
                <para>        Options Indexes MultiViews</para>
                <para>    &lt;/Directory&gt;</para>
                <para>&lt;/IfModule&gt;</para>
                <para>Вы можете прочитать подробнее configuration files и sections в оффициальная документация Apache. </para>
            </section>
            <section>
                <info>
                    <title>Common Problems </title>
                </info>
                <para>SSI Not Working </para>
                <para>When configuring for SSI (Server Side Includes), an error may occur: </para>
                <para>mod_include: Options +Includes (or IncludesNoExec) wasn't set, INCLUDES filter removed</para>
                <para>The problem is that setting Options +Includes in either .htaccess or httpd.conf is overwritten by the additional configuration file as defined at the end of httpd.conf. </para>
                <para>Include /etc/apache2/vhosts.d/*.conf</para>
                <para>You need to edit this additional configuration file such that </para>
                <para>AllowOverride None</para>
                <para>Is replaced by </para>
                <para>AllowOverride Options</para>
                <para>Could Not Open Error Log </para>
                <para>While starting Apache, it prints: </para>
                <para>Error while starting apache: (2)No such file or directory: apache2: could not open error log file /usr/lib/apache2/logs/error_log.</para>
                <para>/usr/lib/apache2/logs should be a symlink pointing to /var/log/apache2 . Check it using: </para>
                <para>ls -la /usr/lib/apache2/logs</para>
                <para>(note the lack of a slash on the end). If /var/log/apache2 is missing, create it and make sure you give apache ownership: </para>
                <para>mkdir /var/log/apache2</para>
                <para>chown apache:apache /var/log/apache2</para>
                <para>If the symlink /usr/lib/apache2/logs is missing, you can create it: </para>
                <para>ln -s /var/log/apache2 /usr/lib/apache2/logs</para>
                <para>You don't need to set permissions on the symlink. </para>
                <para>Check the Logs </para>
                <para>See /var/log/apache2/error_log for errors, especially towards the end of the file. You may find tail useful because it displays only the last few lines of a file: </para>
                <para>tail /var/log/apache2/error_log</para>
                <para>If you wish to keep an eye one the log the -f option for tail may be useful: </para>
                <para> tail -f /var/log/apache2/error_log</para>
                <para>Here's one error you might see: </para>
                <para>Error: [alert] (EAI 2)Name or service not known: mod_unique_id: unable to find IPv4 address of ""</para>
                <para>With the base installation "mod_unique_id" is turned on, this can cause problems, notably the server not starting. Simply comment out this module in /etc/apache2/httpd.conf and the problem will be solved. </para>
                <para>(Your config file might be /etc/apache2/conf/apache2.conf) </para>
                <para>Forbidden User Directories </para>
                <para>If the server is returning "403 Forbidden" while accessing http://server/~username/ Make sure Apache (usually user apache and group apache) has read access to username's home directory and public_html (or equivalent). You can grant everyone read access using: </para>
                <para>chmod 755 ~username/ ~username/public_html/</para>
                <para>Not Enough Entropy </para>
                <para>If Apache2 </para>
                <para>accepts connections </para>
                <para>does not respond to clients </para>
                <para>creates exactly one process </para>
                <para>is not stopped by </para>
                <para>/etc/init.d/apache2 stop</para>
                <para>Check to see how much entropy is available using: </para>
                <para>cat /proc/sys/kernel/random/entropy_avail</para>
                <para>If little entropy (less than 100) is available, Apache2 is probably waiting for more so it can generate the secret for digest authentication (mod_auth_digest). To generate more entropy, just do something else for a little while. Grepping the kernel or emerging a package usually works well. </para>
                <para>The video-entropyd and audio-entropyd supply /dev/random with entropy gathered from your video and audio devices, respectively. If you have a hardware random number generator (RNG), you can emerge rng-tools and run rngd. </para>
                <para>If there's still a shortage of entropy, you can enable the urandom USE flag and re-emerge APR and Apache2. This makes APR use /dev/urandom, which falls back to a pseudorandom number generator when there isn't enough entropy. The program gets a number immediately, but it is cryptographically weaker. This is okay for some things (e.g. solitaire), but completely unacceptable for others (like PGP key generation). </para>
                <para>Confusing config files </para>
                <para>If you start the Apache2 server with the startup script /etc/init.d/apache2 check to see if the line </para>
                <para>local myconf="/etc/apache2/httpd.conf" </para>
                <para>from /etc/init.d/apache2 points to your configuration script. If it points to apache.conf and you use httpd.conf, make the necessary adjustments. </para>
            </section>
            <section>
                <info>
                    <title>See Also </title>
                </info>
                <para>Configure LAMP (Linux, Apache, MySQL, and Python/PHP/Perl) — A popular web server combination </para>
                <para>Apache Installation &amp; Configuration </para>
                <para>How to install mod_security for Apache</para>
            </section>
        </section>
        <section>
            <info>
                <title>Настройка iptables для начинающих</title>
            </info>
            <section>
                <info>
                    <title>Введение </title>
                </info>
                <para>В сети мало документации по <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=Man_iptables&amp;action=edit">iptables</link> рассчитанной на новичков. Мы же попытаемся восполнить этот пробел. Рассмотрим основы составления правил, а также некоторые дополнительные модули которые помогут сделать жизнь легче. </para>
                <para>Прежде чем двигаться дальше — убедитесь, что ... </para>
                <orderedlist>
                    <listitem>
                        <para>Всё ваше аппаратное обеспечение работоспособно. То есть Вы подключили все оборудование, модули грузятся, устройства видны в системе. Полезно в начале проверить, что соединение с интернетом возможно и без всяких там <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=Man_iptables&amp;action=edit">iptables</link>. Нет ничего хуже, чем в течении многих часов возиться с упрямой программой, ругая её почём зря, а потом понять, что сетевая карта не работает или модем сконфигурирован неправильно. </para>
                    </listitem>
                    <listitem>
                        <para>Вы имеете представление о сетевых технологиях и Вы знакомы с администрированием Linux и Gentoo Linux в частности. То есть необходимы навыки работы с такими базовыми вещами как <link xlink:href="http://ru.gentoo-wiki.com/index.php?title=Man_ifconfig&amp;action=edit">ifconfig</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=Man_rc-update&amp;action=edit">rc-update</link>, /etc/conf.d/net, и так далее. Если для Вас это пока пустые звуки, то, пожалуйста предварительно изучите <link xlink:href="#">Настольную книгу Gentoo</link> и <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.linuxhelp.ca/guides/networkbasics/">Linux Help's Networking Basics 101</link>
                        </para>
                    </listitem>
                </orderedlist>
            </section>
            <section>
                <info>
                    <title>Конфигурация ядра ОС Linux </title>
                </info>
                <para>Все что вам нужно — это включить поддержку <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=Man_iptables&amp;action=edit">iptables</link>. </para>
                <para>Networking ---&gt;</para>
                <para>  Networking Options----&gt;</para>
                <para>   Network Packet Filtering (replace Ipchains)---&gt;</para>
                <para>    Netfilter Configuration</para>
                <para>Включим все опции как модули (хотя с точки зрения безопасности модули следует вообще отключить, монолитное ядро надежнее, хотя и медленнее). </para>
            </section>
            <section>
                <info>
                    <title>Установка iptables </title>
                </info>
                <para>Далее вы должны установить пакет <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=Man_iptables&amp;action=edit">iptables</link>: emerge iptables </para>
            </section>
            <section>
                <info>
                    <title>Проверка сети </title>
                </info>
                <para>Предположим, что у нас есть 2 сетевых интерфейса: eth0 — локальная сеть и ppp0 — интернет соединение. </para>
                <para>Проверим работоспособность сети командой <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=Man_ping&amp;action=edit">ping</link>: </para>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Code: ping </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>ping www.google.com</para>
                                    <para>ping 192.168.1.78 </para>
                                    <para>ping 192.168.2.77</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
            </section>
            <section>
                <info>
                    <title>Запуск iptables </title>
                </info>
                <para>Запустим <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=Man_iptables&amp;action=edit">iptables</link>: /etc/init.d/iptables start </para>
                <para>Эта команда загрузит основные модули и создаст цепочки в ядре Linux. Теперь добавим <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=Man_iptables&amp;action=edit">iptables</link> в автозагрузку: rc-update add iptables default </para>
            </section>
            <section>
                <info>
                    <title>Использование /etc/init.d/iptables </title>
                </info>
                <para>Скрипт /etc/init.d/iptables понимает несколько команд (/etc/init.d/iptables &lt;команда&gt;), некоторые из них: </para>
                <orderedlist>
                    <listitem>
                        <para>start — запуск <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=Man_iptables&amp;action=edit">iptables</link>. Восстанавливает все правила (правила хранятся в /var/lib/iptables/rules-save); </para>
                    </listitem>
                    <listitem>
                        <para>stop — сброс всех цепочек; </para>
                    </listitem>
                    <listitem>
                        <para>save — сохранение всех правил. </para>
                    </listitem>
                </orderedlist>
            </section>
            <section>
                <info>
                    <title>Создание правил </title>
                </info>
                <para>Практически все правила можно привести к виду: iptables -A ЦЕПОЧКА ПАРАМЕТРЫ_ПАКЕТА -j ДЕЙСТВИЕ </para>
                <para>Цепочки </para>
                <para>Все изменения будем проводить над таблицей filter, именно она отвечает за фильтрацию пакетов. В таблице filter существует 3 цепочки: INPUT, OUTPUT и FORWARD. В каждой цепочки свой "тип" пакетов: </para>
                <orderedlist>
                    <listitem>
                        <para>INPUT — пакеты пришедшие к Вам. То есть входящий трафик. </para>
                    </listitem>
                    <listitem>
                        <para>FORWARD — пакеты которые предназначены для другого узла, то есть транзитный трафик. </para>
                    </listitem>
                    <listitem>
                        <para>OUTPUT — пакеты, которые уходят от нас, или исходящий трафик. </para>
                    </listitem>
                </orderedlist>
                <para>Работают с цепочками так: iptables &lt;опция&gt; &lt;цепочка&gt;
                </para>
                <para>Для работы с цепочками предусмотрены следующие опции: </para>
                <orderedlist>
                    <listitem>
                        <para>-A — добавление нового правила в цепочку. Правило будет добавлено в конец цепочки. </para>
                    </listitem>
                    <listitem>
                        <para>-I — добавление правила не в конец,а туда куда вы укажите. Например команда: </para>
                    </listitem>
                </orderedlist>
                <para>iptables -I INPUT 2 bla-bla-bla — сделает наше правило вторым. </para>
                <orderedlist>
                    <listitem>
                        <para>-D — удаление правила. Например для удаления пятого правила введите: </para>
                    </listitem>
                </orderedlist>
                <para>iptables -D INPUT 5 </para>
                <orderedlist>
                    <listitem>
                        <para>-F — сброс всех правил цепочки. Нужно, например,при удалении ненужной цепочки. </para>
                    </listitem>
                    <listitem>
                        <para>-N — создание пользовательской цепочки. Если не хотите создавать кашу в каждой цепочке, то создайте несколько дополнительных цепочек. Синтаксис такой: iptables -N ЦЕПОЧКА. Только русские буквы, конечно, использовать нельзя. </para>
                    </listitem>
                    <listitem>
                        <para>-X — удаление пользовательской цепочки. </para>
                    </listitem>
                </orderedlist>
                <para>ПРИМЕЧАНИЕ: Удалить цепочки INPUT, OUTPUT и FORWARD нельзя. </para>
                <orderedlist>
                    <listitem>
                        <para>-P — установка политики для цепочки. Например: </para>
                    </listitem>
                </orderedlist>
                <para>iptables -P ЦЕПОЧКА ПОЛИТИКА </para>
            </section>
            <section>
                <info>
                    <title>Параметры пакетов </title>
                </info>
                <para>Итак по каким параметрам можно фильтровать пакеты? Рассмотрим самые основные. </para>
                <para>Источник пакета </para>
                <para>Для фильтрации по источнику используется опция -s. Например запретим все входящие пакеты с узла 192.168.133.133: iptables -A INPUT -s 192.168.133.133 -j DROP </para>
                <para>Можно использовать доменное имя для указания адреса хоста. То есть: iptables -A INPUT -s test.host.jp -j DROP </para>
                <para>Также можно указать целую подсеть: iptables -A INPUT -s 192.168.133.0/24 -j DROP </para>
                <para>Также вы можете использовать отрицание (знак !). Например так — все пакеты с хостов отличных от 192.168.133.156 будут уничтожаться: iptables -A INPUT -s ! 192.168.133.156 -j DROP </para>
                <para>Адрес назначения </para>
                <para>Для этого нужно использовать опцию -d. Например запретим все исходящие пакеты на хост 192.168.156.156: iptables -A OUTPUT -d 192.168.156.156 -j DROP </para>
                <para>Как и в случае с источником пакета можно использовать адреса подсети и доменные имена. Отрицание также работает. </para>
                <para>Протокол </para>
                <para>Опция -p указывает на протокол. Можно использовать all, icmp, tcp, udp. </para>
                <para>Порт источника </para>
                <para>Указывает на порт с которого был прислан пакет. Вот синтаксис: iptables -A INPUT -p tcp --sport 80 -j ACCEPT </para>
                <para>Для указания порта необходимо указать протокол (tcp или udp). Можно использовать отрицание. </para>
                <para>Порт назначения </para>
                <para>Порт назначения. Синтаксис: iptables -A INPUT -p tcp --dport 80 -j ACCEPT </para>
                <para>Как и в случае с портом источника нужно указать протокол. Можно использовать отрицание. </para>
            </section>
            <section>
                <info>
                    <title>Действия над пакетами </title>
                </info>
                <para>Проку от того,что мы укажем параметры пакета нет.Нужно указать,что надо с ним делать. Для этого служит опция -j. Рассмотрим основные действия: </para>
                <orderedlist>
                    <listitem>
                        <para>ACCEPT — разрешить пакет. </para>
                    </listitem>
                    <listitem>
                        <para>DROP — уничтожить пакет. </para>
                    </listitem>
                    <listitem>
                        <para>REJECT — будет отправлено ICMP сообщение, что порт недоступен. </para>
                    </listitem>
                    <listitem>
                        <para>LOG — информация об этом пакете будет добавлена в системный журнал (<link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=Man_syslog&amp;action=edit">syslog</link>). </para>
                    </listitem>
                </orderedlist>
                <para>В качестве действия можно указать и имя пользовательской цепочки. Например перекинем все пакеты с локальной сети в цепочку, где будет производиться дополнительная проверка: iptables -A INPUT -s 192.168.200.0/24 -j LOCAL_NET </para>
            </section>
            <section>
                <info>
                    <title>Пример правил </title>
                </info>
                <para>В больши�стве случаев пользователю достаточно выполнить такую последовательность комманд: iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT iptables -A INPUT -i lo -j ACCEPT iptables -P INPUT DROP </para>
                <para>Вот собственно и вся настройка. На первый взгляд непонятно, что мы тут вообще сделали. Поэтому ознакомимся с основами составления правил. </para>
            </section>
            <section>
                <info>
                    <title>Модули </title>
                </info>
                <para>Может сложиться впечатление, что возможностей у <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=Man_iptables&amp;action=edit">iptables</link> маловато. Однако с использованием модулей <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=Man_iptables&amp;action=edit">iptables</link> получит просто безграничные возможности. Для указания модуля используется опция -m. Например: iptables -A INPUT -m модуль bla-bla </para>
                <para>-m owner </para>
                <para>Добавляет следующие опции (опции только для цепочки OUTPUT): </para>
                <orderedlist>
                    <listitem>
                        <para>--uid-owner UID — UID программы пославшей пакет. </para>
                    </listitem>
                    <listitem>
                        <para>--gid-owner GID — GID прораммы пославшей пакет. </para>
                    </listitem>
                </orderedlist>
                <para>Следующие опции доступны только в версиях ядра ниже 2.6.14: </para>
                <orderedlist>
                    <listitem>
                        <para>--pid-owner PID — PID программы пославшей пакет. </para>
                    </listitem>
                    <listitem>
                        <para>--sid-owner SID — SID (идентификатор сессии) производится проверка SID пакета, значение SID наследуются дочерними процессами от "родителя". </para>
                    </listitem>
                    <listitem>
                        <para>--cmd-owner NAME — имя программы пославшей пакет. </para>
                    </listitem>
                </orderedlist>
                <para>-m multiport </para>
                <para>Позволяет указывать не по одному порту, а сразу несколько: </para>
                <orderedlist>
                    <listitem>
                        <para>--source-ports порт1,порт2 — список портов, с которых пришел пакет; </para>
                    </listitem>
                    <listitem>
                        <para>--sports порт1,порт2 — укороченый аналог --source-ports; </para>
                    </listitem>
                    <listitem>
                        <para>--destination-ports порт1,порт2 — список портов назначения; </para>
                    </listitem>
                    <listitem>
                        <para>--dports порт1,порт2 — укороченый аналог --destination-ports; </para>
                    </listitem>
                    <listitem>
                        <para>--ports порт1,порт2 — проверяет как исходящий так и входящий порт пакета. </para>
                    </listitem>
                </orderedlist>
                <para>-m state </para>
                <para>Предназначен для указания состояния пакета с помощью опции --state. Доступны следующие типы пакетов: </para>
                <orderedlist>
                    <listitem>
                        <para>NEW — пакет устанавливающий новое соединение. </para>
                    </listitem>
                    <listitem>
                        <para>ESTABLISHED — пакет от уже установленного соединения. </para>
                    </listitem>
                    <listitem>
                        <para>RELATED — новый пакет уже установленном соединении. </para>
                    </listitem>
                </orderedlist>
                <para>-m mac </para>
                <para>Проверяет соответствие MAC-адреса в пакете с помощью опции --mac-source, например: </para>
                <para>iptables -A INPUT -s 192.168.0.1 -m mac --mac-source 00:65:3F:ED:12:98 -j DROP</para>
                <para>Получено с <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/Настройка_iptables_для_начинающих">http://ru.gentoo-wiki.com/Настройка_iptables_для_начинающих</link>
                </para>
            </section>
        </section>
        <section>
            <info>
                <title>Подробная настройка iptables</title>
            </info>
            <section>
                <info>
                    <title>Введение</title>
                </info>
                <para>Документация по iptables в сети не рассчитана на новичков. В этой статье будет сжато и быстро описаны команды, затем, возможно, будут правки и добавления для расширенного объяснения. Так что это будет минимальная установка которую мы в дальнейшем расширим и упрочим с помощью правил. </para>
                <para>Так же примите во внимание, что будет использовано pppoe соединение и 2.6.x ядро. Для настройки сетевой карты надо будет заменить ppp0 на eth0 (или подходящий по смыслу ваш сетевой интерфейс глядящий в интернет) </para>
                <para> Прежде чем двигаться дальше — убедитесь, что ...</para>
                <orderedlist>
                    <listitem>
                        <para>1.Всё ваше аппаратное обеспечение работоспособно. То есть вы все подключили, модули грузятся, устройства видны в системе. Полезно вначале проверить, что соединение с интернетом возможно и без всяких там iptables. Нет ничего хуже, чем в течение многих часов возиться с упрямой программой, ругая её почём зря, а потом понять, что сетевая плата не работает или модем сконфигурирован неправильно. </para>
                    </listitem>
                    <listitem>
                        <para>2.Вы читали маны по теме. Предполагается, что, пока вы изучаете это руководство, man iptables постоянно открыт в соседнем терминале для точного понимания и уточнения, что же та или иная команда означает на самом деле. </para>
                    </listitem>
                    <listitem>
                        <para>3.Вы имеете представление о сетевых технологиях и Вы знакомы с администрированием Linux и Gentoo Linux в частности. То есть необходимы навыки работы с такими базовыми вещами как <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=Ifconfig&amp;action=edit">ifconfig</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=Rc-update&amp;action=edit">rc-update</link>, /etc/conf.d/net, и так далее. Если для вас это пока пустые звуки, то, пожалуйста предварительно изучите <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.gentoo.org/doc/en/handbook/index.xml">The Gentoo Handbook</link> и <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.linuxhelp.ca/guides/networkbasics/">Linux Help's Networking Basics 101</link>
                        </para>
                    </listitem>
                </orderedlist>
            </section>
            <section>
                <info>
                    <title>Конфигурация ядра</title>
                </info>
                <para>Все что вам нужно — это включить поддержку iptables. </para>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Linux Kernel Configuration: Включение IPTables </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>Device Drivers---&gt;</para>
                                    <para> Networking Support---&gt;</para>
                                    <para>  Networking Options----&gt;</para>
                                    <para>   Network Packet Filtering (replace Ipchains)---&gt;</para>
                                    <para>    Netfilter Configuration</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para>Я включил все опции как модули (с тем рассчетом, что я захочу попробовать другие опции позже) и добавил ip_tables в modules.autoload. Это загрузит еще несколько модулей в качестве зависимостей. Модуль ip_conntrack необходим для "statefull" фильтрования, то есть для отслеживания соединений. Для запуска скриптов выполните команду : </para>
                <para># modprobe ip_tables </para>
            </section>
            <section>
                <info>
                    <title>Необходимые утилиты</title>
                </info>
                <para>Далее вы должны установить пакет iptables: </para>
                <para># emerge iptables </para>
            </section>
            <section>
                <info>
                    <title>Конфигурация интерфейсов</title>
                </info>
                <para>
                    <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/Сетевые_протоколы_индекс">Сетевые протоколы</link>
                </para>
                <informaltable frame="all">
                    <tgroup cols="2">
                        <tbody>
                            <row>
                                <entry>
                                    <para>
                                        <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/Сетевые_протоколы_индекс#.D0.9F.D1.80.D0.BE.D1.82.D0.BE.D0.BA.D0.BE.D0.BB.D1.8B_.D1.83.D1.80.D0.BE.D0.B2.D0.BD.D1.8F_.D0.BF.D1.80.D0.B8.D0.BB.D0.BE.D0.B6.D0.B5.D0.BD.D0.B8.D1.8F">Прикладной уровень</link>
                                    </para>
                                </entry>
                                <entry>
                                    <para>
                                        <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=HTTP&amp;action=edit">HTTP</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=SMTP&amp;action=edit">SMTP</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=SSH&amp;action=edit">SSH</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=SNMP&amp;action=edit">SNMP</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/FTP">FTP</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=NNTP&amp;action=edit">NNTP</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=NTP&amp;action=edit">NTP</link>, <link
                                            xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=LDAP&amp;action=edit">LDAP</link>, ...</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/Сетевые_протоколы_индекс#.D0.9F.D1.80.D0.BE.D1.82.D0.BE.D0.BA.D0.BE.D0.BB.D1.8B_.D1.81.D0.B5.D0.B0.D0.BD.D1.81.D0.BE.D0.B2.D0.BE.D0.B3.D0.BE_.D1.83.D1.80.D0.BE.D0.B2.D0.BD.D1.8F">Сеансовый уровень</link>
                                    </para>
                                </entry>
                                <entry>
                                    <para>
                                        <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=TLS&amp;action=edit">TLS</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=SSL&amp;action=edit">SSL</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=RPC&amp;action=edit">RPC</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=WSP&amp;action=edit">WSP</link>...</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/Сетевые_протоколы_индекс#.D0.9F.D1.80.D0.BE.D1.82.D0.BE.D0.BA.D0.BE.D0.BB.D1.8B_.D1.82.D1.80.D0.B0.D0.BD.D1.81.D0.BF.D0.BE.D1.80.D1.82.D0.BD.D0.BE.D0.B3.D0.BE_.D1.83.D1.80.D0.BE.D0.B2.D0.BD.D1.8F">Транспортный уровень</link>
                                    </para>
                                </entry>
                                <entry>
                                    <para>
                                        <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=TCP&amp;action=edit">TCP</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=UDP&amp;action=edit">UDP</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=SCTP&amp;action=edit">SCTP</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/ICMP">ICMP</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/OSPF">OSPF</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=RSVP&amp;action=edit">RSVP</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=VRRP&amp;action=edit">VRRP</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink"
                                            xlink:href="http://ru.gentoo-wiki.com/RTP">RTP</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=DCCP&amp;action=edit">DCCP</link> ...</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/Сетевые_протоколы_индекс#.D0.9F.D1.80.D0.BE.D1.82.D0.BE.D0.BA.D0.BE.D0.BB.D1.8B_.D1.81.D0.B5.D1.82.D0.B5.D0.B2.D0.BE.D0.B3.D0.BE_.D1.83.D1.80.D0.BE.D0.B2.D0.BD.D1.8F">Сетевой уровень</link>
                                    </para>
                                </entry>
                                <entry>
                                    <para>
                                        <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/IP">IPv4</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=IPv6&amp;action=edit">IPv6</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/ARP">ARP</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=RARP&amp;action=edit">RARP</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=MPLS&amp;action=edit">MPLS</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=IPX&amp;action=edit">IPX</link> ...</para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>
                                        <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/Сетевые_протоколы_индекс#.D0.9F.D1.80.D0.BE.D1.82.D0.BE.D0.BA.D0.BE.D0.BB.D1.8B_.D0.BA.D0.B0.D0.BD.D0.B0.D0.BB.D1.8C.D0.BD.D0.BE.D0.B3.D0.BE_.D1.83.D1.80.D0.BE.D0.B2.D0.BD.D1.8F">Канальный уровень</link>
                                    </para>
                                </entry>
                                <entry>
                                    <para>
                                        <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=Ethernet&amp;action=edit">Ethernet</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=IEEE_802&amp;action=edit">802.11</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=DSL&amp;action=edit">xDSL</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=Fibre_Channel&amp;action=edit">Fibre Channel</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=FDDI&amp;action=edit">FDDI</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/index.php?title=ATM&amp;action=edit">ATM</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink"
                                            xlink:href="http://ru.gentoo-wiki.com/index.php?title=ISDN&amp;action=edit">ISDN</link> ...</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para>В моем случае имеется 3 сетевых адаптера. Один подключен к <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/WAN">WAN</link> через pppoe. Другие два — к моей внутренней сети. Для того, чтобы не было проблем с iptables и маскардингом (<link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/NAT">NAT</link>'ом), они должны быть сконфигурированы для различных подсетей. Для примера, 2 сетевых адаптера подключены к моим внутренним компьютерам (внутренние сетевые интерфейсы). Им присвоены IP-адреса: 192.168.1.1 и 192.168.2.1. </para>
                <para>Следует заметить, что будет лучше если подключать эти внутренние адаптеры в любое сетевое устройство, такие как свитч и хаб. Для pppoe подключений мы должны убедиться, что сетевой адаптер подключен к внешнему миру, то есть внешним интерфейсам не присвоены никакие IP-адреса. Его запись в /etc/conf.d/net должна оставаться пустой. Это делается потому, что pppoe выступает в качестве виртуального устройства, которое включается вслед за сетевым интерфейсом. Мы также должны присвоить правильные сетевые маски и широковещательные адреса для этих интерфейсов. Ваш conf.d/ должна выглядеть примерно так: </para>
                <para>Сервер</para>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Файл: /etc/conf.d/net </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para> # Для pppoe подключений вы не должны указывать значения для [[eth0]], </para>
                                    <para> # просто добавьте net.ppp0 или rc-pppoe в default уровень загрузки.</para>
                                    <para> iface_eth0="192.168.1.1 broadcast 192.168.1.255 netmask 255.255.255.0"</para>
                                    <para> iface_eth1="192.168.2.1 broadcast 192.168.2.255 netmask 255.255.255.0"</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para>Заметьте, что не было указано никаких шлюзов. </para>
                <para>Клиент1</para>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Файл: /etc/conf.d/net </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para> iface_eth0="192.168.1.77 broadcast 192.168.1.255 netmask 255.255.255.0"</para>
                                    <para> gateway="eth0/192.168.1.1"</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para>Клиент2</para>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Файл: /etc/conf.d/net </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para> iface_eth0="192.168.2.77 broadcast 192.168.2.255 netmask 255.255.255.0"</para>
                                    <para> gateway="eth0/192.168.2.1"</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para>Шлюз для клиентов установлен на внутренний IP сетевого интерфейса сервера, что и логично. Теперь добавьте все интерфейсы в default уровень загрузки и перезапустите подключения: </para>
                <para># rc-update add net.eth1 default &amp;&amp; rc-update add net.eth2 default &amp;&amp; rc-update add net.ppp0 default </para>
                <para>и </para>
                <para># /etc/init.d/net.eth1 start &amp;&amp; /etc/init.d/net.eth2 start &amp;&amp; /etc/init.d/net.ppp0 start </para>
                <orderedlist>
                    <listitem>
                        <para>Для клиентов: </para>
                    </listitem>
                </orderedlist>
                <para># /etc/init.d/net.eth0 restart </para>
            </section>
            <section>
                <info>
                    <title>Проверка настроек</title>
                </info>
                <para>Теперь убедитесь в том, что ваш сервер подключен к интернету, а также все интерфейсы могут пинговать друг друга. Для сервера: </para>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Code: ping </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>ping www.google.com; </para>
                                    <para>ping 192.168.1.78 </para>
                                    <para>ping 192.168.2.78</para>
                                    <para>ping 192.168.1.77</para>
                                    <para>ping 192.168.2.77</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para>Убедитесь что у клиентов правильно указаны <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://ru.gentoo-wiki.com/DNS">DNS</link>-сервера в /etc/resolv.conf </para>
            </section>
            <section>
                <info>
                    <title>Scripting</title>
                </info>
                <para>Теперь интересная часть... iptables и NAT(трансляция адресов). Для начала сделаем простое перенаправление адресов с минимальными правилами, чтобы убедиться что можем выходить в сеть. </para>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Предупреждение: Если вы параноик, то это не самое секретное, что можно сделать... мы открываемся в сеть с мизерной защитой. Однако будем считать, что сеть настраиваем для дома или для игрового класса. </para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Файл: /var/lib/iptables/rules-save </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>#!/bin/bash</para>
                                    <para>IPTABLES='/sbin/iptables'</para>
                                    <para># Определяем интерфейсы</para>
                                    <para>EXTIF='ppp0'</para>
                                    <para>INTIF1='eth1'</para>
                                    <para>INTIF2='eth2'</para>
                                    <para># Включаем форвардинг ip в ядре.</para>
                                    <para>/bin/echo 1 &gt; /proc/sys/net/ipv4/ip_forward</para>
                                    <para># Сбросить правила и удалить цепочки </para>
                                    <para>$IPTABLES -F</para>
                                    <para>$IPTABLES -t nat -F</para>
                                    <para>$IPTABLES -t mangle -F</para>
                                    <para>$IPTABLES -X</para>
                                    <para>$IPTABLES -t nat -X</para>
                                    <para>$IPTABLES -t mangle -X</para>
                                    <para># Включаем маскарадинг для разрешения доступа в интернет</para>
                                    <para>$IPTABLES -t nat -A POSTROUTING -o $EXTIF -j MASQUERADE</para>
                                    <para># Форвардить сетевой трафик с $INTIF1 на интернетовский интерфейс $EXTIF</para>
                                    <para>$IPTABLES -A FORWARD -i $INTIF1 -o $EXTIF -m state --state NEW,ESTABLISHED -j ACCEPT</para>
                                    <para># Форвардить сетевой трафик с $INTIF2 на интернетовский интерфейс $EXTIF</para>
                                    <para>$IPTABLES -A FORWARD -i $INTIF2 -o $EXTIF -m state --state NEW,ESTABLISHED -j ACCEPT</para>
                                    <para>#echo -e "       — Разрешаем доступ к SSH серверу"</para>
                                    <para>$IPTABLES -A INPUT --protocol tcp --dport 22 -j ACCEPT</para>
                                    <para>#echo -e "       — Разрешаем доступ к HTTP серверу"</para>
                                    <para>$IPTABLES -A INPUT --protocol tcp --dport 80 -j ACCEPT</para>
                                    <para># Блокируем все прочие попытки доступа на $EXTIF</para>
                                    <para>$IPTABLES -A INPUT -i $EXTIF -m state --state NEW,INVALID -j DROP</para>
                                    <para>$IPTABLES -A FORWARD -i $EXTIF -m state --state NEW,INVALID -j DROP</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
            </section>
            <section>
                <info>
                    <title>Проверка на работоспособность</title>
                </info>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Примечание: Этот скрипт написан кем-то в сетевом форуме... Адрес автора утерян, имя... В общем, спасибо ему, пусть и без имени. (Надеюсь, он не обидется). </para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para>Теперь проверяем могут ли наши пользователи выйти в интернет или подключиться к серверу по ssh. Если все нормально, то можно переходить ниже по тексту. Если нет — проверьте синтаксические ошибки и прочее... Удостоверьтесь, что IP-адреса и маски клиентов и сервера введены правильно... Ну или... </para>
                <para>Если все работает, как задумали, сохраняем конфигурацию: </para>
                <para># /etc/init.d/iptables save </para>
                <para>И бэкапим вашу рабочую конфигурацию для возможного восстановления "как было": </para>
                <para># cp /var/lib/iptables/rules-save /var/lib/iptables/rules.working </para>
                <para>Проверим iptables start-up скрипт перед тем как добавить iptables в default runlevel: </para>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Code: Проверка скрипта </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <orderedlist>
                                        <listitem>
                                            <para>/etc/init.d/iptables start </para>
                                        </listitem>
                                        <listitem>
                                            <para>/etc/init.d/iptables stop </para>
                                        </listitem>
                                        <listitem>
                                            <para>/etc/init.d/iptables start </para>
                                        </listitem>
                                    </orderedlist>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para>Смысл в запуске-остановке-запуске в том, что у нас нет скрипта запуска iptables... поэтому нужно “инициализировать” статус перед остановкой. Остановка, по существу, обнуляет настройки и возвращает все к исходному. Перезапуск покажет нам работает ли наша сеть после перезагрузки. Если все в порядке, то добавляем iptables в default runlevel: </para>
                <para>rc-update add iptables default </para>
                <para>Не забудем также установить в /etc/sysctl.conf: </para>
                <para>net.ipv4.ip_forward = 1 </para>
            </section>
            <section>
                <info>
                    <title>Оборона Firewall</title>
                </info>
                <para>Далее мы сделаем наш, уже работающий файрвол безопасным, т.е. защищающим нашу систему от проникновений извне. На самом деле нам придется настроить файрвол таким образом, чтобы он не только защищал нас, но и защищал внешнюю сеть от нас. :) Защита такого рода является обязательной, она нужна для того, чтобы, в том случае, если наша система все-таки была взломана, взломщик не смог воспользоваться нашими ресурсами для дальнейшей атаки любого рода. Этот аспект является важнейшим в сетях класса SOHO, т.е. небольших офисах. Обыкновенно вирусы не оказывают никакого влияния на малые сети и заражение ими редко приводит к потере данных. Для нас, пользователей *nix, этой проблемы практически не существует. В любом случае, т.к. небольшие сети, как правило, защищены гораздо хуже больших, кракеры стараются использовать их в качестве “опорной базы” для DoS атак, или другой своей вредоносной активности. </para>
                <para>В последующем я опишу всю конфигурацию по кусочкам, дабы мы смогли бы проверить пошагово каждый фрагмент. Каждый шаг может потребовать от вас вставки чего-либо до, после или в середину указываемого скрипта. Все действия производятся так, чтобы (я надеюсь) ваша сеть не работала только лишь короткий промежуток времени во время настройки. Это сделано мною потому как я предположил что у многих из вас (таких как я) выделен сервер под Firewall. И так как я предпочитаю настраивать свой сервер через SSH, отключение сети может иметь пренеприятные последствия, такие как ползания под столами или хуже того. Если же вы смелы, то вы можете скопировать скрипт в конце этого документа и запустить его на своей машине. Этот скрипт должен быть работоспособен на все сто, но тестировал я его только на своей машине, так что <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://lingvo.yandex.ru/en?text=YMMV">ymmv</link>. </para>
            </section>
            <section>
                <info>
                    <title>Установка переменных окружения</title>
                </info>
                <para>Вы можете установить необходимые переменные окружения следующим скриптом: </para>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Code: ' </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>#!/bin/sh</para>
                                    <para>#</para>
                                    <para># Внешний интерфейс</para>
                                    <para>EXTIF="ppp0"</para>
                                    <para># Внутренний интерфейс</para>
                                    <para>INTIF="eth1"</para>
                                    <para># Loop device/localhost</para>
                                    <para>LPDIF="lo"</para>
                                    <para>LPDIP="127.0.0.1"</para>
                                    <para>LPDMSK="255.0.0.0"</para>
                                    <para>LPDNET="$LPDIP/$LPDMSK"</para>
                                    <para># Необходимые утилиты</para>
                                    <para>IPT="/sbin/iptables"</para>
                                    <para>IFC="/sbin/ifconfig"</para>
                                    <para>G="/bin/grep"</para>
                                    <para>SED="/bin/sed"</para>
                                    <para>AWK="/usr/bin/awk"</para>
                                    <para>ECHO="/bin/echo"</para>
                                    <para># Последующие команды могут работать некорректно при локализации.</para>
                                    <para># Установка переменных окружения внешнего интерфейса</para>
                                    <para>EXTIP="`$IFC $EXTIF | $AWK /$EXTIF/'{next}//{split($0,a,":");split(a[2],a," ");print a[1];exit}'`"</para>
                                    <para>EXTBC="255.255.255.255" </para>
                                    <para>#EXTMSK="`$IFC $EXTIF | $G Mask:|$SED 's/.*Mask:\([^ ]*\)/\1/'`"</para>
                                    <para>EXTMSK="`$IFC $EXTIF | $AWK /$EXTIF/'{next}//{split($0,a,":");split(a[4],a," ");print a[1];exit}'`"</para>
                                    <para>EXTNET="$EXTIP/$EXTMSK"</para>
                                    <para>$ECHO "EXTIP=$EXTIP EXTBC=$EXTBC EXTMSK=$EXTMSK EXTNET=$EXTNET"</para>
                                    <para># Due to absence of EXTBC I manually set it to 255.255.255.255</para>
                                    <para># this (hopefully) will serve the same purpose</para>
                                    <para># Установка переменных окружения внутреннего интерфейса</para>
                                    <para>INTIP="`$IFC $INTIF | $AWK /$INTIF/'{next}//{split($0,a,":");split(a[2],a," ");print a[1];exit}'`"</para>
                                    <para>INTBC="`$IFC $INTIF | $AWK /$INTIF/'{next}//{split($0,a,":");split(a[3],a," ");print a[1];exit}'`"</para>
                                    <para>INTMSK="`$IFC $INTIF | $AWK /$INTIF/'{next}//{split($0,a,":");split(a[4],a," ");print a[1];exit}'`"</para>
                                    <para>INTNET="$INTIP/$INTMSK"</para>
                                    <para>$ECHO "INTIP=$INTIP INTBC=$INTBC INTMSK=$INTMSK INTNET=$INTNET"</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
            </section>
            <section>
                <info>
                    <title>iptables ACCEPTS</title>
                </info>
                <para>Теперь мы должны установить ACCEPTы, так, чтобы мы могли соединяться с нашим сервером. На самом деле это очень больной вопрос. Правила для надежного маршрутизатора должны по умолчанию запрещать нежели разрешать. Однако, если вы сделаете это, то потеряете все соединения. Продолжайте тестирование пока не будете уверены что ваши ACCEPTы работают как надо. Однако думаю, что сперва мы введем следующее и это будет предпоследним правилом в окончательном скрипте. </para>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Code: ' </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>$IPT -t nat -A PREROUTING -j ACCEPT</para>
                                    <para># $IPT -t nat -A POSTROUTING -o $EXTIF -s $INTNET -j SNAT --to $EXTIP</para>
                                    <para># Закомментируйте последующие строки (которые содержат "MASQUERADE") </para>
                                    <para># для сетей без трансляции адресов (NAT)</para>
                                    <para>$IPT -t nat -A POSTROUTING -o $EXTIF -s $INTNET1 -j MASQUERADE</para>
                                    <para>$IPT -t nat -A POSTROUTING -o $EXTIF -s $INTNET2 -j MASQUERADE</para>
                                    <para>$IPT -t nat -A POSTROUTING                       -j ACCEPT</para>
                                    <para>$IPT -t nat -A OUTPUT                            -j ACCEPT</para>
                                    <para>$IPT -A INPUT   -p tcp --dport auth --syn -m state --state NEW -j ACCEPT</para>
                                    <para>$IPT -A INPUT   -m state --state ESTABLISHED,RELATED -j ACCEPT</para>
                                    <para>$IPT -A OUTPUT  -m state --state ESTABLISHED,RELATED -j ACCEPT</para>
                                    <para>$IPT -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
            </section>
            <section>
                <info>
                    <title>iptables DROP &amp; REJECT</title>
                </info>
                <para>Теперь мы определим пару цепочек (chains) которые будут фиксировать события DROP и REJECT. Таким образом нам не придется вводить отдельные строки для каждой введенной команды. Сообщения о событиях будут отправлены сервису syslog, (обычно они фиксируются в /var/log/messages). Позже я (переводчик не имеет к этому никакого отношения) собираюсь написать скрипт на sed/grep по разбору событий для облегченного просмотра и установлю его как ежедневную работу для сервиса cron. </para>
                <para>Эти строки следует вставить сразу после текста выше, в тот же скрипт. Когда вы это сделаете, запустите скрипт снова. Это не окажет влияния на вашу сеть, вы пока просто устанавливаете правила. Но это поможет убедиться что мы не сделали ошибок на данном этапе. </para>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Code: ' </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para># ********** Цепочки журналирования событий **********</para>
                                    <para>#</para>
                                    <para># Теперь мы определяем несколько цепочек которые служат для записи </para>
                                    <para># событий о сбрасываемых пакетах. Это позволит нам избежать ввода </para>
                                    <para># команд для каждого правила. Сперва мы фиксируем DROP, а потом REJECT.</para>
                                    <para># Не жалуйтесь, если цепочки уже существуют (однако это не приведет к ошибкам???)</para>
                                    <para>$IPT -N DROPl   2&gt; /dev/null</para>
                                    <para>$IPT -A DROPl -m limit --limit 3/minute --limit-burst 10 -j LOG --log-prefix 'FIREWALL DROP BLOCKED:'</para>
                                    <para>$IPT -A DROPl   -j DROP</para>
                                    <para>$IPT -N REJECTl 2&gt; /dev/null</para>
                                    <para>$IPT -A REJECTl -m limit --limit 3/minute --limit-burst 10 -j LOG --log-prefix 'FIREWALL REJECT BLOCKED:'</para>
                                    <para>$IPT -A REJECTl -j REJECT</para>
                                    <para>$IPT -N DROP2   2&gt; /dev/null</para>
                                    <para>$IPT -A DROP2 -m limit --limit 3/second --limit-burst 10 -j LOG --log-prefix 'FIREWALL DROP UNKNOWN:'</para>
                                    <para>$IPT -A DROP2   -j DROP</para>
                                    <para>$IPT -N REJECT2 2&gt; /dev/null</para>
                                    <para>$IPT -A REJECT2 -m limit --limit 3/second --limit-burst 10 -j LOG --log-prefix 'FIREWALL REJECT UNKNOWN:'</para>
                                    <para>$IPT -A REJECT2 -j REJECT</para>
                                    <para># Для тестирования фиксируем события ACCEPT</para>
                                    <para>$IPT -N ACCEPTl   2&gt; /dev/null</para>
                                    <para>$IPT -A ACCEPTl -m limit --limit 10/second --limit-burst 50 -j LOG --log-prefix 'FIREWALL ACCEPT:'</para>
                                    <para>$IPT -A ACCEPTl   -j ACCEPT</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
            </section>
            <section>
                <info>
                    <title>Сброс правил</title>
                </info>
                <para>Теперь, когда мы видим наши устройства, правильно определенные, вставляем команду сброса правил. Однако все уже назначенные правила будут сброшены. Эти строки должны быть вставлены после определения утилит, которые заканчиваются строкой: ECHO='/bin/echo' </para>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Code: ' </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para># Сброс всех существующих и очистка персональных цепочек.</para>
                                    <para>CHAINS=`cat /proc/net/ip_tables_names 2&gt;/dev/null`</para>
                                    <para>for i in $CHAINS</para>
                                    <para>do</para>
                                    <para>    $IPT -t $i -F</para>
                                    <para>done</para>
                                    <para>for i in $CHAINS</para>
                                    <para>do</para>
                                    <para>    $IPT -t $i -X</para>
                                    <para>done</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
            </section>
            <section>
                <info>
                    <title>Локальные интерфейсы</title>
                </info>
                <para>Теперь мы готовы для того, чтобы описать некоторые правила. Для начала мы разрешим все пакеты с loopback интерфейса, имеющие в качестве адреса назначения один из адресов наших интерфейсов. </para>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Code: ' </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>$IPT -A INPUT   -i $LPDIF -s   $LPDIP  -j ACCEPT</para>
                                    <para>$IPT -A INPUT   -i $LPDIF -s   $EXTIP  -j ACCEPT</para>
                                    <para>$IPT -A INPUT   -i $LPDIF -s   $INTIP1  -j ACCEPT</para>
                                    <para>$IPT -A INPUT   -i $LPDIF -s   $INTIP2  -j ACCEPT</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
            </section>
            <section>
                <info>
                    <title>Блокировка широковещательных пакетов</title>
                </info>
                <para>Теперь мы должны заблокировать все входящие и исходящие широковещательные пакеты. Это предотвратит DoS атаки против нас, и не позволит нашим клиентам проводить DoS атаки против кого либо другого. Если бы все системные администраторы следовали этим правилам, тогда много суровых и дорогих DoS атак не состоялись или были максимально ограниченными. </para>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Code: Блокировка широковещательных пакетов </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para>$IPT -A INPUT   -i $EXTIF -d   $EXTBC  -j DROPl</para>
                                    <para>$IPT -A INPUT   -i $INTIF1 -d  $INTBC1  -j DROPl</para>
                                    <para>$IPT -A INPUT   -i $INTIF2 -d  $INTBC2  -j DROPl</para>
                                    <para>$IPT -A OUTPUT  -o $EXTIF -d   $EXTBC  -j DROPl</para>
                                    <para>$IPT -A OUTPUT  -o $INTIF1 -d  $INTBC1  -j DROPl</para>
                                    <para>$IPT -A OUTPUT  -o $INTIF2 -d  $INTBC2  -j DROPl</para>
                                    <para>$IPT -A FORWARD -o $EXTIF -d   $EXTBC  -j DROPl</para>
                                    <para>$IPT -A FORWARD -o $INTIF1 -d  $INTBC1  -j DROPl</para>
                                    <para>$IPT -A FORWARD -o $INTIF2 -d  $INTBC2  -j DROPl</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para>Теперь проверим скрипт еще раз, чтобы убедиться в том, что мы не наделали синтаксических ошибок. Также отмечу, что мы используем определенные нами DROP1 цепочки (chains). Это означает, что отбрасываемые пакеты будут отмечены в журнале событий (log file). </para>
            </section>
            <section>
                <info>
                    <title>Блокировка доступа в локальную сеть из глобальной</title>
                </info>
                <para>Теперь мы блокируем доступ из глобальной сети в нашу локальную сеть, если мы не хотим что бы интернет провайдер назначал IP адреса для нашей внутренней сети. </para>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Code: ' </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para># Блокировать внешний доступ к локальной сети</para>
                                    <para># Это позволит остановить боевых кракеров от использования </para>
                                    <para># нашей сети как стартовой точки для других атак.</para>
                                    <para>#</para>
                                    <para># Нижеприведенная строчка на человеческом языке будет выглядеть как</para>
                                    <para># "если входящий пакет, пришедший на наш внешний интерфейс,</para>
                                    <para># имеет адрес назначения, отличный от адреса нашего внешнего интерфейса,</para>
                                    <para># то этот пакет не будет пропущен."</para>
                                    <para>$IPT -A INPUT   -i $EXTIF -d ! $EXTIP  -j DROPl</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
            </section>
            <section>
                <info>
                    <title>Изолирование локальных сетей</title>
                </info>
                <para>Теперь мы предпримем некоторые действия для наших локальных сетей. Другими словами — все пакеты не относящиеся к локальным сетям должны быть блокированы. </para>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Code: ' </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para># Теперь мы должны заблокировать все пакеты не относящиеся к </para>
                                    <para># адресному пространству наших локальных сетей.</para>
                                    <para># Запомните, если вы подключите свой ноутбук к другому разъему, </para>
                                    <para># вам надо убедиться, что ваш сетевой адрес соответствует адресам этой сети.</para>
                                    <para>#</para>
                                    <para># Первая локальная сеть</para>
                                    <para>$IPT -A INPUT   -i $INTIF1 -s ! $INTNET1 -j DROPl</para>
                                    <para>$IPT -A OUTPUT  -o $INTIF1 -d ! $INTNET1 -j DROPl</para>
                                    <para>$IPT -A FORWARD -i $INTIF1 -s ! $INTNET1 -j DROPl</para>
                                    <para>$IPT -A FORWARD -o $INTIF1 -d ! $INTNET1 -j DROPl</para>
                                    <para># Вторая локальная сеть</para>
                                    <para>$IPT -A INPUT   -i $INTIF2 -s ! $INTNET2 -j DROPl</para>
                                    <para>$IPT -A OUTPUT  -o $INTIF2 -d ! $INTNET2 -j DROPl</para>
                                    <para>$IPT -A FORWARD -i $INTIF2 -s ! $INTNET2 -j DROPl</para>
                                    <para>$IPT -A FORWARD -o $INTIF2 -d ! $INTNET2 -j DROPl</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para>Дальше мы сделаем некоторые дополнительные проверки исходящих пакетов и остановим все icmp пакеты кроме ping. </para>
                <informaltable frame="all">
                    <tgroup cols="1">
                        <tbody>
                            <row>
                                <entry>
                                    <para>Code: ' </para>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <para># Дополнительная проверка</para>
                                    <para>$IPT -A OUTPUT  -o $EXTIF -s ! $EXTNET -j DROPl</para>
                                    <para># Блокируем исходящие ICMP (кроме PING)</para>
                                    <para>$IPT -A OUTPUT  -o $EXTIF -p icmp --icmp-type ! 8 -j DROPl</para>
                                    <para>$IPT -A FORWARD -o $EXTIF -p icmp --icmp-type ! 8 -j DROPl</para>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para>Замечательно. Двигаемся дальше и проверяем скрипт на ошибки. </para>
            </section>
            <section>
                <info>
                    <title>Ports</title>
                </info>
                <para>Предполагая что у нас все сработало мы заткнем еще несколько портов, доступ по которым может представлять для нас серьезную опасность: </para>
                <para># COMmon ports:</para>
                <para># 0 is tcpmux; SGI had vulnerability, 1 is common attack</para>
                <para># 13 is daytime</para>
                <para># 98 is Linuxconf</para>
                <para># 111 is sunrpc (portmap)</para>
                <para># 137:139, 445 is Microsoft</para>
                <para># SNMP: 161,2</para>
                <para># Squid flotilla: 3128, 8000, 8008, 8080</para>
                <para># 1214 is Morpheus or KaZaA</para>
                <para># 2049 is NFS</para>
                <para># 3049 is very virulent Linux Trojan, mistakable for NFS</para>
                <para># Common attacks: 1999, 4329, 6346</para>
                <para># Common Trojans 12345 65535</para>
                <para> COMBLOCK="0:1 13 98 111 137:139 161:162 445 1214 1999 2049 3049 4329 6346 3128 8000 8008 8080 12345 65535"</para>
                <para># TCP ports:</para>
                <para># 98 is Linuxconf</para>
                <para># 512-5!5 is rexec, rlogin, rsh, printer(lpd)</para>
                <para>#   [very serious vulnerabilities; attacks continue daily]</para>
                <para># 1080 is Socks proxy server</para>
                <para># 6000 is X (NOTE X over SSH is secure and runs on TCP 22)</para>
                <para># Block 6112 (Sun's/HP's CDE)</para>
                <para> TCPBLOCK="$COMBLOCK 98 512:515 1080 6000:6009 6112"</para>
                <para># UDP ports:</para>
                <para># 161:162 is SNMP</para>
                <para># 520=RIP, 9000 is Sangoma</para>
                <para># 517:518 are talk and ntalk (more annoying than anything)</para>
                <para> UDPBLOCK="$COMBLOCK 161:162 520 123 517:518 1427 9000 9 6346 3128 8000 8008 8080 12345 65535"</para>
                <para>После определения переменных окружения нам останется только пробежаться по ним циклом: </para>
                <para>echo -n "FW: Blocking attacks to TCP port"</para>
                <para>for i in $TCPBLOCK;</para>
                <para>do</para>
                <para> echo -n "$i "</para>
                <para>  $IPT -A INPUT   -p tcp --dport $i  -j DROPl</para>
                <para>  $IPT -A OUTPUT  -p tcp --dport $i  -j DROPl</para>
                <para>  $IPT -A FORWARD -p tcp --dport $i  -j DROPl</para>
                <para>done</para>
                <para>echo ""</para>
                <para>echo -n "FW: Blocking attacks to UDP port "</para>
                <para>for i in $UDPBLOCK;</para>
                <para>do</para>
                <para> echo -n "$i "</para>
                <para>   $IPT -A INPUT   -p udp --dport $i  -j DROPl</para>
                <para>   $IPT -A OUTPUT  -p udp --dport $i  -j DROPl</para>
                <para>   $IPT -A FORWARD -p udp --dport $i  -j DROPl</para>
                <para>done</para>
                <para>echo ""</para>
                <para>Ну что ж, теперь каждый раз, когда мы запускаем скрипт, эти строчки просто добавляются к уже существующим... что создаёт небольшой бардак. По этой причине мы собираемся перепрыгнуть в начало скрипта... сразу после переменных окружения для sed и grep, но перед переменными для EXTIP и EXTBC — там мы добавляем цикл, который производит очистку. Так мы будем уверены, что работаем в чистой среде. Нам не приходилось задумываться об этом ранее, потому что мы не имели возможности оттестить скрипт без обрыва соединения либо закрытия файрвола. Этот скрипт сначала выставляет всю политику в DROP, после чего очищает и удаляет наши цепочки. Чтобы убедиться, что мы по-прежнему можем залогиниться по ssh на наш сервер после того, как скрипт перезапуститься, мы добавим цепочку INPUT для ssh. Пока что поставим её в конец скрипта. Это делается для того чтобы избежать открытия дыры в момент установки новых правил, что является довольно распространённой ошибкой: </para>
                <para># Отказываем, потом принимаем: это уберёт дыру в момент,</para>
                <para># когда мы закрываем порты</para>
                <para> $IPT        -P INPUT       DROP</para>
                <para> $IPT        -P OUTPUT      DROP</para>
                <para> $IPT        -P FORWARD     DROP</para>
                <para># Очищаем все существуещие цепочки и стираем дополнительные</para>
                <para> CHAINS=`cat /proc/net/ip_tables_names 2&gt;/dev/null`</para>
                <para> for i in $CHAINS;</para>
                <para> do</para>
                <para>   $IPT -t $i -F</para>
                <para> done</para>
                <para> for i in $CHAINS;</para>
                <para> do</para>
                <para>   $IPT -t $i -X</para>
                <para> done</para>
                <para> $IPT -A INPUT   -i $INTIF1 -p tcp --dport 22 --syn -m state --state NEW -j ACCEPT</para>
            </section>
            <section>
                <info>
                    <title>Sysctl'ы</title>
                </info>
                <para>Сразу после этого мы запустим sysctl'ы для tcp_syncookies, icmp_echo_ignore_broadcasts, rp_filter и accept_source_routе. До этого момента многие правила, которые мы "проверяли", фактически не выполнялись. По сути, мы просто делали проверку синтаксических ошибок. Теперь наши правила будут выполняться в полной мере: </para>
                <para>echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies</para>
                <para>echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts</para>
                <para># Проверка адреса источника</para>
                <para>for f in /proc/sys/net/ipv4/conf/*/rp_filter;</para>
                <para>do</para>
                <para> echo 1 &gt; $f</para>
                <para>done</para>
                <para># Отключаем роутинг источника IP и ICMP-редиректы</para>
                <para>for f in /proc/sys/net/ipv4/conf/*/accept_source_route;</para>
                <para>do</para>
                <para> echo 0 &gt; $f</para>
                <para>done</para>
                <para>for f in /proc/sys/net/ipv4/conf/*/accept_redirects;</para>
                <para>do</para>
                <para> echo 0 &gt; $f</para>
                <para>done</para>
                <para>echo 1 &gt; /proc/sys/net/ipv4/ip_forward</para>
                <para>Теперь мы собираемся добавить трекинг ftp-соединения, так что нам не доведётся наблюдать ошибки PASV при установке паков: </para>
                <para># Запускаем трекинг ftp-соединения</para>
                <para>MODULES="ip_nat_ftp ip_conntrack_ftp"</para>
                <para>for i in $MODULES;</para>
                <para>do</para>
                <para> echo "Добавляем модуль $i"</para>
                <para> modprobe $i</para>
                <para>done</para>
            </section>
            <section>
                <info>
                    <title>Базовая конфигурация NAT</title>
                </info>
                <para>А сейчас возвратимся к концу нашего скрипта, поскольку мы собираемся открыть сервисы для хостов, находящихся за файерволом. Я включил следующие сервисы: IRC, MSN, ICQ, and NFS, FTP, domain,time и некоторые другие. Самое главное здесь то, что эти сервисы могут использоваться ТОЛЬКО ЗА файерволом.Таким образом никто не сможет их использовать по ftp внутри Вашей локальной сетки: </para>
                <para>IRC='ircd'</para>
                <para>MSN=1863</para>
                <para>ICQ=5190</para>
                <para>NFS='sunrpc'</para>
                <para># Мы пользуемся sync!!</para>
                <para>PORTAGE='rsync'</para>
                <para>OpenPGP_HTTP_Keyserver=11371</para>
                <para># Все порты сервисов считываются из /etc/services</para>
                <para>TCPSERV="domain ssh http https ftp ftp-data mail pop3 pop3s imap3 imaps imap2 time $PORTAGE $IRC $MSN $ICQ $OpenPGP_HTTP_Keyserver"</para>
                <para>UDPSERV="domain time"</para>
                <para>echo -n "FW: Allowing inside systems to use service:"</para>
                <para>for i in $TCPSERV;</para>
                <para>do</para>
                <para> echo -n "$i "</para>
                <para> $IPT -A OUTPUT  -o $EXTIF -p tcp -s $EXTIP --dport $i --syn -m state --state NEW -j ACCEPT</para>
                <para> $IPT -A FORWARD -i $INTIF1 -p tcp -s $INTNET1 --dport $i --syn -m state --state NEW -j ACCEPT</para>
                <para> $IPT -A FORWARD -i $INTIF2 -p tcp -s $INTNET2 --dport $i --syn -m state --state NEW -j ACCEPT</para>
                <para>done</para>
                <para>echo ""</para>
                <para>echo -n "FW: Allowing inside systems to use service:"</para>
                <para>for i in $UDPSERV;</para>
                <para>do</para>
                <para> echo -n "$i "</para>
                <para> $IPT -A OUTPUT  -o $EXTIF -p udp -s $EXTIP --dport $i -m state --state NEW -j ACCEPT</para>
                <para>   $IPT -A FORWARD -i $INTIF1 -p udp -s $INTNET1 --dport $i -m state --state NEW -j ACCEPT</para>
                <para>   $IPT -A FORWARD -i $INTIF2 -p udp -s $INTNET2 --dport $i -m state --state NEW -j ACCEPT</para>
                <para>done</para>
                <para>echo ""</para>
                <para>Теперь сделаем так, чтобы файервол позволил нам пинговать внешний мир. Для этого разрешим прохождение icmp-пакетов через внешний интерфейс: </para>
                <para># Разрешаем внешнее пингование</para>
                <para>$IPT -A OUTPUT  -o $EXTIF -p icmp -s $EXTIP --icmp-type 8 -m state --state NEW -j ACCEPT</para>
                <para>$IPT -A FORWARD -i $INTIF1 -p icmp -s $INTNET1 --icmp-type 8 -m state --state NEW -j ACCEPT</para>
                <para>$IPT -A FORWARD -i $INTIF2 -p icmp -s $INTNET2 --icmp-type 8 -m state --state NEW -j ACCEPT</para>
                <para>                                                                              </para>
                <para># Разрешим файерволу пинговать наши внутренние сетки:</para>
                <para>$IPT -A OUTPUT  -o $INTIF1 -p icmp -s $INTNET1 --icmp-type 8 -m state --state NEW -j ACCEPT</para>
                <para>$IPT -A OUTPUT  -o $INTIF2 -p icmp -s $INTNET2 --icmp-type 8 -m state --state NEW -j ACCEPT</para>
                <para>Теперь мы по умолчанию будем записывать в журнал все прочие запросы, но никак не будем на них реагировать. Все что нам надо было принять мы описали в начале наших правил. Так что заканчиваем правила блокировкой всего, что специально не разрешено: </para>
                <para># Заблокируем все, что осталось:</para>
                <para> $IPT -A INPUT             -j DROPl</para>
                <para> $IPT -A OUTPUT            -j REJECTl</para>
                <para> $IPT -A FORWARD           -j DROPl</para>
                <para>Итак, все сделано. я имею дружественные nmap и nessus для моих соединений с вышеописанным набором правил и ничего не препятствует использованию IRC, MSN, ICQ, и emerge sync. </para>
            </section>
            <section>
                <info>
                    <title>The full script</title>
                </info>
                <para>А сейчас, полноценный скрипт во всей своей красе (Заодно я поместил форвардинг ssh в более подходящее для него место): </para>
                <para># Внешний интерфейс</para>
                <para> EXTIF=ppp0</para>
                <para># Внутренний интерфейс</para>
                <para> INTIF1=eth1</para>
                <para> INTIF2=eth2</para>
                <para># Loop-устройство/localhost</para>
                <para> LPDIF=lo</para>
                <para> LPDIP=127.0.0.1</para>
                <para> LPDMSK=255.0.0.0</para>
                <para> LPDNET="$LPDIP/$LPDMSK"</para>
                <para># Переменные текстовых инструментов</para>
                <para> IPT='/sbin/iptables'</para>
                <para> IFC='/sbin/ifconfig'</para>
                <para> G='/bin/grep'</para>
                <para> SED='/bin/sed'</para>
                <para># Последнее (но немаловажное) — пользователи</para>
                <para> JAMES=192.168.1.77</para>
                <para> TERESA=192.168.2.77</para>
                <para># Deny вместо accept: предотвращает открытие "дыр"</para>
                <para># в то время, как мы закрываем порты и все такое</para>
                <para> $IPT        -P INPUT       DROP</para>
                <para> $IPT        -P OUTPUT      DROP</para>
                <para> $IPT        -P FORWARD     DROP</para>
                <para># Сброс всех существующих цепочек и стирание персональных цепочек</para>
                <para> CHAINS=`cat /proc/net/ip_tables_names 2&gt;/dev/null`</para>
                <para> for i in $CHAINS</para>
                <para> do</para>
                <para>  $IPT -t $i -F</para>
                <para>  $IPT -t $i -X</para>
                <para> done</para>
                <para> echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies</para>
                <para> echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts</para>
                <para># Проверка адреса источника</para>
                <para> for f in /proc/sys/net/ipv4/conf/*/rp_filter;</para>
                <para> do</para>
                <para>  echo 1 &gt; $f</para>
                <para> done</para>
                <para># Запрет маршрутизации IP от источника и редиректов ICMP</para>
                <para> for f in /proc/sys/net/ipv4/conf/*/accept_source_route;</para>
                <para> do</para>
                <para>  echo 0 &gt; $f</para>
                <para> done</para>
                <para> for f in /proc/sys/net/ipv4/conf/*/accept_redirects;</para>
                <para> do</para>
                <para>  echo 0 &gt; $f</para>
                <para> done</para>
                <para> echo 1 &gt; /proc/sys/net/ipv4/ip_forward</para>
                <para># Установка переменных среды для внешнего интерфейса</para>
                <para> EXTIP="`$IFC $EXTIF|$G addr:|$SED 's/.*addr:\([^ ]*\) .*/\1/'`"</para>
                <para> #EXTBC="`$IFC $EXTIF|$G Bcast:|$SED 's/.*Bcast:\([^ ]*\) .*/\1/'`"</para>
                <para> EXTBC="255.255.255.255"</para>
                <para> EXTMSK="`$IFC $EXTIF|$G Mask:|$SED 's/.*Mask:\([^ ]*\)/\1/'`"</para>
                <para> EXTNET="$EXTIP/$EXTMSK"</para>
                <para> #echo "EXTIP=$EXTIP EXTBC=$EXTBC EXTMSK=$EXTMSK EXTNET=$EXTNET"</para>
                <para> echo "EXTIP=$EXTIP EXTBC=$EXTBC EXTMSK=$EXTMSK EXTNET=$EXTNET"</para>
                <para># Так как EXTBC отсутствует, я устанавливаю ее вручную как it to 255.255.255.255</para>
                <para># Это (надеюсь) послужит тем же целям</para>
                <para># Устанвка переменных среды для первого внутреннего интерфейса</para>
                <para> INTIP1="`$IFC $INTIF1|$G addr:|$SED 's/.*addr:\([^ ]*\) .*/\1/'`"</para>
                <para> INTBC1="`$IFC $INTIF1|$G Bcast:|$SED 's/.*Bcast:\([^ ]*\) .*/\1/'`"</para>
                <para> INTMSK1="`$IFC $INTIF1|$G Mask:|$SED 's/.*Mask:\([^ ]*\)/\1/'`"</para>
                <para> INTNET1="$INTIP1/$INTMSK1"</para>
                <para> echo "INTIP1=$INTIP1 INTBC1=$INTBC1 INTMSK1=$INTMSK1 INTNET1=$INTNET1"</para>
                <para># Установка переменных среды для второго внутреннего интерфейса</para>
                <para> INTIP2="`$IFC $INTIF2|$G addr:|$SED 's/.*addr:\([^ ]*\) .*/\1/'`"</para>
                <para> INTBC2="`$IFC $INTIF2|$G Bcast:|$SED 's/.*Bcast:\([^ ]*\) .*/\1/'`"</para>
                <para> INTMSK2="`$IFC $INTIF2|$G Mask:|$SED 's/.*Mask:\([^ ]*\)/\1/'`"</para>
                <para> INTNET2="$INTIP2/$INTMSK2"</para>
                <para> echo "INTIP2=$INTIP2 INTBC2=$INTBC2 INTMSK2=$INTMSK2 INTNET2=$INTNET2"</para>
                <para># Сейчас мы собираемся создать несколько собственных цепочек, результатом работы </para>
                <para># которых будет логгинг отброшенных пакетов. Это поможет нам избежать необходимости</para>
                <para># вводить команду log перед каждым отбрасыванием пакета, что мы хотим запротоколировать.</para>
                <para># Первыми идут лог отброшенных пакетов и собственно отброс, затем лог пакетов с отказами</para>
                <para># и собственно отказы.</para>
                <para># Отключаем сообщения о том, что цепочки уже существуют (чтобы перезапуск был без мусора)</para>
                <para> $IPT -N DROPl   2&gt; /dev/null</para>
                <para> $IPT -A DROPl   -j LOG --log-prefix 'DROPl:'</para>
                <para> $IPT -A DROPl   -j DROP</para>
                <para> $IPT -N REJECTl 2&gt; /dev/null</para>
                <para> $IPT -A REJECTl -j LOG --log-prefix 'REJECTl:'</para>
                <para> $IPT -A REJECTl -j REJECT</para>
                <para># Весь траффик от устройства loopback принимается</para>
                <para># если IP совпадает с любым из наших интерфейсов.</para>
                <para> $IPT -A INPUT   -i $LPDIF -s   $LPDIP  -j ACCEPT</para>
                <para> $IPT -A INPUT   -i $LPDIF -s   $EXTIP  -j ACCEPT</para>
                <para> $IPT -A INPUT   -i $LPDIF -s   $INTIP1  -j ACCEPT</para>
                <para> $IPT -A INPUT   -i $LPDIF -s   $INTIP2  -j ACCEPT</para>
                <para># Широковещательные пакеты блокируем</para>
                <para> $IPT -A INPUT   -i $EXTIF -d   $EXTBC  -j DROPl</para>
                <para> $IPT -A INPUT   -i $INTIF1 -d   $INTBC1  -j DROPl</para>
                <para> $IPT -A INPUT   -i $INTIF2 -d   $INTBC2  -j DROPl</para>
                <para> $IPT -A OUTPUT  -o $EXTIF -d   $EXTBC  -j DROPl</para>
                <para> $IPT -A OUTPUT  -o $INTIF1 -d   $INTBC1  -j DROPl</para>
                <para> $IPT -A OUTPUT  -o $INTIF2 -d   $INTBC2  -j DROPl</para>
                <para> $IPT -A FORWARD -o $EXTIF -d   $EXTBC  -j DROPl</para>
                <para> $IPT -A FORWARD -o $INTIF1 -d   $INTBC1  -j DROPl</para>
                <para> $IPT -A FORWARD -o $INTIF2 -d   $INTBC2  -j DROPl</para>
                <para># Блокируем доступ к внутренней сети из WAN</para>
                <para># Это также призвано не дать нечестивым крякерам использовать нашу сетку </para>
                <para># в качестве отправной точки для атак на других людей</para>
                <para># Перевод с языка iptables:</para>
                <para># "если пришедшие на наружный интерфейс пакеты были отправлены не с выданного</para>
                <para># nefarious адреса, выкинуть их как горячую картошку"</para>
                <para> $IPT -A INPUT   -i $EXTIF -d ! $EXTIP  -j DROPl</para>
                <para># А сейчас мы блокируем внутренние адреса, кроме двух, присвоенных нашим двум</para>
                <para># внутренним интерфейсам.....только помните, что если вы воткнете свой лэптоп или</para>
                <para># какой другой pc в напрямую в одну из этих сетевых карт, то нужно удостовериться,</para>
                <para># что они имеют именно эти IP-адреса или добавить соответствующий адрес отдельно.               </para>
                <para># Первый интерфейс/первая внутренняя сеть</para>
                <para> $IPT -A INPUT   -i $INTIF1 -s ! $INTNET1 -j DROPl</para>
                <para> $IPT -A OUTPUT  -o $INTIF1 -d ! $INTNET1 -j DROPl</para>
                <para> $IPT -A FORWARD -i $INTIF1 -s ! $INTNET1 -j DROPl</para>
                <para> $IPT -A FORWARD -o $INTIF1 -d ! $INTNET1 -j DROPl</para>
                <para># Второй интерфейс/вторая внутренняя сеть</para>
                <para> $IPT -A INPUT   -i $INTIF2 -s ! $INTNET2 -j DROPl</para>
                <para> $IPT -A OUTPUT  -o $INTIF2 -d ! $INTNET2 -j DROPl</para>
                <para> $IPT -A FORWARD -i $INTIF2 -s ! $INTNET2 -j DROPl</para>
                <para> $IPT -A FORWARD -o $INTIF2 -d ! $INTNET2 -j DROPl</para>
                <para># Дополнительная Egress-проверка</para>
                <para> $IPT -A OUTPUT  -o $EXTIF -s ! $EXTNET -j DROPl</para>
                <para># Блокируем исходящиие пакеты ICMP (за исключением PING)</para>
                <para> $IPT -A OUTPUT  -o $EXTIF -p icmp --icmp-type ! 8 -j DROPl</para>
                <para> $IPT -A FORWARD -o $EXTIF -p icmp --icmp-type ! 8 -j DROPl</para>
                <para># печально известные порты:</para>
                <para># 0 — tcpmux; у SGI есть уязвимость, через которую можно атаковать</para>
                <para># 13 — daytime</para>
                <para># 98 — Linuxconf</para>
                <para># 111 — sunrpc (portmap)</para>
                <para># 137:139, 445 — Microsoft</para>
                <para># SNMP: 161,2</para>
                <para># Флотилия Squid: 3128, 8000, 8008, 8080</para>
                <para># 1214 — Morpheus или KaZaA</para>
                <para># 2049 — NFS</para>
                <para># 3049 — очень заразный троян для Linux, часто путаемый с NFS</para>
                <para># Часто атакуемые: 1999, 4329, 6346</para>
                <para># Частые трояны 12345 65535</para>
                <para> COMBLOCK="0:1 13 98 111 137:139 161:162 445 1214 1999 2049 3049 4329 6346 3128 8000 8008 8080 12345 65535"</para>
                <para># Порты TCP:</para>
                <para># 98 — Linuxconf</para>
                <para># 512-5!5 — rexec, rlogin, rsh, printer(lpd)</para>
                <para>#   [очень серьезеные уязвимости; продолжаются ежедневные атаки]</para>
                <para># 1080 — прокси-серверы Socks</para>
                <para># 6000 — X (ЗАМЕЧАНИЕ. X через SSH — безопасен, и работает на порту TCP 22)</para>
                <para># Блокировка 6112 (CDE у Sun и HP)</para>
                <para> TCPBLOCK="$COMBLOCK 98 512:515 1080 6000:6009 6112"</para>
                <para># Порты UDP:</para>
                <para># 161:162 — SNMP</para>
                <para># 520=RIP, 9000 — Sangoma</para>
                <para># 517:518 — talk и ntalk (самые надоедливые)</para>
                <para> UDPBLOCK="$COMBLOCK 161:162 520 123 517:518 1427 9000"</para>
                <para>echo -n "FW: Blocking attacks to TCP port"</para>
                <para>for i in $TCPBLOCK;</para>
                <para>do</para>
                <para> echo -n "$i "</para>
                <para>  $IPT -A INPUT   -p tcp --dport $i  -j DROPl</para>
                <para>  $IPT -A OUTPUT  -p tcp --dport $i  -j DROPl</para>
                <para>  $IPT -A FORWARD -p tcp --dport $i  -j DROPl</para>
                <para>done</para>
                <para>echo ""</para>
                <para>echo -n "FW: Blocking attacks to UDP port "</para>
                <para>for i in $UDPBLOCK;</para>
                <para>do</para>
                <para> echo -n "$i "</para>
                <para>  $IPT -A INPUT   -p udp --dport $i  -j DROPl</para>
                <para>  $IPT -A OUTPUT  -p udp --dport $i  -j DROPl</para>
                <para>  $IPT -A FORWARD -p udp --dport $i  -j DROPl</para>
                <para>done</para>
                <para>echo ""</para>
                <para># Открываем отлеживание соединений по ftp</para>
                <para> MODULES="ip_nat_ftp ip_conntrack_ftp"</para>
                <para> for i in $MODULES;</para>
                <para> do</para>
                <para>  echo "Inserting module $i"</para>
                <para>  modprobe $i</para>
                <para> done</para>
                <para># Защищаем некоторые распространенные клиенты для чата.</para>
                <para># Уберите из списка допустимых для пущей безопасности.</para>
                <para> IRC='ircd'</para>
                <para> MSN=1863</para>
                <para> ICQ=5190</para>
                <para> NFS='sunrpc'</para>
                <para># Нам нужно синхронизировать данные!!</para>
                <para> PORTAGE='rsync'</para>
                <para> OpenPGP_HTTP_Keyserver=11371</para>
                <para># Все порты сервисов читаются из /etc/services</para>
                <para> TCPSERV="domain ssh http https ftp ftp-data mail pop3 pop3s imap3 imaps imap2 time $PORTAGE $IRC $MSN $ICQ  $OpenPGP_HTTP_Keyserver" UDPSERV="domain time"</para>
                <para>echo -n "FW: Allowing inside systems to use service:"</para>
                <para>for i in $TCPSERV;</para>
                <para>do</para>
                <para> echo -n "$i "</para>
                <para>  $IPT -A OUTPUT  -o $EXTIF -p tcp -s $EXTIP --dport $i --syn -m state --state NEW -j ACCEPT</para>
                <para>  $IPT -A FORWARD -i $INTIF1 -p tcp -s $INTNET1 --dport $i --syn -m state --state NEW -j ACCEPT</para>
                <para>  $IPT -A FORWARD -i $INTIF2 -p tcp -s $INTNET2 --dport $i --syn -m state --state NEW -j ACCEPT</para>
                <para>done</para>
                <para>echo ""</para>
                <para>echo -n "FW: Allowing inside systems to use service:"</para>
                <para>for i in $UDPSERV;</para>
                <para>do</para>
                <para> echo -n "$i "</para>
                <para>  $IPT -A OUTPUT  -o $EXTIF -p udp -s $EXTIP --dport $i -m state --state NEW -j ACCEPT</para>
                <para>  $IPT -A FORWARD -i $INTIF1 -p udp -s $INTNET1 --dport $i -m state --state NEW -j ACCEPT</para>
                <para>  $IPT -A FORWARD -i $INTIF2 -p udp -s $INTNET2 --dport $i -m state --state NEW -j ACCEPT</para>
                <para>done</para>
                <para>echo ""</para>
                <para># Разрешается ping наружу</para>
                <para>$IPT -A OUTPUT  -o $EXTIF -p icmp -s $EXTIP --icmp-type 8 -m state --state NEW -j ACCEPT</para>
                <para>$IPT -A FORWARD -i $INTIF1 -p icmp -s $INTNET1 --icmp-type 8 -m state --state NEW -j ACCEPT</para>
                <para>$IPT -A FORWARD -i $INTIF2 -p icmp -s $INTNET2 --icmp-type 8 -m state --state NEW -j ACCEPT</para>
                <para># Файерволу разрешается ping внутренних систем</para>
                <para>$IPT -A OUTPUT  -o $INTIF1 -p icmp -s $INTNET1 --icmp-type 8 -m state --state NEW -j ACCEPT</para>
                <para>$IPT -A OUTPUT  -o $INTIF2 -p icmp -s $INTNET2 --icmp-type 8 -m state --state NEW -j ACCEPT                                                                                                                                                             </para>
                <para>$IPT -A INPUT   -i $INTIF1 -p tcp --dport 22 --syn -m state --state NEW -j ACCEPT</para>
                <para>$IPT -t nat -A PREROUTING -j ACCEPT</para>
                <para>$IPT -t nat -A POSTROUTING -o $EXTIF -s $INTNET1 -j MASQUERADE</para>
                <para>$IPT -t nat -A POSTROUTING -o $EXTIF -s $INTNET2 -j MASQUERADE</para>
                <para>$IPT -t nat -A POSTROUTING -j ACCEPT</para>
                <para>$IPT -t nat -A OUTPUT -j ACCEPT</para>
                <para>$IPT -A INPUT -p tcp --dport auth --syn -m state --state NEW -j ACCEPT</para>
                <para>$IPT -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</para>
                <para>$IPT -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</para>
                <para>$IPT -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT</para>
                <para># Заблокировать и запротоколировать все, что мы могли забыть.</para>
                <para>$IPT -A INPUT -j DROPl</para>
                <para>$IPT -A OUTPUT -j REJECTl</para>
                <para>$IPT -A FORWARD -j DROPl</para>
            </section>
        </section>
        <section>
            <info>
                <title>Установка почтовой системы</title>
            </info>
            <para>Установка почтовой системы на Gentoo linux для небольшой конторы </para>
            <para>Используется postfix + cyrus-imap, авторизация пользователей через cyrus-sasl без прикручивания какой-либо БД (подходит для контор с несколькими десятками почтовых ящиков — хранить что-либо в mysql или postgress в данном случае нет смысла). Пользователи хранятся в базе sasldb, поэтому нет нужды заводить в системе реальных пользователей. </para>
            <para>Возможно при установке указанных пакетов понадобится установить все зависимости, которые они за собой тянут. Предоставим системе самой разобраться, что же ей не хватает — она с этим вполне успешно справляется. </para>
            <para>Предпочитаю использовать для /var reiserfs, но это сугубо личные предпочтения. </para>
            <para>emerge -pv cyrus-sasl</para>
            <para>[ebuild   N   ] dev-libs/cyrus-sasl-2.1.20  -authdaemond +berkdb -debug +gdbm +java -kerberos -ldap +mysql  +pam -postgres +ssl -static 0 kB</para>
            <para>На всякий случай проверяем флаги — все ОК </para>
            <para>emerge cyrus-sasl</para>
            <para>Этот пакет поставили, едем дальше </para>
            <para>emerge -pv postfix</para>
            <para>These are the packages that I would merge, in order:</para>
            <para> Calculating dependencies ...done!</para>
            <para>[ebuild   N   ] mail-mta/postfix-2.1.5-r1  +ipv6 -ldap -mailwrapper -mbox +mysql +pam -postgres -sasl*(-selinux) +ssl -vda 0 kB</para>
            <para>Здесь нам может пригодиться флаг sasl, хотя в моем случае пока нет нужды авторизоваться на smtp, возможно в дальнейшем здесь будет описана авторизация через cyrus-sasl на smtp — вообщем выставляйте флаги по вкусу кому что надо </para>
            <para>USE="sasl" emerge postfix</para>
            <para>Постфикс собрался </para>
            <para>emerge -pv cyrus-imapd</para>
            <para>These are the packages that I would merge, in order:</para>
            <para>Calculating dependencies ...done!</para>
            <para>[ebuild   N   ] net-mail/cyrus-imapd-2.2.10  -afs -drac -idled -kerberos +pam -snmp +ssl +tcpd 0 kB</para>
            <para>После проверки и установки нужных нам флагов пересобираем openssl и imap-сервер </para>
            <para>emerge cyrus-imapd</para>
            <para>Программа для администрирования имаповских ящиков </para>
            <para>emerge cyrus-imap-admin</para>
            <para>После того как все нужные нам пакеты поставлены, можно приступать к настройке </para>
            <para>сначала cyrus-sasl </para>
            <para>passwd cyrus</para>
            <para>pwconv</para>
            <para>chown -R cyrus:mail /etc/sasl2 — доступ cyrus к базе /etc/sasl2/sasldb2</para>
            <para>saslpasswd2 cyrus — заводим в sasldb2 </para>
            <para>sasldblistusers2 — для проверки</para>
            <section>
                <info>
                    <title>Разбираемся с postfix </title>
                </info>
                <para>Cодержимое /etc/postfix/main.cf, ниже приведена примерная конфигурация почтового сервера подключенного напрямую к инету (не через relayhost), естественно для этого случая должна быть MX-запись в ДНС. Подчеркиваю, что умышленно опускаю многие параметры в main.cf, чтобы не раздувать описание. Добавьте все остальное руководствуясь документацией postfix. </para>
                <para>queue_directory = /var/spool/postfix</para>
                <para>command_directory = /usr/sbin</para>
                <para>daemon_directory = /usr/lib/postfix</para>
                <para>mail_owner = postfix</para>
                <para>myhostname = mail.domain.tld</para>
                <para>mydomain = mail.domain.tld</para>
                <para>myorigin = $mydomain</para>
                <para>inet_interfaces = all</para>
                <para>mydestination = $myhostname, localhost.$mydomain, localhost, $mydomain</para>
                <para>local_recipient_maps =</para>
                <para>unknown_local_recipient_reject_code = 550</para>
                <para>mynetworks_style = subnet</para>
                <para>mynetworks = 192.168.1.0/24, 127.0.0.0/8</para>
                <para>relay_domains = $mydestination</para>
                <para>НА ЭТУ СТРОЧКУ ОБРАТИТЕ ВНИМАНИЕ!!! </para>
                <para>mailbox_transport = lmtp:unix:/var/imap/socket/lmtp</para>
                <para>Если надо подключить procmail то вместо нее пишем</para>
                <para>mailbox_transport = procmail</para>
                <para>Когда добавили все, что нужно в main.cf, идем в /etc/postfix/master.cf </para>
                <para>Ищем такую строку </para>
                <para> # Also specify in main.cf: cyrus_destination_recipient_limit=1</para>
                <para>cyrus     unix  -       n       n       —       —       pipe</para>
                <para> user=cyrus argv=/cyrus/bin/deliver -e -r ${sender} -m ${extension} ${user}</para>
                <para> </para>
                <para>И заменяем путь на </para>
                <para> # Also specify in main.cf: cyrus_destination_recipient_limit=1</para>
                <para>cyrus     unix  -       n       n       —       —       pipe</para>
                <para> user=cyrus argv=/cyrus/deliver -e -r ${sender} -m ${extension} ${user}</para>
                <para>При использовании procmail, добавляем </para>
                <para>procmail unix  -       n      n       —        -       pipe</para>
                <para> flags=R user=cyrus argv=/usr/bin/procmail -p /etc/procmailrc  USER=${user}</para>
                <para>Где файл /etc/procmailrc : </para>
                <para>DELIVERMAIL=/usr/lib/cyrus/deliver</para>
                <para>LOGFILE=/var/log/procmaillog</para>
                <para>IMAP="$DELIVERMAIL -e -a $USER -m user.$USER"</para>
                <para>(если надо подключить spamassassin)</para>
                <para>:0fw : spamassassin.lock</para>
                <para>* &lt; 90000</para>
                <para>| /usr/bin/spamassassin</para>
                <para>и далее обязательно</para>
                <para>:0</para>
                <para>| $IMAP</para>
                <para>:0w</para>
                <para>{</para>
                <para>EXITCODE=$?</para>
                <para>HOST</para>
                <para>}  </para>
                <para>Все, с постфиксом разобрались, теперь cyrus-imapd </para>
                <para>Редактируем /etc/cyrus.conf </para>
                <para># $Header: /var/cvsroot/gentoo-x86/net-mail/cyrus-imapd/files/cyrus.conf,v 1.4 2004/07/18 04:02:23 dragonheart  Exp $</para>
                <para># Standard standalone server configuration.</para>
                <para>START {</para>
                <para> # Do not delete this entry!</para>
                <para> recover        cmd="ctl_cyrusdb -r"</para>
                <para> # This is only necessary if using idled for IMAP IDLE.</para>
                <para> #idled                cmd="idled"</para>
                <para>}</para>
                <para># UNIX sockets start with a slash and are put into /var/imap/socket.</para>
                <para>SERVICES {</para>
                <para>  # Add or remove based on preferences.</para>
                <para>  imap                cmd="imapd" listen="imap2" prefork=0</para>
                <para>  pop3                cmd="pop3d" listen="pop-3" prefork=0</para>
                <para>   # Don't forget to generate the needed keys for SSL or TLS</para>
                <para>  # (see doc/html/install-configure.html).</para>
                <para>  imaps                cmd="imapd -s" listen="imaps" prefork=0</para>
                <para>  pop3s                cmd="pop3d -s" listen="pop3s" prefork=0</para>
                <para>  sieve                cmd="timsieved" listen="sieve" prefork=0</para>
                <para>  # at least one LMTP is required for delivery</para>
                <para>  #lmtp                cmd="lmtpd" listen="lmtp" prefork=0</para>
                <para>   ##ОБРАТИТЕ ВНИМАНИЕ НА ЭТУ СТРОКУ</para>
                <para>  lmtpunix        cmd="lmtpd" listen="/var/imap/socket/lmtp" prefork=0</para>
                <para>     # this is only necessary if using notifications</para>
                <para>  #notify        cmd="notifyd" listen="/var/imap/socket/notify" proto="udp" prefork=1</para>
                <para>}</para>
                <para>EVENTS {</para>
                <para>  # This is required.</para>
                <para>  checkpoint        cmd="ctl_cyrusdb -c" period=30</para>
                <para>  # This is only necessary if using duplicate delivery suppression.</para>
                <para>  delprune        cmd="ctl_deliver -E 3" period=1440</para>
                <para>  # This is only necessary if caching TLS sessions.</para>
                <para>  tlsprune        cmd="tls_prune" period=1440</para>
                <para>}</para>
                <para>Вот так делаем сертификаты </para>
                <para>openssl req -new -nodes -out req.pem -keyout key.pem  </para>
                <para>openssl rsa -in key.pem -out new.key.pem</para>
                <para>openssl x509 -in req.pem -out ca-cert -req \</para>
                <para>-signkey new.key.pem -days 999 </para>
                <para>cp new.key.pem /etc/ssl/cyrus/server.pem</para>
                <para>rm new.key.pem</para>
                <para>cat ca-cert &gt;&gt; /etc/ssl/cyrus/server.pem</para>
                <para>chown cyrus:mail /etc/ssl/cyrus/server.pem</para>
                <para>chmod 600 /etc/ssl/cyrus/server.pem # Your key should be protected</para>
                <para>Проверяем все-ли директории созданы </para>
                <para>/var/imap</para>
                <para>cd /var</para>
                <para>mkdir imap</para>
                <para>chown cyrus:mail imap</para>
                <para>chmod 750 imap</para>
                <para>/var/spool/imap </para>
                <para>cd /var/spool</para>
                <para>mkdir imap</para>
                <para>chown cyrus:mail imap</para>
                <para>chmod 750 imap</para>
                <para>/usr/sieve</para>
                <para>cd /usr</para>
                <para>mkdir sieve</para>
                <para>chown cyrus:mail sieve</para>
                <para>chmod 750 sieve</para>
                <para>Далее редактируем /etc/imapd.conf </para>
                <para>configdirectory:        /var/imap</para>
                <para>partition-default:        /var/spool/imap</para>
                <para>auto_transition:        yes</para>
                <para>tls_ca_path:           /etc/ssl/cyrus</para>
                <para>tls_cert_file:                /etc/ssl/cyrus/server.pem</para>
                <para>tls_key_file:                /etc/ssl/cyrus/server.pem</para>
                <para>admins:                        cyrus</para>
                <para>hashimapspool:                yes</para>
                <para>allowanonymouslogin:        no</para>
                <para>allowplaintext:                yes</para>
                <para>sasl_pwcheck_method:        auxprop</para>
                <para>sasl_auxprop_plugin:        sasldb</para>
                <para>sasldb_path:                /etc/sasl2/sasldb2</para>
                <para>sasl_mech_list:                LOGIN PLAIN </para>
                <para>Авторизация через базу sasldb, механизмы авторизации LOGIN,PLAIN Если мы будем использовать обычные открытые пароли, без шифрования (например внутри организации) то изменим в /etc/imapd.conf </para>
                <para>allowanonymouslogin: yes</para>
                <para>вроде бы с настройкой cyrus покончено </para>
                <para>Теперь займемся почтовыми ящиками юзеров, для этого используем программу cyradm </para>
                <para>/etc/init.d/cyrus start</para>
                <para>cyradm -user cyrus -server localhost</para>
                <para>localhost&gt; cm user.testuser</para>
                <para>localhost&gt; help — выводит все команды для руления юзерскими ящиками</para>
                <para>localhost&gt; exit</para>
                <para>Не забудьте забить в sasldb2 нового юзера: </para>
                <para>saslpasswd2 testuser </para>
                <para>Поднимаем сервисы </para>
                <para>/etc/init.d/postfix start</para>
                <para>/etc/init.d/cyrus start</para>
                <para>Настраиваем почтового клиента (проверено с thunderbird 1.0 и с KMail 1.7.1, с Outlook Express тоже не должно быть проблем). </para>
                <para>Пробуем отправить письмо, если что-то не работает — смотрим логи, прежде всего проверьте права на доступ в /var/imap/socket/lmtp для пользователей postfix и cyrus, чаще всего проблемы связаны именно с этим. Также проверьте права на доступ к /etc/sasl2/sasldb2 для пользователя cyrus, который должен быть в группе mail. </para>
                <para>Желательно поставить антивирус например clamav используем для этого связку clamav + clamsmtp хотя возможны и другие варианты например amavisd-new. Установка прекрасно описана здесь http://www.nixp.ru/articles/clamav_postfix, необходимо руководствоваться ей,естественно с адаптацией под реалии Gentoo </para>
                <para>emerge clamav</para>
                <para>ACCEPT_KEYWORDS="~x86" emerge clamsmtp (пока замаскирован в портаджах)</para>
                <para>Затем в файле /etc/conf.d/clamd START_CLAMD = yes (для версии старше 0.85 уже не актуально — все настройки только в clamd.conf и clamsmtpd.conf) </para>
                <para>Редактируем файлы /etc/clamd.conf и /etc/clamsmtpd.conf в соответствии с рекомендациями приведенными выше по ссылке Обратите внимание на параметры LocalSocket: /var/run/clamav/clamd.sock в /etc/clamav.conf и ClamAddress: /var/run/clamav/clamd.sock в /etc/clamsmtpd.conf — путь и имя файла должен одинаковым для обоих конфигов </para>
                <para>В файл main.cf необходимо добавить две строчки: </para>
                <para>content_filter = scan:127.0.0.1:10025</para>
                <para>receive_override_options = no_address_mappings</para>
                <para>Первая говорит postfix'у о том, что необходимо пересылать всю почту через сервис (фильтр) 'scan' на 10025-ый порт, который, как раз, открыт clamsmtpd. Вторая строчка говорит о том, чтобы postfix не делал никаких манипуляций с адресами до того, как они дойдут до content_filter. Так что получается, что фильтр работает с реальными почтовыми адресами, а не с результатами перевода в виртуальные псевдонимы, маскарадингом и т.п. </para>
                <para>В файл master.cf необходимо добавить следующие строки: </para>
                <para># AV scan filter (used by content_filter)</para>
                <para>scan      unix  -       —       n       —       16      smtp</para>
                <para>       -o smtp_send_xforward_command=yes</para>
                <para># For injecting mail back into postfix from the filter</para>
                <para>127.0.0.1:10026 inet  n —       n       —       16      smtpd</para>
                <para>       -o content_filter=</para>
                <para>       -o receive_override_options=no_unknown_recipient_checks,no_header_body_checks</para>
                <para>       -o smtpd_helo_restrictions=</para>
                <para>        -o smtpd_client_restrictions=</para>
                <para>       -o smtpd_sender_restrictions=</para>
                <para>       -o smtpd_recipient_restrictions=permit_mynetworks,reject</para>
                <para>       -o mynetworks_style=host</para>
                <para>       -o smtpd_authorized_xforward_hosts=127.0.0.0/8</para>
                <para>Примечание: вокруг знака '=' пробелы не ставить. Значение 127.0.0.1:10026 открывает 10026-порт для возвращения почты обратно от clamsmtpd. </para>
                <para>rc-update add clamd default</para>
                <para>rc-update add clamsmtpd default</para>
                <para>/etc/init.d/postfix reload</para>
                <para>все — антивирус должен проверять всю почту проходящую через Ваш почтовик </para>
                <para>P.S. Все вышеописанное проверялось на моей рабочей машине и на серваке небольшой конторы. Автор (или авторы) не несут ответственности за безграмотное и необдуманное применение данного руководства. Ваша безопасность в ваших руках и в голове! Данное описание не претендует на полное и развернутое и не является единственно возможным вариантом конфигурации. Также выражаю признательность разработчикам вышеописанных замечательных программ за прекрасное исполнение и хорошую документацию. Практически все вышенаписанное подчерпнуто из документации к самим пакетам, а также некоторые мысли родились из отрывочных данных, блуждающих в рунете — большое спасибо за это их авторам. </para>
                <para>PS. Некоторая путаница возникает с переадресацией почты — самый простой вариант использование файла aliases — но до его использования в отличие от sendmail, ящик который должен быть переадресован должен быть все-таки создан в системе через cyradm -user cyrus -auth login -server localhost команда cm и не забыть что etc/postfix/main.cf </para>
                <para>alias_maps = hash:/usr/local/etc/postfix/aliases</para>
                <para>alias_database = hash:/usr/local/etc/postfix/aliases</para>
            </section>
        </section>
        <section>
            <info>
                <title>Настройка vsftpd</title>
            </info>
            <section>
                <info>
                    <title>Введение </title>
                </info>
                <para>Это перевод статьи en:HOWTO vsftpd. Кое-что изменено и добавлено от себя для более понятного, как мне кажется, изложения </para>
                <para>Взято из en:HOWTO Plan, setup and run a high school Gentoo Club и модифицировано. </para>
                <para>Это руководство описывает процесс установки VSFTP и настройки его для анонимного доступа с правами только для чтения. FTP (File Transfer Protocol) — старый, но надежный протокол, используемый для быстрой передачи файлов в сети. </para>
            </section>
            <section>
                <info>
                    <title>Установка VSFTPD </title>
                </info>
                <para>Зайдите в систему под пользователем root и введите комманду: Code: Установка </para>
                <para> emerge vsftpd</para>
                <para>Настройка </para>
                <para>Это очень легко. Откройте файл /etc/vsftpd/vsftpd.conf вашим любимым текстовым редактором и внесите в него вот эти изменения: </para>
                <para>Общие настройки </para>
                <para>Файл: /etc/vsftpd/vsftpd.conf </para>
                <para> dirmessage_enable=YES</para>
                <para> # banner_file=/etc/vsftpd/vsftpd.banner # edit banner first</para>
                <para> chown_uploads=NO</para>
                <para> xferlog_enable=YES</para>
                <para> idle_session_timeout=600</para>
                <para> data_connection_timeout=120</para>
                <para> ascii_upload_enable=NO</para>
                <para> ascii_download_enable=NO</para>
                <para> chroot_list_enable=YES</para>
                <para> background=YES</para>
                <para> listen=YES</para>
                <para> ls_recurse_enable=NO</para>
                <para>Анонимный пользователь (Anonymous), только для чтения</para>
                <para>Файл: /etc/vsftpd/vsftpd.conf </para>
                <para> anonymous_enable=YES</para>
                <para> anon_upload_enable=NO</para>
                <para> anon_mkdir_write_enable=NO</para>
            </section>
            <section>
                <info>
                    <title>Отключаем локальных пользователей </title>
                </info>
                <para>Это плохая идея разрешать локальным пользователям доступ через ftp (проще sftp/ssh), потому мы отключаем им доступ. Файл: /etc/vsftpd/vsftpd.conf </para>
                <para> local_enable=NO</para>
                <para> write_enable=NO</para>
            </section>
            <section>
                <info>
                    <title>Запуск службы </title>
                </info>
                <para>Gentoo предоставляет централизированное место для служб, которые называються init scripts или скрипты инициализации. Эти скрипты находяться в каталоге /etc/init.d/ и имеют имя сервиса, который они стартуют. Инит скрипты используються для управления сервисами. Для запуска VSFTPD сервера наберите Code: Запуск vsftpd как службы </para>
                <para> /etc/init.d/vsftpd start</para>
                <para>Вы можете узнать больше о том что вы можете сделать этим скриптом инициализации набрав "/etc/init.d/vsftpd" без аргументов ("start" это аргумент, еще есть "stop" и "restart") ) </para>
            </section>
            <section>
                <info>
                    <title>Настройка скриптов конфигурации </title>
                </info>
                <para>Вы не хотите набирать /etc/init.d/vsftpd start каждый раз когда вы включаете свой компьютер? Gentoo предоставляет простой путь запуска скриптов инициализации при включении вашего компьютера. Чтобы настроить VSFTPD для запуска при каждой загрузке, наберите: Code: запуск vsftpd как службы загрузке </para>
                <para> rc-update add vsftpd default</para>
                <para>Если вы хотите узнать больше о rc-update наберите "man rc-update". </para>
                <para>Также можно и через chkconfig: Code: запуск vsftpd как службы загрузке </para>
                <para> chkconfig vsftpd on</para>
            </section>
            <section>
                <info>
                    <title>Где размещать файлы </title>
                </info>
                <para>Файлы анонимного пользователя находятся в домашнем каталоге специального пользоватьля ftp (пользователя в системе). По умолчанию это — /home/ftp. Если вы хотите сменить его например на /var/ftp, вам нужно сделать следущие действия: /var/ftp Code: Смена размещения </para>
                <para> rmdir /home/ftp</para>
                <para> mkdir /var/ftp</para>
                <para> chown ftp:ftp /var/ftp</para>
                <para> ln -s /var/ftp /home/</para>
                <para>Теперь можно что-то разместить в этом каталоге. Например, если вы хотите сделать доступными для других каталоги disfiles и packages, можно сделать следущие действия: Code: ' </para>
                <para> mv /usr/portage/disfiles /var/ftp/</para>
                <para> ln -s /var/ftp/disfiles /usr/portage/</para>
                <para> mv /usr/portage/packages /var/ftp/</para>
                <para> ln -s  /var/ftp/packages /usr/portage/</para>
                <para>Примечание: VSFTPD автоматически запусается в chroot окружении, поэтому символические ссылки не работают. Именно для этого пришлось перенести каталоги /usr/portage/disfiles и usr/portage/packages и создать символические ссылки в тех местах где они должны находится. </para>
                <para>Но можно например монтировать нужные каталоги в .../ftp при помощи fstab. Для этого нужно создать каталоги: /var/ftp/distfiles и /var/ftp/packages Code: ' </para>
                <para> mkdir /var/ftp/distfiles</para>
                <para> mkdir /var/ftp/packages</para>
                <para>После чего пропишите в /etc/fstab следущее: Code: ' </para>
                <para> /usr/portage/distfiles /var/ftp/distfiles none ro,bind 0 0</para>
                <para> /usr/portage/packages /var/ftp/packages none ro,bind 0 0</para>
            </section>
            <section>
                <info>
                    <title>Клиенты </title>
                </info>
                <para>Есть множеcтво программ, которые позволяют получать доступ к ftp серверу. Вот некоторые из них: </para>
                <para>ftp </para>
                <para>lftp — лучшый консольный клиент </para>
                <para>mozilla-firefox </para>
                <para>nautilus </para>
                <para>gftp</para>
            </section>
        </section>
        <section>
            <info>
                <title>Jabber Server</title>
            </info>
            <section>
                <info>
                    <title>Введение</title>
                </info>
                <para>Jabber — это открытый протокол, использующий XML, для быстрого обмена сообщениями и информацией о присутствии между любыми двумя абонентами в интернете. Благодаря своей уникальной расширяемости и гибкости, jabber способен поддерживать множество протоколов — ICQ, IRQ, MSN, RSS, Yahoo и др. </para>
            </section>
            <section>
                <info>
                    <title>Установка пакетов</title>
                </info>
                <para>В качестве платформы для развертывания протокола jabber возьмем пакет jabberd. Он поддерживает множество возможностей — основные IM-протоколы ICQ, MSN, Yahoo, поддержку SSL-соединений и даже IPv6.</para>
                <para>Сначала посмотрим, какие USE-флаги требует jabber: Code: Зависимости </para>
                <para># emerge -pv jabberd</para>
                <para>These are the packages that I would merge, in order:</para>
                <para>Calculating dependencies ...done!</para>
                <para>[ebuild N ] net-im/jabberd-1.4.3-r5 -icq -ipv6 -ldap -msn -oscar -ssl -yahoo 0 kB </para>
                <para>Total size of downloads: 0 kB </para>
                <para>Включаем соответсвующие флаги в установку (неважно, через переменную USE или через файл make.conf) и собираем: USE="icq ssl" emerge jabberd В качестве зависимости вытянется пакет jit — Jabber ICQ Transport, необходимый для поддержки протокола ICQ. </para>
            </section>
            <section>
                <info>
                    <title>Конфигурация</title>
                </info>
                <para>Сначала добавьте пользователей, ответсвенных за администрирование сервера jabber, в группу jabber: </para>
                <para>gpasswd -a имя_пользователя jabber </para>
                <para>Все конфигурационные файлы, связанные с jabber, имеют формат XML и находятся в каталоге /etc/jabber. </para>
                <para>Обязательно надо прописать имя хоста и РАЗРЕШИТЬ регистрации. </para>
            </section>
            <section>
                <info>
                    <title>Запуск демона</title>
                </info>
                <para>Добавляем запуск сервера при старте системы: </para>
                <para>rc-update add jabber default </para>
                <para>Стартуем наш сервер: /etc/init.d/jabber start </para>
                <para>Все должно работать :)</para>
            </section>
        </section>
        <section>
            <info>
                <title>Выделенный сервер Counter-Strike</title>
            </info>
            <para>Рано или поздно у большинства админов локальных сетей возникает необходимость настраивать игровые сервера для пользователей. Одной из самых популярных сетевых игр на сегодняшний день является Counter-Strike.CS:Source. Которая, к сожалению пока не приобрела достаточной популярности у нас в России. Мы рассмотриму установку сервера для игры CS 1.6. Более популярной в среде российских геймеров. </para>
            <section>
                <info>
                    <title>Необходимое программное обеспечение</title>
                </info>
                <para>Для установки CS-сервера нам понадобится только одна программа:halflife-steam Code: emerge -pv halflife-steam </para>
                <para>Calculating dependencies ...done! </para>
                <para>[ebuild N ] games-server/halflife-steam-2.0 3,431 kB </para>
                <para>Total size of downloads: 3,431 kB </para>
                <para>Steam — это утилита от Valve,позволяющая обновлять любую их игру через steam-network. </para>
            </section>
            <section>
                <info>
                    <title>Установка и настройка</title>
                </info>
                <para>Ставим steam</para>
                <para>Установка сводится к простому emerge halflife-steam. </para>
                <para>Настройка установка hl</para>
                <para>Steam установится в каталог /opt/halflife </para>
                <para>ВАЖНО: в ноябре 2006 года в пакете была бага. Что характерно для всех продуктов получаемых через стим, они иногда забывают unix специфику. Непостредственно у меня, на steam не стоял бит исполняемости. И в cs было имя типа xxx.WAD (нужно wad, различаеться регистр) Code: команды </para>
                <para>cd /opt/halflife </para>
                <para>chmod +x stream </para>
                <para>Code: команды </para>
                <para>./steam -command update -game cstrike -dir ./ </para>
                <para>Наблюдаем лог. Если никаких слов типа error нет — значит сервер установился. Code: output </para>
                <para>HLDS installation up to date </para>
                <para>Предупреждение: Этот сервер работает только в LAN (класс С) и только со steam клиентами. Все остальное Варез</para>
            </section>
        </section>
        <section>
            <info>
                <title>Файл сервер Samba в домене Win2k</title>
            </info>
            <para>Задача: </para>
            <para>Организация файлового сервера </para>
            <para>Авторизация пользователей через домен контроллер </para>
            <para>Дано: </para>
            <para>Red Hat 9.0 </para>
            <para>Samba 3.0.13 </para>
            <para>DC win 2003 server </para>
            <section>
                <info>
                    <title>Вступление </title>
                </info>
                <para>Взяться за написание данной статьи меня побудило то, что когда возникла задача о которой написано выше , то статьи описывающей решение данной проблемы полностью я не нашел вот и решил написать такую статью в которой было бы готовое решение. </para>
            </section>
            <section>
                <info>
                    <title>Основная часть </title>
                </info>
                <para>Первым делом устанавливаем самбу. Решено было использовать последнюю версию 3.0.13. Установлено все это было из стандартного RPM пакета. Думаю с этим сложностей ни у кого не возникает, док по данному вопросу полно и потому начнем сразу править конфиг самбы. Ниже приведен окончательный работающий конфиг, может там и есть что лишнее, но после того как все заработало я убирать оттуда ничего не стал. </para>
                <para> [global]</para>
                <para>   realm = bryusov.iasnet.ru</para>
                <para> # Workgroup = имя NT-домена (или рабочей группы): </para>
                <para>   workgroup = DOMAIN  </para>
                <para> # NetBIOS-имя, под которым будет виден сервер остальным машинам сети.</para>
                <para>   netbios name = NAU</para>
                <para> # Комментарий, появляющийся рядом с именем машины в "Сетевом окружении" Windows.</para>
                <para>   server string = Samba Server</para>
                <para> # Следующий параметр влияет на безопасность. Hosts allow разрешает машинам с </para>
                <para> # указанными IP-адресами присоединяться к Samba-серверу. </para>
                <para>   hosts allow = 172.18. 172.17.  127.</para>
                <para> # если подставить %m то для каждой машины  подключенной к Samba-серверу будет </para>
                <para> # использоваться свой log-файл. </para>
                <para>   log file = /var/log/samba/log.smbd   </para>
                <para> # это кому скока не жалко             </para>
                <para>   max log size = 500    </para>
                <para> # определяет, каким образом будет осуществляться проверка пароля (нам надо через DC)                                          </para>
                <para>   security = domain</para>
                <para> # Параметр Password server используется только совместно с опцией security = domain</para>
                <para>   password server =  &lt;IP домен контролера&gt;</para>
                <para> # для репликации всех доменов входящих в траст с вашим доменом</para>
                <para>   allow trusted domains = yes                </para>
                <para> # включаем  поддержку шифрованных паролей. </para>
                <para>   encrypt passwords = yes</para>
                <para> # Используя следующий параметр можно создать отдельную конфигурацию для каждой машины домена. </para>
                <para> # Вместо пары символов %m при входе подставляется NetBIOS-имя машины. </para>
                <para> # Я Такого не делал хотя поэксперементровать можно.</para>
                <para> # include = /usr/local/samba/lib/smb.conf.%m</para>
                <para> # данные строчки можно не включать в работающий конфиг они определяют место</para>
                <para> # хранения , порядок обновления Unix паролей и какой программой все это производится</para>
                <para>   smb passwd file = /etc/samba/smbpasswd</para>
                <para>   unix password sync = Yes</para>
                <para>   passwd program = /usr/bin/passwd %u</para>
                <para>   passwd chat = *New*UNIX*password* %n\n *ReType*new*UNIX*password* %n\n *passwd:*all*authentication*tokens*updated*successfully*</para>
                <para> # В документации  говорится, что с помощью этого параметра</para>
                <para> # можно повысить производительность Samba-сервера.</para>
                <para>   socket options = TCP_NODELAY SO_RCVBUF=8192 SO_SNDBUF=8192</para>
                <para> # по дефолту слушаются все интерфейсы, здесь можно указать конкретно</para>
                <para>   interfaces = &lt;ip или название интерфейса&gt;</para>
                <para> # строчки которых не было в стандартном конфиге и были добавлены руками для pепликации NT-юзеpов:</para>
                <para>  winbind uid = 10000-20000</para>
                <para>  winbind gid = 10000-20000</para>
                <para>  winbind enum groups = yes</para>
                <para>  winbind enum users = yes</para>
                <para> # Если вам нужны русские буквы в именах файлов, то раскоментируйте </para>
                <para> # следующие 3 строки (заменив KOI8-R на свою локаль)</para>
                <para> # dos charset = CP866       </para>
                <para> # unix charset = KOI8-R     </para>
                <para> # display charset = KOI8-R  </para>
                <para> # описываем шары</para>
                <para> [FILES]</para>
                <para>   comment = share</para>
                <para>   path = /share/FILES</para>
                <para>   public = no</para>
                <para>   writable = yes</para>
                <para>   valid users = DOMAIN\users</para>
                <para>   create mask = 0744</para>
                <para> # настройка кириллицы по желанию</para>
                <para>Все с конфигом самбы закончили, далее привожу конфиг /etc/krb5.conf </para>
                <para> [logging]</para>
                <para>  default = FILE:/var/log/krb5libs.log</para>
                <para>  kdc = FILE:/var/log/krb5kdc.log</para>
                <para>  admin_server = FILE:/var/log/kadmind.log</para>
                <para> [libdefaults]</para>
                <para>  ticket_lifetime = 24000</para>
                <para>  default_realm = PDC.DOMAIN.NAME.RU</para>
                <para>  dns_lookup_realm = false</para>
                <para>  dns_lookup_kdc = false</para>
                <para> [realms]</para>
                <para>  DOMAIN.NAME.RU = {</para>
                <para>   kdc = pdc.domain.name.ru:88</para>
                <para>   admin_server = kerberos.domain.name.ru:749</para>
                <para>   default_domain = domain.name.ru</para>
                <para>  }</para>
                <para> [domain_realm]</para>
                <para>  .domain.name.ru = DOMAIN.NAME.RU</para>
                <para>  domain.name.ru = DOMAIN.NAME.RU</para>
                <para> [kdc]</para>
                <para>  profile = /var/kerberos/krb5kdc/kdc.conf</para>
                <para> [appdefaults]</para>
                <para>  pam = {</para>
                <para>    debug = false</para>
                <para>    ticket_lifetime = 36000</para>
                <para>    renew_lifetime = 36000</para>
                <para>    forwardable = true</para>
                <para>    krb4_convert = false</para>
                <para>  }</para>
                <para>Все остальное оставлено без изменений. </para>
                <para>Теперь заводим самба сервер в домен, делаем со стороны домен контролера двусторонние доверительные отношения, запускаем getent group и видим что все работает. </para>
                <para>Вот и все надеюсь полезной инфы достаточно для быстрой и эффективной настройки файл сервера. </para>
                <para>Огромное спасибо всем кто писал статьи про самбу почти все их прочитал и почерпнул много полезного , в том числе не только для решения своих задач.</para>
            </section>
        </section>
        <section>
            <info>
                <title>Руководство по настройке Samba в режиме PDC с использованием LDAP</title>
            </info>
            <section>
                <info>
                    <title>Устанавливаемые пакеты </title>
                </info>
                <para>Установим нужные пакеты: </para>
                <para># USE="ldap acl ldapsam pam gdbm samba ssl tcpd winbind" emerge samba openldap acl nss_ldap pam_ldap </para>
                <para>ВАЖНО: Версия nss_ldap должна быть не ниже 250-r1 (&gt;=sys-auth/nss_ldap-250-r1) </para>
            </section>
            <section>
                <info>
                    <title>OpenLDAP</title>
                </info>
                <para>Конфигурирование OpenLDAP</para>
                <para>Для примера используется домен amber.global.com который является дочерним доменом домена global.com, который работает под управлением Win2003 Server. </para>
                <para>Примечание: Не решенной задачей осталось создание доверительных отношений между доменами и включение домена amber в лес global.com </para>
                <para>Файл: /etc/openldap/slapd.conf </para>
                <para>include /etc/openldap/schema/core.schema</para>
                <para> include /etc/openldap/schema/cosine.schema</para>
                <para> include /etc/openldap/schema/inetorgperson.schema</para>
                <para> include /etc/openldap/schema/misc.schema</para>
                <para> include /etc/openldap/schema/nis.schema</para>
                <para> include /etc/openldap/schema/openldap.schema</para>
                <para> include /etc/openldap/schema/samba.schema</para>
                <para> pidfile                        /var/run/openldap/slapd.pid</para>
                <para> argsfile                /var/run/openldap/slapd.args</para>
                <para> access to dn.base=""</para>
                <para>                by self write</para>
                <para>                by * auth</para>
                <para> access to attr=userPassword</para>
                <para>                by self write</para>
                <para>                by * auth</para>
                <para> access to attr=shadowLastChange</para>
                <para>                by self write</para>
                <para>                by * read</para>
                <para> access to *</para>
                <para>                by * read</para>
                <para>                by anonymous auth</para>
                <para> #loglevel 1</para>
                <para> database        ldbm</para>
                <para> suffix          "dc=amber,dc=global,dc=com"</para>
                <para> rootdn          "cn=Manager,dc=amber,dc=global,dc=com"</para>
                <para> # Пароль rootpw лучше всего указывать в зашифрованном виде.</para>
                <para> # Для генерации шифрованного пароля используйте утилиту slappasswd</para>
                <para> # Например: slappasswd -h {MD5}</para>
                <para> # rootpw = secret</para>
                <para> rootpw                {MD5}Xr4ilOzQ4PCOq3aQ0qbuaQ==</para>
                <para> directory        /var/lib/openldap-ldbm</para>
                <para> index objectClass           eq</para>
                <para> index cn                    eq,subinitial</para>
                <para> index sn                    eq,subinitial</para>
                <para> index uid                   eq,subinitial</para>
                <para> index displayName           eq,subinitial</para>
                <para> index uidNumber             eq</para>
                <para> index gidNumber             eq</para>
                <para> index memberUID             eq</para>
                <para> index sambaSID              eq</para>
                <para> index sambaPrimaryGroupSID  eq</para>
                <para> index sambaDomainName       eq</para>
                <para>Файл: /etc/openldap/ldap.conf </para>
                <para>HOST 127.0.0.1</para>
                <para>BASE dc=sanaa,dc=global,dc=com</para>
                <para>Проверяем разрешения на каталоги /var/lib/openldap-*</para>
                <para>ls -la /var/lib/ </para>
                <para>ВАЖНО: </para>
                <para>drwx------   2 ldap     ldap      104 Июн  8 18:31 openldap-data</para>
                <para>drwx------   2 ldap     ldap       72 Июн  8 18:31 openldap-ldbm</para>
                <para>drwx------   2 ldap     ldap       72 Июн  8 18:31 openldap-slurp</para>
            </section>
            <section>
                <info>
                    <title>Запуск сервера OpenLDAP</title>
                </info>
                <para>пока работаем без шифрования трафика, так как сервер LDAP и SAMBA работают на одном сервере, подправляем конфиг чтобы LDAP слушал 389 порт только на localhost. </para>
                <para>Файл: /etc/conf.d/sldap </para>
                <para># conf.d file for the openldap-2.1 series</para>
                <para>#</para>
                <para># To enable both the standard unciphered server and the ssl encrypted</para>
                <para># one uncomment this line or set any other server starting options</para>
                <para># you may desire.</para>
                <para>#</para>
                <para># OPTS="-h 'ldaps:// ldap:// ldapi://%2fvar%2frun%2fopenldap%2fslapd.sock'"</para>
                <para>OPTS="-h 'ldap://127.0.0.1'"</para>
                <para>и запускаем OpenLDAP </para>
                <para>/etc/init.d/slapd start </para>
            </section>
            <section>
                <info>
                    <title>SAMBA</title>
                </info>
                <para>Миграция OpenLDAP</para>
                <para>Существует 2 пути создания учетных записей пользователей: домен уже существует и создание нового домена. В первом случае самбу нужно настроить в режиме BDC, перенести все учетные записи, и потом изолировав PDC, перезапустить самбу в режиме PDC. Во втором случае все еще проще, самбу сразу запускаем в режиме PDC и создаем стандарные учетные записи при помощи замечательного пакета smbldap-tools. </para>
                <para>emerge smbldap-tools</para>
                <para>/etc/init.d/samba start</para>
                <para>Code: configure.pl </para>
                <para>-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-</para>
                <para>       smbldap-tools script configuration</para>
                <para>       -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</para>
                <para>Before starting, check</para>
                <para> . if your samba controller is up and running.</para>
                <para> . if the domain SID is defined (you can get it with the 'net getlocalsid')</para>
                <para> . you can leave the configuration using the Crtl-c key combination</para>
                <para> . empty value can be set with the "." character</para>
                <para>-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-</para>
                <para>Looking for configuration files...</para>
                <para>Samba Configuration File Path [/etc/samba/smb.conf] &gt;
                </para>
                <para>The default directory in which the smbldap configuration files are stored is shown.</para>
                <para>If you need to change this, enter the full directory path, then press enter to continue.</para>
                <para>Smbldap-tools Configuration Directory Path [/etc/smbldap-tools/] &gt;
                </para>
                <para>-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</para>
                <para>Let's start configuring the smbldap-tools scripts ...</para>
                <para>. workgroup name: name of the domain Samba act as a PDC</para>
                <para>  workgroup name [amber] &gt;
                </para>
                <para>. netbios name: netbios name of the samba controler</para>
                <para>  netbios name [neptun] &gt;
                </para>
                <para>. logon drive: local path to which the home directory will be connected </para>
                <para> (for NT Workstations). Ex: 'H:'</para>
                <para>  logon drive [U:] &gt;
                </para>
                <para>. logon home: home directory location (for Win95/98 or NT Workstation).</para>
                <para>  (use %U as username) Ex:'\\neptun\%U'</para>
                <para>  logon home (press the "." character if you don't want homeDirectory) [\\%L\users\%U] &gt;
                </para>
                <para>. logon path: directory where roaming profiles are stored. Ex:'\\neptun\profiles\%U'</para>
                <para>  logon path (press the "." character if you don't </para>
                <para>  want roaming profile) [\\%L\Profiles\%a\%U] &gt;
                </para>
                <para>. home directory prefix (use %U as username) [/home/%U] &gt;
                </para>
                <para>. default users' homeDirectory mode [700] &gt;
                </para>
                <para>. default user netlogon script (use %U as username) [] &gt;</para>
                <para>   default password validation time (time in days) [45] &gt; 900</para>
                <para>. ldap suffix [dc=amber,dc=global,dc=com] &gt;
                </para>
                <para>. ldap group suffix [ou=Groups] &gt;
                </para>
                <para>. ldap user suffix [ou=Users] &gt;
                </para>
                <para>. ldap machine suffix [ou=Users] &gt;
                </para>
                <para>. Idmap suffix [ou=Idmap] &gt;
                </para>
                <para>. sambaUnixIdPooldn: object where you want to store the next uidNumber</para>
                <para>  and gidNumber available for new users and groups</para>
                <para>  sambaUnixIdPooldn object (relative to ${suffix}) [sambaDomainName=amber] &gt;
                </para>
                <para>. ldap master server: IP adress or DNS name of the master (writable) ldap server</para>
                <para>  ldap master server [127.0.0.1] &gt;
                </para>
                <para>. ldap master port [389] &gt;
                </para>
                <para>. ldap master bind dn [cn=Manager,dc=amber,dc=global,dc=com] &gt;
                </para>
                <para>. ldap master bind password [] &gt;  </para>
                <para>. ldap slave server: IP adress or DNS name of the slave ldap server: can also </para>
                <para>  be the master one</para>
                <para>  ldap slave server [127.0.0.1] &gt;
                </para>
                <para>. ldap slave port [389] &gt;
                </para>
                <para>. ldap slave bind dn [cn=Manager,dc=amber,dc=global,dc=com] &gt;
                </para>
                <para>. ldap slave bind password [] &gt;  </para>
                <para>. ldap tls support (1/0) [0] &gt;
                </para>
                <para>. SID for domain amber: SID of the domain (can be obtained with 'net getlocalsid neptun')</para>
                <para>  SID for domain amber [S-1-5-21-1918777035-593721947-2697221154] &gt;
                </para>
                <para>. unix password encryption: encryption used for unix passwords</para>
                <para>  unix password encryption (CRYPT, MD5, SMD5, SSHA, SHA) [SSHA] &gt; MD5</para>
                <para>. default user gidNumber [513] &gt;
                </para>
                <para>. default computer gidNumber [515] &gt;
                </para>
                <para>. default login shell [/bin/bash] &gt;
                </para>
                <para>. default skeleton directory [/etc/skel] &gt;
                </para>
                <para>. default domain name to append to mail adress [] &gt;
                </para>
                <para>-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</para>
                <para>backup old configuration files:</para>
                <para>  /etc/smbldap-tools/smbldap.conf-&gt;/etc/smbldap-tools/smbldap.conf.old</para>
                <para>  /etc/smbldap-tools/smbldap_bind.conf-&gt;/etc/smbldap-tools/smbldap_bind.conf.old</para>
                <para>writing new configuration file:</para>
                <para>  /etc/smbldap-tools/smbldap.conf done.</para>
                <para>  /etc/smbldap-tools/smbldap_bind.conf done.</para>
                <para>Если мы не хотим, что бы у всех пользователей профили были перемещаемыми, то в файле /etc/smbldap-tools/smbldap.conf установим следующее значение: Файл: /etc/smbldap-tools/smbldap.conf </para>
                <para> ...</para>
                <para> userProfile=""</para>
                <para> ...</para>
                <para> </para>
                <para>Инициализируем каталоги самбы в LDAP: </para>
                <para>smbldap-populate -a Administrator -k 0 -m 0</para>
                <para>Конфигурация SAMBA</para>
                <para>Файл: /etc/samba/smb.conf </para>
                <para>[global]</para>
                <para>        workgroup = amber</para>
                <para>        netbios name = neptun</para>
                <para>        realm = amber.global.com</para>
                <para>        nt acl support = yes</para>
                <para>        acl compatibility = win2k</para>
                <para>        map acl inherit = yes</para>
                <para>        server string = Samba Server %v</para>
                <para>        interfaces = eth0</para>
                <para>        bind interfaces only = yes</para>
                <para>        hosts allow = 192.168.7. 127.</para>
                <para>        log file = /var/log/samba/log.%m</para>
                <para>        debug level = 9</para>
                <para>        max log size = 500</para>
                <para>        socket options = TCP_NODELAY SO_SNDBUF=8192 SO_RCVBUF=8192</para>
                <para>        security = user</para>
                <para>        os level = 250</para>
                <para>        passdb backend = ldapsam:"ldap://127.0.0.1/"</para>
                <para>        enable privileges = yes</para>
                <para>        </para>
                <para>        passwd program = /usr/sbin/smbldap-passwd "%u"</para>
                <para>        passwd chat = *new*password* %n\n *new*password* %n\n *successfully*</para>
                <para>        passdb expand explicit = no</para>
                <para>        unix password sync = no</para>
                <para>        ldap passwd sync = no</para>
                <para>        </para>
                <para>        ldap suffix = dc=amber,dc=global,dc=com</para>
                <para>        ldap admin dn = cn=Manager,dc=amber,dc=global,dc=com</para>
                <para>        ldap user suffix = ou=Users</para>
                <para>        ldap group suffix = ou=Groups</para>
                <para># Т.к. для самбы компьютеры и пользователи — одно и то же,</para>
                <para># и искать она в дальнейшем записи компьютеров будет в пользователях,</para>
                <para># то для избежания дальнейших проблем при добавлении рабочих станций</para>
                <para># к домену мы вместо следующей строки</para>
                <para>#</para>
                <para>#        ldap machine suffix = ou=Computers</para>
                <para>#</para>
                <para># напишем другую:</para>
                <para>        ldap machine suffix = ou=Users</para>
                <para>        ldap idmap suffix = ou=Idmap</para>
                <para>        idmap backend = ldapsam:ldap://127.0.0.1/</para>
                <para>        idmap uid = 10000-20000</para>
                <para>        idmap gid = 10000-20000</para>
                <para>        </para>
                <para>        ldap delete dn = Yes</para>
                <para>        ldap ssl = no</para>
                <para>        </para>
                <para>        </para>
                <para>        add user script = /usr/sbin/smbldap-useradd -n -a "%u"</para>
                <para>        delete user script = /usr/sbin/smbldap-userdel "%u"</para>
                <para>        </para>
                <para>        add group script = /usr/sbin/smbldap-groupadd -p "%g"</para>
                <para>        delete group script = /usr/sbin/smbldap-userdel "%g"</para>
                <para>        </para>
                <para>        add user to group script = /usr/sbin/smbldap-groupmod -m "%u" "%g"</para>
                <para>        delete user from group script = /usr/sbin/smbldap-groupmod -x "%u" "%g"</para>
                <para>        set primary group script = /usr/sbin/smbldap-usermod -g "%g" "%u"</para>
                <para>        </para>
                <para>        </para>
                <para>        add machine script = /usr/sbin/smbldap-useradd -w "%u"</para>
                <para>        </para>
                <para>        #PDC</para>
                <para>        domain master = yes</para>
                <para>        preferred master = yes</para>
                <para>        #BDC</para>
                <para>#        domain master = no</para>
                <para>#        preferred master = no</para>
                <para>        domain logons = Yes</para>
                <para>        </para>
                <para>        logon script = </para>
                <para># Если хотите, что бы профили всех пользователей были перемещаемыми</para>
                <para># и хранились на сервере (со всеми гигабайтами фильмов и личных фотографий)</para>
                <para># то укажите такое значение следующего параметра:</para>
                <para>#</para>
                <para>#        logon path = \\%L\Profiles\%a\%U</para>
                <para>#</para>
                <para># Если вы не хотите гонять профили по сети, оставьте значение пустым, </para>
                <para># (но ни в коем случае не комментируйте эту строку, она просто получит </para>
                <para># значение по умолчанию), вот так:</para>
                <para>        logon path =</para>
                <para>        logon drive = U: </para>
                <para>        logon home = \\%L\users\%U</para>
                <para>        </para>
                <para>        </para>
                <para>#============================ Share Definitions ==============================</para>
                <para>[netlogon]</para>
                <para>    comment = Network Logon Service</para>
                <para>    path = /var/lib/samba/netlogon</para>
                <para>    browseable = yes</para>
                <para>    guest ok = yes</para>
                <para>    writable = no</para>
                <para>    share modes = no</para>
                <para>[Profiles]</para>
                <para>    admin users = admin</para>
                <para>    create mode = 600</para>
                <para>    directory mode = 700</para>
                <para>    path = /var/lib/samba/profiles</para>
                <para>    browseable = yes</para>
                <para>    guest ok = yes</para>
                <para>    writable = yes</para>
                <para>[homes]</para>
                <para>  comment = Home Directories</para>
                <para>  browseable = no</para>
                <para>  read only = no</para>
                <para>[public]</para>
                <para>  path = /pub</para>
                <para>  guest ok = yes</para>
                <para>  read only = no</para>
                <para>[users]</para>
                <para>  path = /home/users</para>
                <para>  writable = yes</para>
                <para>  printable = no</para>
                <para> </para>
                <para>Добавим запуск winbind с самбой (если нужно): Файл: /etc/conf.d/samba </para>
                <para> ...</para>
                <para> daemon_list="smbd nmbd winbind"</para>
                <para> ...</para>
                <para> </para>
                <para>Введём пароль рабочей станции: </para>
                <para>smbpasswd -w secret </para>
                <para>Введём контроллёр домена, собственно в домен </para>
                <para>net rpc join -S neptun -U Administrator </para>
            </section>
            <section>
                <info>
                    <title>Настройка системы на авторизацию в LDAP</title>
                </info>
                <para>--ladserg 14:05, 28 июля 2006 (UTC) У меня честно говоря не получилось сделать авторизацию пользователей samba через LDAP без настройки поддержки авторизации системных пользователей в LDAP, пришлось настраивать и это. </para>
                <para>Сначала поправим файл /etc/ldap.conf, приведя его примерно к следующему виду: </para>
                <para>Файл: /etc/ldap.conf </para>
                <para> host 127.0.0.1</para>
                <para> base dc=amber,dc=global,dc=com</para>
                <para> ldap_version 3</para>
                <para> rootbinddn cn=Manager,dc=amber,dc=global,dc=com</para>
                <para> bind_timelimit 10</para>
                <para> bind_policy soft</para>
                <para> pam_filter objectClass=posixAccount</para>
                <para> pam_password exop</para>
                <para> nss_base_passwd         ou=Users,dc=tty,dc=perm,dc=ru?one</para>
                <para> nss_base_shadow         ou=Users,dc=tty,dc=perm,dc=ru?one</para>
                <para> nss_base_group          ou=Groups,dc=tty,dc=perm,dc=ru?one</para>
                <para> nss_base_hosts          ou=Hosts,dc=tty,dc=perm,dc=ru?one</para>
                <para> nss_base_services       ou=Services,dc=tty,dc=perm,dc=ru?one</para>
                <para> nss_base_networks       ou=Networks,dc=tty,dc=perm,dc=ru?one</para>
                <para> nss_base_protocols      ou=Protocols,dc=tty,dc=perm,dc=ru?one</para>
                <para> nss_base_rpc            ou=Rpc,dc=tty,dc=perm,dc=ru?one</para>
                <para> nss_base_ethers         ou=Ethers,dc=tty,dc=perm,dc=ru?one</para>
                <para> nss_base_netmasks       ou=Networks,dc=tty,dc=perm,dc=ru?one</para>
                <para> nss_base_bootparams     ou=Ethers,dc=tty,dc=perm,dc=ru?one</para>
                <para> nss_base_aliases        ou=Aliases,dc=tty,dc=perm,dc=ru?one</para>
                <para> nss_base_netgroup       ou=Netgroup,dc=tty,dc=perm,dc=ru?one</para>
                <para> ssl off</para>
                <para> nss_reconnect_tries 4</para>
                <para> nss_reconnect_sleeptime 1</para>
                <para> nss_reconnect_maxsleeptime 16</para>
                <para> nss_reconnect_maxconntries 2</para>
                <para> </para>
                <para>Сим мы скажем nss_ldap где и как искать зписи пользователей и групп. </para>
                <para>Теперь сзодадим файл /etc/ldap.secret и при помощи лбого текстого редактора в plain/text виде занесём туда пароль пользователя, который выше у нас указан в опции rootbinddn, нпример пароль secret: </para>
                <para>Файл: /etc/ldap.secret </para>
                <para>secret </para>
                <para>Затем непременно установим на него нужные права:</para>
                <para>Code: Установка прав на файл /etc/ldap.secret </para>
                <para> #chmod 600 /etc/ldap.secret</para>
                <para> #chown root:root /etc/ldap.secret</para>
                <para>Далее приведём файл /etc/pam.d/system-auth к следующему виду: </para>
                <para>Файл: /etc/pam.d/system-auth </para>
                <para> auth       required     pam_env.so</para>
                <para> auth       sufficient   pam_unix.so likeauth nullok</para>
                <para> auth       sufficient   pam_ldap.so use_first_pass</para>
                <para> auth       required     pam_deny.so</para>
                <para> account    sufficient   pam_ldap.so</para>
                <para> account    required     pam_unix.so</para>
                <para> password   required     pam_cracklib.so difok=2 minlen=8 dcredit=2 ocredit=2 retry=3</para>
                <para> password   sufficient   pam_unix.so nullok md5 shadow use_authtok</para>
                <para> password   sufficient   pam_ldap.so use_authtok</para>
                <para> password   required     pam_deny.so</para>
                <para> session    required     pam_limits.so</para>
                <para> session    required     pam_unix.so</para>
                <para> session    required     pam_mkhomedir.so skel=/etc/skel/ umask=077</para>
                <para> session    optional     pam_ldap.so</para>
                <para> </para>
                <para>Обратите внимание на строку: </para>
                <para>session required pam_mkhomedir.so skel=/etc/skel/ umask=077 </para>
                <para>Она заставляет систему создавать домашние каталоги для тех пользоватей у которых они ещё не созданы, при этом в новый каталог помещается содержимое директории /etc/skel/ и задаётся маска каталога 0x700 </para>
                <para>После чего правим файл /etc/nsswitch.conf, приводя его к следующему виду: </para>
                <para>Файл: /etc/nsswitch.conf </para>
                <para> passwd:      files ldap</para>
                <para> shadow:      files ldap</para>
                <para> group:       files ldap</para>
                <para> hosts:       files dns</para>
                <para> networks:    files dns</para>
                <para> services:    db files</para>
                <para> protocols:   db files</para>
                <para> rpc:         ldap [NOTFOUND=return] db files</para>
                <para> ethers:      ldap [NOTFOUND=return] db files</para>
                <para> netmasks:    files</para>
                <para> netgroup:    ldap [NOTFOUND=return] files</para>
                <para> bootparams:  files</para>
                <para> automount:   files</para>
                <para> aliases:     files </para>
                <para>Предупреждение: Ни в коем случае не добавляйте значение ldap к следующим базам: hosts, networks, protocols, services. Иначе вы рискуете не дождаться следующей загрузки системы. </para>
                <para>Всё, теперь мы указали системе брать пользователей как из системных файлов, так и из LDAP. </para>
                <para>Перезагрузим наш компьютер, дабы убедиться что система грузится нормально. Если система останавливается на загрузке udev, то смотрите ошибки в файле /etc/nsswitch.conf, может вы указали использовать ldap не в той базе. </para>
            </section>
            <section>
                <info>
                    <title>Управление пользователями</title>
                </info>
                <para>Ранее мы установили пакет smbldap-tools, теперь рассмотрим возможность управления пользователями с его помощью. </para>
                <para>Создание пользователя</para>
                <para>smbldap-useradd [-o] [-a] [-b] [-w] [-i] [-u uid] [-g gid ] [-G groups,,,] </para>
                <para> [-n] [-d home] [-s shell] [-c gecos] [-m [-k]] [-t] [-P] [-A 0|1] [-B 0|1] </para>
                <para> [-C sambaHomePath] [-D sambaHomeDrive] [-E sambaLogonScript] [-F sambaProfilePath] </para>
                <para> [-H sambaAcctFlags] [-N surname] [-S family name] [-M local mailAddress,,,] </para>
                <para> [-T mailToAddress] [-?] user</para>
                <para>Где: </para>
                <para> user — системное имя создаваемого пользователя</para>
                <para> -o   — add the user in the organizational unit (relative to the user suffix)</para>
                <para> -a   — is a Windows User (otherwise, Posix stuff only)</para>
                <para> -b   — is a AIX User</para>
                <para> -w   — is a Windows Workstation (otherwise, Posix stuff only)</para>
                <para> -i   — is a trust account (Windows Workstation)</para>
                <para> -u   — uid</para>
                <para> -g   — gid</para>
                <para> -G   — список групп пользователя, разделённых запятой.</para>
                <para> -n   — do not create a group</para>
                <para> -d   — домашний каталог пользователя (по умолчанию /home/имя_пользователя)</para>
                <para> -s   — оболочка пользователя (по умолчанию /bin/false)</para>
                <para> -c   — отображаемое в Windows имя пользователя</para>
                <para> -m   — создать домашний каталог и скопировать в него файлы из /etc/skel</para>
                <para> -k   — указать иной каталог, из которого будут копироваться файлы при </para>
                <para>        создании домашнего каталога пользователя (используется с ключём -m)</para>
                <para> -t   — time. Wait 'time' seconds before exiting (when adding Windows Workstation)</para>
                <para> -P   — ends by invoking smbldap-passwd</para>
                <para> -A   — возможность менять пароль пользователем, значение 0 если нет, 1 если да</para>
                <para> -B   — пользователь должен поменять пароль, значение 0 если нет, 1 если да</para>
                <para> -C   — домашний каталог samba (например '\\PDC-SRV\homes')</para>
                <para> -D   — буква диска для монтирования домашнего каталога samba (например 'H:')</para>
                <para> -E   — скрипт, выполняемый при входе в систему</para>
                <para> -F   — каталог профиля пользователя (например '\\PDC-SRV\profiles\foo')</para>
                <para> -H   — sambaAcctFlags (samba account control bits like '[NDHTUMWSLKI]')</para>
                <para> -N   — настоящее имя пользователя (для русских ещё и отчество)</para>
                <para> -S   — фамилия пользователя</para>
                <para> -M   — local mailAddress (comma seperated)</para>
                <para> -T   — mailToAddress (forward address) (comma seperated)</para>
                <para> -?   — отобразить помощь</para>
                <para>Например создание пользователя ladserg: </para>
                <para>smbldap-useradd -a -c 'Serg Alex Lad' -N 'Serg Alex' -S 'Lad' -s /bin/bash ladserg </para>
                <para>К сожалению подружить smbldap-tools с русским мне не удалось, даже при использовании кодировки UTF-8. </para>
                <para>Итак, в приведённом выше примере будет создан пользователь с системным именем ladserg, фамилией Lad, именем Serg Alex, оболочкой /bin/bash, домашним каталогом /home/ladserg. Флаг -a укажет, что пользователь также будет являться пользователем домена. </para>
                <para>Изменение пароля</para>
                <para>smbldap-passwd [-s] [-u] [-h] username</para>
                <para>Где: </para>
                <para> username       — имя пользователя</para>
                <para> -h, -?, --help — показать помощь</para>
                <para> -s             — обновить только samba пароль</para>
                <para> -u             — обновить только UNIX пароль</para>
                <para>Например: </para>
                <para>smbldap-passwd ladserg </para>
                <para>После чего дважды будет запрошен пароль. </para>
                <para>Теперь можно попробовать зайти в систему под учётной записью только что созданного пользователя. </para>
                <para>Модификация пользователя</para>
                <para>smbldap-usermod [-a] [-c comment] [-d home_dir] [-e expiration_date] </para>
                <para> [-g initial_group] [-r new_login_name] [-p passwd] [-s shell] [-u uid [ -o]] [-x] </para>
                <para> [-A canchange] [-B mustchange] [-C smbhome] [-D homedrive] [-E scriptpath] </para>
                <para> [-F profilepath] [-G group[,...]] [-H acct‐flags] [-N canonical_name] </para>
                <para> [-S surname] [-P] login</para>
                <para>Где: </para>
                <para> -c    - Полное имя</para>
                <para> -d    - Домашний каталог</para>
                <para> -r    - новое имя пользователя (cn, sn и dn будут обновлены)</para>
                <para> -u    - uid</para>
                <para> -o    - uid может быть не уникальным</para>
                <para> -g    - gid</para>
                <para> -G    - список групп пользователя, разделённых запятой.</para>
                <para> -s    - оболочка</para>
                <para> -N    - настоящее имя пользователя (для русских ещё и отчество)</para>
                <para> -S    - фамилия пользователя</para>
                <para> -P    - ends by invoking smbldap-passwd</para>
                <para>For samba users:</para>
                <para> -a    - add sambaSAMAccount objectclass</para>
                <para> -e    - expire date ("YYYY-MM-DD HH:MM:SS")</para>
                <para> -A    - возможность менять пароль пользователем, значение 0 если нет, 1 если да</para>
                <para> -B    - пользователь должен поменять пароль, значение 0 если нет, 1 если да</para>
                <para> -C    - домашний каталог samba (например '\\PDC-SRV\homes')</para>
                <para> -D    - буква диска для монтирования домашнего каталога samba (например 'H:')</para>
                <para> -E    - скрипт, выполняемый при входе в систему</para>
                <para> -F    - каталог профиля пользователя (например '\\PDC-SRV\profiles\foo')</para>
                <para> -H    - sambaAcctFlags (samba account control bits like '[NDHTUMWSLKI]')</para>
                <para> -I    - disable an user. Can't be used with -H or -J</para>
                <para> -J    - enable an user. Can't be used with -H or -I</para>
                <para> -M    - mailAddresses (comma seperated)</para>
                <para> -T    - mailToAddress (forward address) (comma seperated)</para>
                <para> -?|-h — отобразить помощь</para>
                <para>Например команда: </para>
                <para>smbldap-usermod -A 1 ladserg</para>
                <para>Позволит пользователю ladserg менять пароль. А команда: </para>
                <para>smbldap-usermod -a slad-adm</para>
                <para>Добавит к учётной записи пользователя slad-adm класс sambaSAMAccount, что сделает его пользователем samba. </para>
                <para>Удаление пользователя</para>
                <para>smbldap-userdel [-r|-R|-?] username</para>
                <para>Где: </para>
                <para> -r    удалить домашний каталог</para>
                <para> -R    удалить домашний каталог с запросом на удаление каждого файла</para>
                <para> -?    отобразить помощь</para>
                <para>Например команда: </para>
                <para>smbldap-userdel -r slad-adm </para>
                <para>удалит пользователя slad-adm, и его домашний каталог. </para>
                <para>Управление пользователями в оффтопике</para>
                <para>Если вы вводите в домен компьютеры под управлением Windows, то вам пригодятся пара утилит, архив которых можно скачать отсюда: </para>
                <para>
                    <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ftp://ftp.microsoft.com/Softlib/MSLFILES/SRVTOOLS.EXE">ftp://ftp.microsoft.com/Softlib/MSLFILES/SRVTOOLS.EXE</link>
                </para>
            </section>
        </section>
        <section>
            <info>
                <title>Мониторинг работы системы</title>
            </info>
            <section>
                <info>
                    <title>Введение</title>
                </info>
                <para>В данной статье описывается, как осуществить мониторинг разных системных и физических параметров компьютеров, работающих под GNU/Linux или другими UNIX. </para>
                <para>Постановка задачи</para>
                <para>Нужно осуществлять постоянный мониторинг основных параметров работы компьютеров (физических и системных) через сеть, собирать и выдавать эту информацию в удобной форме.</para>
                <para>Для примера см: http://monitoring.sourceforge.net/example.html</para>
                <para>К основным системным параметрам относят: загрузка процессоров (пользователями, системой, привилегированными программами, свободное процессорное время), использования оперативной памяти (и многие другие, всего больше 100), дисков, сетевого трафика. Для получения необходимых нам значений параметров работы системы используем программы df, sar и iptables или ipfw.</para>
                <para>К физическим параметрам относят: температуру процессора и материнской платы, скорость вращения вентиляторов, напряжения питания. Для получения показателей датчиков материнских плат используется модуль ядра I2C и программа lm_sensors.</para>
                <para>Для передачи информации через сеть используем клент-серверную модель и программу Net-Telnet. Базу данных строим пакетом rrdtool, информацию предоставляем через сервер apache и/или по почте. С помощью скриптов постараемся максимально упростить и автоматизировать поставленную задачу, это избавит вас от рутинной работы.</para>
                <para>Программа работает по клиент-серверной технологии. На компьютерах, которые нужно мониторить, размещается часть программы, которая снимает различные показатели работы компьютера и выдает их по запросу через сеть. На одном административном компьютере осуществляется периодический опрос всех компьютеров, за которыми ведется наблюдение, данные записываются в специально созданную базу, и на её основе формируется html страница, которая экспортируется через apache для просмотра обычным браузером.</para>
                <para>Теперь подробно о том, что нам нужно сделать:</para>
                <para>Загружаем последнюю версию программы для мониторинга с сайта http://monitoring.sourceforge.net/ Файл monitoring-*.tar.bz2 размещаем в доступном месте, например в папке локального ftp: /var/ftp/pub/linux. </para>
            </section>
            <section>
                <info>
                    <title>"Серверная" сторона</title>
                </info>
                <para>Разархивируйте monitoring-*.tar.bz2.</para>
                <para>У Gentoo есть ебилд, для установки программы monitoring со всеми зависимостями. С сайта необходимо скачать monitoring-*.ebuild.tar.bz2 и распаковать его в /usr/local. Далее выполните: </para>
                <para># emerge -pv monitoring</para>
                <para>[ebuild N ] net-analyzer/monitoring-0.11 USE="-admin -apache2 -lm_sensors -server"</para>
                <para>Для серверной стороны необходимо добавить USE="server", а для поддержки мониторинга датчиков USE="lm_sensors" </para>
                <para># export "USE=lm_sensors server"</para>
                <para># emerge monitoring</para>
                <para>Компиляция и установка lm_sensors, sysstat, iptables, coreutils, xinetd в случае использования Gentoo можно пропустить, потому что эти пакеты уже установлены как зависимости, и перейти сразу к их настройке. </para>
            </section>
            <section>
                <info>
                    <title>Мониторинг физических параметров</title>
                </info>
                <para>Определяем на базе какого чипсета сделаны платы: материнская, видеокарта (некоторые имеют датчики) и прочие, заходим на страницы: http://secure.netroedge.com/~lm78/supported.html и http://www.lm-sensors.nu/~lm78/newdrivers.html и ищем, есть ли драйверы для мониторинга этих плат под Линуксом. Если определили, что ваши чипсеты поддерживаются и драйвер стабильный, можете продолжить выполнение этого пункта.</para>
                <para>Внимание, если версия ядра меньше за 2.4.9, нужно обновить ядро или воспользоваться старой версией программы! смотрите: i2c. Если ядро версии 2.4.*, вам дополнительно нужен СООТВЕТСТВУЮЩИЙ! модуль i2c-*.*.*.tar.gz, родной Линуксовый не подходит. В версии ядра 2.6.* все хорошо — отлично работает родной модуль ядра i2c. </para>
            </section>
            <section>
                <info>
                    <title>Компиляция ядра</title>
                </info>
                <para>Подробную инструкцию по сборке нового ядра можно прочесть по ссылке "Ставим ядро 2.6, или Ядерная физика для домохозяйки. Версия 2.0"</para>
                <para>Обратите особое внимание на пункты, которые добавляют к ядру GNU/Linux поддержку сенсоров:</para>
                <para>Для поддержания ACPI: </para>
                <para>Power management options (ACPI, APM) ---&gt; ACPI (Advanced Configuration and Power Interface) Support ---&gt;</para>
                <para>Для поддержки IPMI стандарта управления сенсорами. </para>
                <para>Device Drivers ---&gt; Character devices ---&gt; IPMI ---&gt;</para>
                <para>Включаем поддержку сенсоров в ядре </para>
                <para>Device Drivers ---&gt; I2C support ---&gt;</para>
                <para>Выбираем алгоритмы, использующие ваши чипы </para>
                <para>Device Drivers ---&gt; I2C support ---&gt; I2C Algorithms ---&gt;</para>
                <para>Выбираем ваш чипсет (внимание, здесь нужно указать чипсет именно вашей системной платы, или видеокарты, см. ниже): </para>
                <para>Device Drivers ---&gt; I2C support ---&gt; I2C Hardware Bus support ---&gt;</para>
                <para>Device Drivers ---&gt; I2C support ---&gt; Miscellaneous I2C Chip support ---&gt;</para>
                <para>Выбираем драйверы ко всем вашим сенсорам (внимание, именно тех, соответствующих вашим чипам, предыдущим пунктам): </para>
                <para>Device Drivers ---&gt; Hardware Monitoring support ---&gt;</para>
                <para>Можно собрать необходимые драйверы как модули, хотя это несколько добавит работы при настройке (нужно будет запустить программу sensors-detect). Для мониторинга сети можно использовать netfilter (iptables) и прочие опции... </para>
                <para>Если Ваше аппаратное обеспечения поддерживается, установите lm_sensors</para>
                <para>Загружаем с: lm_sensors, свеженькую версию lm_sensors-*.*.*.tar.gz. Разархивируем lm_sensors-*.*.*.tar.gz Заходим в директорию, какая создалась и выполняем: </para>
                <para># make user</para>
                <para># make user_install</para>
                <para># depmod -a</para>
                <para>Проверяем, есть ли строка /usr/local/lib в файле /etc/ld.so.conf, если нет, добавляем и выполняем команду: </para>
                <para># ldconfig</para>
                <para>Настройка lm_sensors</para>
                <para>Выполняем команду </para>
                <para># prog/mkdev/mkdev.sh</para>
                <para>Чтобы правильно определить ваше оборудование и знать, какие модули нужно загрузить, выполним: </para>
                <para># prog/detect/sensors-detect</para>
                <para>именно этот скрипт и указывает, какие у вас чипсеты, и какие в них сенсоры!</para>
                <para>Добавляем строки, созданные программой для modules.conf в /etc/modules.conf</para>
                <para>Копируем prog/init/lm_sensors.init в каталог /etc/rc.d/init.d/lm_sensors (назначить права для исполнения).</para>
                <para>Добавляем строки, которые создала программа prog/detect/sensors-detect с modprobe и sensors -s например, в конец файла /etc/conf.d/local.start — чтобы они загружались при старте системы</para>
                <para>или можно запускать как сервис:</para>
                <para>для Gentoo выполняем: </para>
                <para># rc-update -a lm_sensors default</para>
                <para>Только для клонов RedHat выполняем: </para>
                <para># chkconfig --add lm_sensors</para>
                <para>копируем prog/init/lm_sensors.sysconfig в /etc/sysconfig/lm_sensors</para>
                <para>копируем etc/sensors.conf.eg в /etc/sensors.conf</para>
                <para>копируем prog/sensors/sensors в каталог /usr/bin/sensors (предоставить права на выполнение) </para>
                <para>Все теперь выполняют modprobe с параметрами, которые указала программа sensors-detect для загрузки модулей, потом выполняем: </para>
                <para># sensors -s</para>
                <para>Корректируем /etc/sensors.conf таким образом, чтобы названия напряжений, скорости вентиляторов и температур, именно Ваших чипов содержали соответственно: "Volt", "Fan", "Temp". При этом, названия меток допускают только малые и большие латинские буквы, цифры, знак "_", и не должны содержать знаков „.”, ”/” или ”+”! Выполнение этих условий обязательно!!!</para>
                <para>Пример /etc/sensors.conf можно найти в server/etc/sensors.conf</para>
                <para>Например, для lm85*: </para>
                <para># cat /etc/sensors.conf</para>
                <para>...</para>
                <para># Voltage inputs</para>
                <para>  label in0   "VoltA1_5"      # AGP on Intel S845WD1-E</para>
                <para>  label in1   "Volt1_5"</para>
                <para>  label in2   "Volt3_3"</para>
                <para>  label in3   "Volt5"</para>
                <para>  label in4   "Volt12"</para>
                <para># Temperature inputs</para>
                <para>  label temp1  "TempCPU"</para>
                <para>  label temp2  "TempMB1"</para>
                <para>  label temp3  "TempMB2"</para>
                <para># Fan inputs</para>
                <para>  label fan1   "FanCPU"</para>
                <para>  label fan2   "FanSys1"</para>
                <para>  label fan3   "FanSys2"</para>
                <para>  label fan4   "FanSys3"</para>
                <para># PWM Outputs</para>
                <para>  label pwm1   "CPUF_PWM"</para>
                <para>  label pwm2   "SysF1_PWM"</para>
                <para>  label pwm3   "SysF2_PWM"</para>
                <para>...</para>
                <para>Теперь выполним команду sensors, и если у нас все получилось, то увидим примерно следующее: </para>
                <para># sensors</para>
                <para>lm85b-i2c-0-2e </para>
                <para>Adapter: SMBus I801 adapter at c800 </para>
                <para>VoltA1_5:   +1.48 V  (min =  +1.42 V, max =  +1.58 V)</para>
                <para>Volt1_5:    +1.50 V  (min =  +1.45 V, max =  +1.60 V)</para>
                <para>Volt3_3:    +3.33 V  (min =  +3.13 V, max =  +3.47 V)</para>
                <para>Volt5:     +5.10 V  (min =  +4.74 V, max =  +5.26 V)</para>
                <para>Volt12:   +12.31 V  (min = +11.38 V, max = +12.62 V)</para>
                <para>FanCPU:    3360 RPM  (min = 3000 RPM)</para>
                <para>TempCPU:     +36C  (low  =   +10C, high =   +60C)</para>
                <para>TempMB1:     +33C  (low  =   +10C, high =   +45C)</para>
                <para>TempMB2:     +33C  (low  =   +10C, high =   +45C)</para>
                <para>CPUF_PWM:  255</para>
                <para>SysF1_PWM: 255</para>
                <para>SysF2_PWM:  77</para>
                <para>vid:      +1.525 V    (VRM Version  9.1)</para>
                <para>Если у вас названия напряжений, скорости вентиляторов и температуры не содержат соответственно: "Volt", "Fan", "Temp" — обязательно отредактируйте файл /etc/sensors.conf как показано выше. </para>
            </section>
            <section>
                <info>
                    <title>Мониторинг системных параметров</title>
                </info>
                <para>Установка sysstat</para>
                <para>Загружаем последнюю версию пакета sysstat с сайта http://perso.wanadoo.fr/sebastien.godard/ или ftp://ibiblio.org/pub/Linux/system/status/ </para>
                <para>Розархивируем файл sysstat-*.*.*.tar.bz2 в /usr/src </para>
                <para>Заходим в созданный каталог и выполняем: </para>
                <para># make config                 #Отвечаем на вопросы только 'y' или 'n'</para>
                <para># make</para>
                <para># make install</para>
                <para>Теперь из командной строки пробуем: </para>
                <para># sar -A 1 1 |grep Average: </para>
                <para>Average:       proc/s </para>
                <para>Average:         0.00 </para>
                <para>Average:      cswch/s </para>
                <para>Average:       258.00 </para>
                <para>Average:          CPU     %user     %nice   %system   %iowait     %idle </para>
                <para>Average:          all      1.90      0.00      0.40      0.00     97.70 </para>
                <para>........................................................................</para>
                <para>Average:      runq-sz  plist-sz   ldavg-1   ldavg-5  ldavg-15 </para>
                <para>Average:            0        83      0.06      0.15      0.16 </para>
                <para>Проверка df</para>
                <para># df</para>
                <para>Filesystem           1K-blocks      Used Available Use% Mounted on</para>
                <para>/dev/sda3              2007996    411772   1596224  71% /</para>
                <para>/dev/sda1               132206     10981    114399  43% /boot</para>
                <para>/dev/sda5               248895      4256    231789   2% /tmp</para>
                <para>/dev/sda6              5863496   2556028   3307468  64% /var</para>
                <para>/dev/sda7              6843432   5128048   1715384  75% /usr</para>
                <para>/dev/sda8              1976492   1048740    827348  56% /home</para>
                <para>/dev/sda9              5863496   4479752   1383744  77% /usr/portage/distfiles</para>
                <para>none                    254752         0    254752   0% /dev/shm</para>
                <para>/usr/portage/distfiles 5863496   4479752   1383744  77% /var/ftp/pub/linux/distfiles</para>
                <para>/usr/portage/packages  6843432   5128048   1715384  75% /var/ftp/pub/linux/packages</para>
                <para>Если Вам выдало: </para>
                <para>bash: df: command not found</para>
                <para>установите df из пакета coreutils. </para>
            </section>
            <section>
                <info>
                    <title>Мониторинг сети</title>
                </info>
                <para>Мониторинг сети основывается на подсчете байт, попадающих в правила сетевых экранов — iptables или ipfw, и поэтому они достаточно гибкие, но является зависимым от конфигурации сетевого экрана.</para>
                <para>Если Вы хотите осуществлять мониторинг сети: просмотрите server/etc/show_network.conf (/etc/monitoring/show_network.conf) – это список графиков, которые Вы получите. Он должен отвечать названиям графиков в admin/etc/network (/etc/monitoring/network). </para>
            </section>
            <section>
                <info>
                    <title>Linux iptables</title>
                </info>
                <para>Нужно откорректировать server/etc/show_iptables_acc.conf (/etc/monitoring/show_network.conf)</para>
                <para>1 колонка – название графика (должна отвечать show_network.conf, но с “in_*.N” или “out_*.N”, где N – некоторый идентификатор, например число)</para>
                <para>2 колонка – название таблицы</para>
                <para>3 колонка – название цепочки с таблицы</para>
                <para>4 колонка – порядковый номер правила с цепочки</para>
                <para>Это всё должно отвечать Вашим правилам!</para>
                <para>Простые примеры экранов находятся в server/firewall/* и если подходит Вам, можете использовать их.</para>
                <para>Проверьте работу /usr/bin/show_iptables.sh. Результат найдёте в /home/monitoring </para>
            </section>
            <section>
                <info>
                    <title>FreeBSD ipfw</title>
                </info>
                <para>Для BSD, надо откорректировать server/bin/show_ipf_acc.conf:</para>
                <para>1 колонка – название графика</para>
                <para>2 колонка – номер правила</para>
                <para>3 колонка – порядковый номер правила в ipfw show</para>
                <para>Это должно отвечать Вашим правилам!</para>
                <para>Проверьте работу /usr/bin/show_ipfw.sh Результат в /home/monitoring </para>
                <para>Некоторые важные системные настройки</para>
                <para>Если нет xinetd – установите его. Загляньте в </para>
                <para>server/etc/host.allow (/etc/host.allow): </para>
                <para># BEGIN allow services for monitoring</para>
                <para>show_hdisk.sh:127.0.0.1 # IP ком п'ютера что мониторит</para>
                <para>show_sensors.sh:127.0.0.1 # IP ком п'ютера что мониторит</para>
                <para>show_info.sh:127.0.0.1 # IP ком п'ютера что мониторит</para>
                <para>show_system.sh:127.0.0.1 # IP ком п'ютера что мониторит</para>
                <para>show_network.sh:127.0.0.1 # IP ком п'ютера что мониторит</para>
                <para># END allow services for monitoring</para>
                <para>Также некоторые из них вы можете изменить в server/bin/show_* и строки "only_from", "bind" и "disable" в server/xinetd.d/show_* </para>
                <para>$ cat server/xinetd.d/show_hdisk</para>
                <para># default: on</para>
                <para># description: The showdisk server show disk useg on the server.</para>
                <para>#       It dont uses authentication !!!!!!!!!!!!!!!.</para>
                <para>service df</para>
                <para>{</para>
                <para>       socket_type             = stream</para>
                <para>       wait                    = no</para>
                <para>       user                    = monitoring</para>
                <para>       bind                    = 127.0.0.1               # IP сетевого интерфейса, на котором мониторят</para>
                <para>       server                  = /usr/bin/show_hdisk.sh</para>
                <para>       only_from               = 127.0.0.1               # IP комп'ютера, который мониторит</para>
                <para>       disable                 = no                      # Вкл./Выкл.</para>
                <para>}</para>
                <para>Откройте доступ к следующим портам: 9045/tcp 9046/tcp 9047/tcp 9048/tcp 9049/tcp с административного компьютера в случае наличия сетевых экранов. Если Вы хотите осуществить установку вручную, пропустите следующий пункт. </para>
                <para>Автоматическая инсталляция</para>
                <para>Для автоматической установки отредактируйте следующие строки в monitoringinstall.sh (/usr/sbin/monitoringinstall.sh): </para>
                <para># Edit this first:</para>
                <para># all command will execute user:</para>
                <para>runuser=monitoring</para>
                <para>rungroup=monitoring</para>
                <para># cron cfg directory</para>
                <para>cronpath=/etc/cron.d</para>
                <para># init script locations:</para>
                <para>crond=/etc/init.d/crond</para>
                <para># Edit only for server side:</para>
                <para># init script location:</para>
                <para>xinetd=/etc/init.d/xinetd</para>
                <para># program location:</para>
                <para>dfpath=/bin/df</para>
                <para>sarpath=/usr/bin/sar</para>
                <para>sensorspath=/usr/bin/sensors</para>
                <para>Теперь с правами суперпользователя выполните: </para>
                <para># ./monitoringinstall.sh --server</para>
                <para>В Gentoo просто: </para>
                <para># monitoringinstall.sh --server</para>
                <para>Вы можете пропустить пункт следующий пункт и перейти к „административной” части системы. </para>
            </section>
            <section>
                <info>
                    <title>Ручная установка</title>
                </info>
                <para>Копируем следующие файлы: </para>
                <para>cp server/etc/show_iptables_acc.conf /etc/monitoring        #for GNU/Linux</para>
                <para>cp server/etc/show_ipfw_acc.conf /etc/monitoring        #for BSD</para>
                <para>cp server/etc/show_network.conf /etc/monitoring</para>
                <para>cp server/xinetd.d/show_hdisk /etc/xinetd.d/</para>
                <para>cp server/xinetd.d/show_network /etc/xinetd.d/</para>
                <para>cp server/xinetd.d/show_sensors /etc/xinetd.d/</para>
                <para>cp server/xinetd.d/show_system /etc/xinetd.d/</para>
                <para>cp server/bin/show_hdisk.sh /usr/bin</para>
                <para>cp server/bin/show_iptables.sh /usr/bin                #for GNU/Linux</para>
                <para>cp server/bin/show_ipfw.sh /usr/bin                        #for BSD</para>
                <para>cp server/bin/show_network.sh /usr/bin</para>
                <para>cp server/bin/show_sar.sh /usr/bin</para>
                <para>cp server/bin/show_sensors.sh /usr/bin</para>
                <para>cp server/bin/show_system.sh /usr/bin</para>
                <para>Добавим следующие строки к /etc/service: </para>
                <para>network                9045/tcp                        # show network info</para>
                <para>info                9046/tcp                        # show server info</para>
                <para>df                9047/tcp                        # show disk info</para>
                <para>sys                9048/tcp                        # show system info</para>
                <para>sensors                9049/tcp                        # show sensors info</para>
                <para>Создадим специального пользователя: </para>
                <para>groupadd monitoring</para>
                <para>useradd -g monitoring -d /home/monitoring -s /bin/bash -c monitoring monitoring</para>
                <para>mkdir /home/monitoring</para>
                <para>chmod 700 /home/monitoring</para>
                <para>chown -R monitoring:monitoring /home/monitoring</para>
                <para>В случае использования политик SELinux необходимо также добавить: </para>
                <para># cat /etc/security/selinux/src/policy/users</para>
                <para>...</para>
                <para># BEGIN monitoring selinux:</para>
                <para>user monitoring roles user_r;</para>
                <para># END monitoring selinux.</para>
                <para>и дополнительно выполнить: </para>
                <para># cd /etc/security/selinux/src/policy</para>
                <para># make load</para>
                <para>Перегрузим xinetd: </para>
                <para># /etc/init.d/xinetd restart</para>
                <para>и добавьте строки в crontab: </para>
                <para>*/10 * * * * monitoring /usr/bin/show_iptables.sh        # для GNU/Linux</para>
                <para>*/10 * * * * monitoring /usr/bin/show_ipfw.sh                # для BSD</para>
                <para>*/1 * * * * monitoring /usr/bin/show_sar.sh</para>
                <para>Перегрузим crond: </para>
                <para># /etc/init.d/crond restart</para>
                <para>Все вышесказанное нужно сделать на КАЖДОМ сервере, который вы хотите мониторить... </para>
            </section>
            <section>
                <info>
                    <title>"Административная" сторона</title>
                </info>
                <para>Для начала убедитесь что все хорошо со стороны серверов</para>
                <para>Для каждого сервера проверяем доступность необходимых сервисов: </para>
                <para># telnet server_name 9045</para>
                <para>Trying serverIP...</para>
                <para>Connected to serverIP.</para>
                <para>Escape character is '^]'.</para>
                <para>in_ftp                    0</para>
                <para>out_ftp                   0</para>
                <para>in_http                    0</para>
                <para>out_http                   0</para>
                <para>in_other                    249</para>
                <para>out_other                   27</para>
                <para>Connection closed by foreign host.</para>
                <para># telnet server_name 9046</para>
                <para>Trying serverIP...</para>
                <para>Connected to server_name.</para>
                <para>Escape character is '^]'.</para>
                <para>  Intel(R) Celeron(R) CPU 2.40GHz | 504 Mb</para>
                <para>Connection closed by foreign host.</para>
                <para># telnet server_name 9047</para>
                <para>Trying serverIP...</para>
                <para>Connected to server_name.</para>
                <para>Escape character is '^]'.</para>
                <para>/dev/sda3              2007996    411772   1596224  71% /</para>
                <para>/dev/sda1               132206     10981    114399  43% /boot</para>
                <para>/dev/sda5               248895      4256    231789   2% /tmp</para>
                <para>/dev/sda6              5863496   2556028   3307468  64% /var</para>
                <para>/dev/sda7              6843432   5128048   1715384  75% /usr</para>
                <para>/dev/sda8              1976492   1048740    827348  56% /home</para>
                <para>/dev/sda9              5863496   4479752   1383744  77% /usr/portage/distfiles</para>
                <para>Connection closed by foreign host.</para>
                <para># telnet server_name 9048</para>
                <para>Trying serverIP...</para>
                <para>Connected to server_name.</para>
                <para>Escape character is '^]'.</para>
                <para>Average:       proc/s</para>
                <para>Average:         3.98</para>
                <para>Average:      cswch/s</para>
                <para>Average:       308.00</para>
                <para>Average:          CPU     %user     %nice   %system   %iowait     %idle</para>
                <para>Average:          all      1.76      0.00      0.47      0.00     97.76</para>
                <para>.............................................................</para>
                <para>Average:      runq-sz  plist-sz   ldavg-1   ldavg-5  ldavg-15</para>
                <para>Average:            1        88      0.05      0.21      0.21</para>
                <para>Connection closed by foreign host.</para>
                <para># telnet server_name 9049</para>
                <para>Trying serverIP...</para>
                <para>Connected to server_name.</para>
                <para>Escape character is '^]'.</para>
                <para>lm85b-i2c-0-2e</para>
                <para>Adapter: SMBus I801 adapter at c800</para>
                <para>Volt1_5:    +1.48 V  (min =  +1.42 V, max =  +1.58 V)</para>
                <para>VoltCore:   +1.50 V  (min =  +1.45 V, max =  +1.60 V)</para>
                <para>Volt3_3:    +3.33 V  (min =  +3.13 V, max =  +3.47 V)</para>
                <para>Volt5:     +5.10 V  (min =  +4.74 V, max =  +5.26 V)</para>
                <para>Volt12:   +12.25 V  (min = +11.38 V, max = +12.62 V)</para>
                <para>CPU_Fan:   3377 RPM  (min = 3000 RPM)</para>
                <para>fan2:         0 RPM  (min =    0 RPM)</para>
                <para>fan3:         0 RPM  (min =    0 RPM)</para>
                <para>fan4:         0 RPM  (min =    0 RPM)</para>
                <para>TempCPU:     +32 C  (low  =   +10 C, high =   +50 C)</para>
                <para>TempBoard:   +30 C  (low  =   +10 C, high =   +45 C)</para>
                <para>TempRemot:   +30 C  (low  =   +10 C, high =   +40 C)</para>
                <para>CPU_PWM:   255</para>
                <para>Fan2_PWM:  255</para>
                <para>Fan3_PWM:   77</para>
                <para>vid:      +1.525 V  (VRM Version 9.0)</para>
                <para>Connection closed by foreign host.</para>
            </section>
            <section>
                <info>
                    <title>Установление необходимых программ</title>
                </info>
                <para>Разархивируйте monitoring-*.tar.bz2.</para>
                <para>Для Gentoo есть ебилд, для установления программы monitoring со всеми зависимостями с сайта стоит брать monitoring-*.ebuild.tar.bz2 и распаковать его в /usr/local дальше выполните: </para>
                <para># emerge -pv monitoring</para>
                <para>[ebuild N ] net-analyzer/monitoring-0.11 USE="-admin -apache2 -lm_sensors -server"</para>
                <para>Для административной стороны необходимо добавить USE=admin, а для поддержки apache-2* USE=apache2 </para>
                <para># export "USE=admin apache2"</para>
                <para># emerge monitoring</para>
                <para>Компиляцию и установление rrdtool, apache, Net-Telnet в случае использования Gentoo можно пропускать, потому что эти пакеты уже будут установлены как зависимости, а переходить сразу к их настройке. </para>
            </section>
            <section>
                <info>
                    <title>Инсталляция rrdtool</title>
                </info>
                <para>Базой данных, для хранения информации и инструмент генерации графиков, используется пакет rrdtool (round robin database tool). Зкачать пакет можно отсюда: http://rrdtool.eu.org или http://people.ee.ethz.ch/~oetiker/webtools/rrdtool/ Подробно ознакомиться с этим пакетом можно здесь: http://www.bog.pp.ru/work/rrdtool.html (Российская). В принципе, программа самостоятельно создаст необходимые базы так, что дополнительных знаний не нужно и следующий пункт Пример расчёта настройки базы RRD можно пропустить. </para>
                <para>Пример расчёта настройки базы RRD</para>
                <para>Расчёт настроек создания базы RRD файлы /etc/monitoring/*.rrd.cf Количество "слов" в файле будет соотведствовать количеству графиков в разных маштабах времени. например для расчёта подобия MRTG: 5-ти минутный — даные за последние 2 дня: х-доля=0.5 количество отсчётов на ячейку=1 количество ячеек=2*24*12=576 +min+max+avg+cur ~ 650 </para>
                <para>0.5:1:650</para>
                <para>30-ти минутный — дание за последние две недели: х-доля=0.5 количество отсчётов на ячейку=30/5=6 количество ячеек=2*7*24*2=672 +min+max+avg+cur ~ 750 </para>
                <para>0.5:6:750</para>
                <para>2-ух часовой — даные за последние два месяца: х-доля=0.5 количество отсчётов на ячейку=60*2/5=24 количество ячеек=2*31*24/2=744 +min+max+avg+cur ~ 850 </para>
                <para>0.5:24:850</para>
                <para>1-но дневный — даные за последние два года: х-доля=0.5 количество отсчётов на ячейку=60*24/5=288 количество ячеек=2*366=732 +min+max+avg+cur ~ 900 </para>
                <para>0.5:288:900</para>
                <para>Таким образом имеем: </para>
                <para># cat /etc/monitoring/5min.rrd.cf</para>
                <para>0.5:1:650        0.5:6:750        0.5:24:850        0.5:288:900</para>
            </section>
            <section>
                <info>
                    <title>Инсталляция Net-Telnet</title>
                </info>
                <para>Данная версия программы для работы через сеть требует Net-Telnet perl модуль (можно при желании использовать и netcat): из-за этого нужно установить perl (что пожалуй уже сделано). Дальше Net-Telnet perl модуль берем и устанавливаем отсюда: http://cpan.perl.org/modules/by-module/Net/ название файлу Net-Telnet-*.tar.gz </para>
            </section>
            <section>
                <info>
                    <title>Инсталляция Apache</title>
                </info>
                <para>Нужно установить и настроить apache сервер, дополнительно можете добавить (admin/etc/apache/monitoring.conf): </para>
                <para># cat /etc/apache2/vhosts.d/monitoring.conf</para>
                <para>### /etc/apache2/vhosts.d/monitoring.conf</para>
                <para>### $Id: monitoring.conf,v 0.11 2006/09/28 16:27:12 hse Exp $</para>
                <para>###</para>
                <para>### For Monitoring *.shtml</para>
                <para>AddType text/html .shtml</para>
                <para>AddOutputFilter INCLUDES .shtml</para>
                <para>### For authentication:</para>
                <para>&lt;Directory "/var/www/localhost/htdocs/administration/monitoring"&gt;</para>
                <para>   AllowOverride All</para>
                <para>   Options Includes</para>
                <para>   &lt;IfModule mod_access.c&gt;</para>
                <para>### For password authentication:</para>
                <para>#       AuthUserFile /var/www/localhost/htdocs/administration/passwd_file</para>
                <para>#       AuthGroupFile /dev/null</para>
                <para>#       AuthName Administrative-information</para>
                <para>#       AuthType Basic</para>
                <para>#       Require valid-user</para>
                <para>### For host/network authentication:</para>
                <para>        Order deny,allow</para>
                <para>        Deny from all</para>
                <para>        Allow from 127.0.0.1</para>
                <para>#        Allow from .cluster.linux</para>
                <para>    &lt;/IfModule&gt;</para>
                <para>&lt;/Directory&gt;</para>
                <para>Добавляем пользователя для просмотра веб страницы: </para>
                <para># htpasswd -bcm /var/www/localhost/htdocs/administration/passwd_file username password</para>
                <para>Если все хорошо идем дальше. </para>
            </section>
            <section>
                <info>
                    <title>Установка программ для мониторинга</title>
                </info>
                <para>В файл admin/etc/host (/etc/monitoring/host) вносим перечень серверов, которые нужно мониторить (имена должны разрешаться в IP адреса). Коректируем под свои потребности файл admin/etc/monitoring.conf (/etc/monitoring/monitoring.conf) </para>
                <para>путь по которому установлено скрипт:</para>
                <para>installpath=/usr/</para>
                <para>путь к веб страницы:</para>
                <para>apachehtmldir=/var/www/html</para>
                <para>webdirpath=/administration/monitoring</para>
                <para>путь к файлу с перечнем серверов для мониторинга:</para>
                <para>confpath=$installpath/etc/host</para>
                <para>путь к временных файлов:</para>
                <para>diskinfopath=/tmp/monitoring/disk.tmp</para>
                <para>sarinfopath=/tmp/monitoring/sar.tmp</para>
                <para>sensorsinfopath=/tmp/monitoring/sensors.tmp</para>
                <para>путь где установлен пакет rrdtool:</para>
                <para>rrdtoolpath=/usr/bin/rrdtool</para>
                <para>почтовый адресов:</para>
                <para>emailvalue=root@localhost</para>
                <para>По желанию (или за потребностью) правим другие файлы с каталога etc/ (/etc/monitoring/):</para>
                <para>diskusage memusage quantity cpu memory systemload — содержимое файлов должно отвечать тем параметрам которые Вы хотите мониторить. Все параметры должны выводиться командой sar -A 1 1 |grep Average: Названия файлов отвечают названиям графиков и баз которые создадутся и должны быть записаны в файле system. Значение параметров принадлежащих одном файлу должны быть одного типа!</para>
                <para>system — первая колонка определяет какие графики получите и каждый ее элемент отвечать файлу из этого же каталога (см. выше). Вторая указывает через какие периоды времени база rrdtool будет принимать данные. Третья и четвертая колонка определяет минимальное и максимальное значение параметра которое еще может быть записано в базу. Пятая колонка определяет легенду (размерность).</para>
                <para>сolors — файл с номерами цветов в 16-ричной системе.</para>
                <para> </para>
                <para>config — содержит имена конфигурационных файлов из этого же каталога отвечающие веб страницам что создаються (можно добавлять свои, но тогда их должны создать!).</para>
                <para>disk — содержит названия графиков, периоды времени через которые база rrdtool будет принимать данные, минимальные и максимальные значение параметров которые мониторите, легенду (размерность).</para>
                <para>network — содержит названия графиков, периоды времени через которые база rrdtool будет принимать данные, минимальные и максимальные значение параметров которые мониторите, легенду (размерность).</para>
                <para>sensors — содержит названия графиков, периоды времени через которые база rrdtool будет принимать данные, минимальные и максимальные значение параметров которые мониторите, легенду (размерность).</para>
                <para>disk.rrd.cf network.rrd.cf sensors.rrd.cf system.rrd.cf — описывают структуру базы данных.</para>
                <para>disk.msg network.msg sensors.msg system.msg — содержит информацию которую получите почтой в критических ситуациях.</para>
                <para>Если хотите осуществить установку вручную, пропустите следующий пункт. </para>
            </section>
            <section>
                <info>
                    <title>Автоматическая установка программ</title>
                </info>
                <para>Теперь можете воспользоваться скриптом для инсталляции. Для этого нужно откорректировать следующие строки в файле monitoringinstall.sh (/usr/sbin/monitoringinstall.sh) или пропустить этот пункт и следовать дальнейшей инструкции для установки в ручную. </para>
                <para>имя пользователя и группы:</para>
                <para>runuser=monitoring</para>
                <para>rungroup=monitoring</para>
                <para>директория где расположены cron настройки:</para>
                <para>cronpath=/etc/cron.d</para>
                <para>путь к инициализационному скрипту</para>
                <para>crond crond=/etc/init.d/crond</para>
                <para>директория где находятся настройки apache</para>
                <para>apachconfdir=/etc/apache/conf</para>
                <para>файл конфигурации apache:</para>
                <para>apachconffile=apache.conf</para>
                <para>путь к инициализационному скрипту apache</para>
                <para>apached=/etc/init.d/apache</para>
                <para>Теперь с правами рута выполните (нужно подождать 1 минуту, если не установили мониторинг сети, и 10 минут после установки мониторынга сети на последнем сервере, прежде чем выполнять следующую команду): </para>
                <para># ./monitoringinstall.sh --admin</para>
                <para>В Gentoo просто </para>
                <para># monitoringinstall.sh --admin</para>
                <para>Если видите ошибки, наверное надо:</para>
                <para>1 поправить файлы конфигурации в admin/etc/ (/etc/monitoring)</para>
                <para>2 посмотреть в /home/monitoring/hostname/err/...</para>
                <para>3 удалить файлы с /home/monitoring/hostname/ и перезапустити скрипт</para>
                <para>4 удалить базы данных с /var/db/monitoring/... и перезапустити скрипт</para>
                <para>5 bin/net_telnet.pl читает только 500 строк входа. Если в Вас больше, отредактируйте його:</para>
                <para>line 32: while [$и ne 500]</para>
                <para>Тогда попробуйте еще, но добавьте имена сервисов, под рутом выполните: </para>
                <para># ./monitoringinstall.sh --admin=disk</para>
                <para># ./monitoringinstall.sh --admin=sensors</para>
                <para># ./monitoringinstall.sh --admin=system</para>
                <para># ./monitoringinstall.sh --admin=network</para>
                <para>Если где-то допустили ошибку, можно просто выполнить monitoringuninstall.sh и попытаться еще раз. Можете пропустить следующий пункт. </para>
            </section>
            <section>
                <info>
                    <title>Ручная установка программ</title>
                </info>
                <para>Устанавливаем скрипти для мониторинга, генерации базы данных и веб страницы скопировав с каталога monitoring/admin в каталог: /usr/ ($INSTALL_PATH), используя опцию –p для сохранения прав. Выполняем: </para>
                <para># cp -p admin/bin/* $INSTALL_PATH/bin/</para>
                <para># mkdir /etc/monitoring</para>
                <para># cp -p admin/etc/* /etc/monitoring/</para>
                <para># mkdir $INSTALL_PATH/share/monitoring</para>
                <para># cp -p admin/share/* $INSTALL_PATH/share/monitoring/</para>
                <para># mkdir -p /var/www/localhost/htdocs/administration/monitoring</para>
                <para># chmod 755 /var/www/localhost/htdocs/administration/monitoring/</para>
                <para># groupadd -g 1111 monitoring</para>
                <para># useradd -u 1111 -g monitoring -d /home/monitoring -s /bin/bash -c monitoring monitoring</para>
                <para># chmod -R 700 /home/monitoring</para>
                <para># chown -R monitoring:monitoring /home/monitoring</para>
                <para># chown -R monitoring:monitoring /var/www/localhost/htdocs/administration/monitoring/</para>
                <para>И тогда выполняйте (подождите 1 минуту, если не устанавливали мониторинг сети, и 10 минут после установки мониторынга сети на последнем сервере, прежде чем выполнять следующую команду): </para>
                <para># su monitoring</para>
                <para>$ $INSTALL_PATH/bin/net.vert.1.sh</para>
                <para>$ $INSTALL_PATH/bin/net.vert.10.sh</para>
                <para>создаются базы данных в каталоге /var/db/monitoring/имя_сервера/ для всех серверов с файлу /etc/monitoring/host и дополнительная конфигурация в /home/monitoring</para>
                <para>Выполняем: </para>
                <para>$ $INSTALL_PATH/bin/png_graph.sh disk -1week 30min</para>
                <para>$ $INSTALL_PATH/bin/png_graph.sh disk -1month 2hour</para>
                <para>$ $INSTALL_PATH/bin/png_graph.sh disk -1year 1day</para>
                <para>$ $INSTALL_PATH/bin/png_graph.sh network -1week 30min</para>
                <para>$ $INSTALL_PATH/bin/png_graph.sh network -1month 2hour</para>
                <para>$ $INSTALL_PATH/bin/png_graph.sh network -1year 1day</para>
                <para>$ $INSTALL_PATH/bin/png_graph.sh sensors -2day 5min</para>
                <para>$ $INSTALL_PATH/bin/png_graph.sh sensors -1week 30min</para>
                <para>$ $INSTALL_PATH/bin/png_graph.sh sensors -1month 2hour</para>
                <para>$ $INSTALL_PATH/bin/png_graph.sh sensors -1year 1day</para>
                <para>$ $INSTALL_PATH/bin/png_graph.sh system -2day 5min</para>
                <para>$ $INSTALL_PATH/bin/png_graph.sh system -1week 30min</para>
                <para>$ $INSTALL_PATH/bin/png_graph.sh system -1month 2hour</para>
                <para>$ $INSTALL_PATH/bin/png_graph.sh system -1year 1day</para>
                <para>Если видите ошибки, наверное нужно:</para>
                <para>1 поправить файлы конфигурации в /etc/monitoring</para>
                <para>2 посмотреть в /home/monitoring/hostname/err/...</para>
                <para>3 удалить файлы с /home/monitoring/hostname/ и перезапустить скрипт</para>
                <para>4 удалить базы данных с /var/db/monitoring/... и перезапустить скрипт</para>
                <para>5 bin/net_telnet.pl читает только 500 строк входа. Если в Вас больше, отредактируйте его:</para>
                <para>line 32: while [$и ne 500]</para>
                <para>Тогда попробуйте еще раз.</para>
                <para>В каталоге /var/www/localhost/htdocs/administration/monitoring создаются начальная страница и каталоги с веб страницами для каждого сервера.</para>
                <para>Если не возникло больше ошибок, используйте следующий файл для автоматизации всей работы с crond: </para>
                <para>$ exit</para>
                <para># cat /etc/cron.d/monitoring</para>
                <para>SHELL=/bin/bash</para>
                <para>PATH=/bin:/usr/bin</para>
                <para>MAILTO=root</para>
                <para>HOME=/home/monitoring</para>
                <para>LANG=POSIX</para>
                <para># Begin server part (may be you wont monitoring "admin" computer too)</para>
                <para>*/1 * * * * monitoring /usr/bin/show_sar.sh</para>
                <para>*/10 * * * * monitoring /usr/bin/show_iptables.sh        #GNU/Linux</para>
                <para>#*/10 * * * * monitoring /usr/bin/show_ipfw.sh                #BSD</para>
                <para># End server part</para>
                <para># Begin disk admin part</para>
                <para>*/30 * * * * monitoring /usr/bin/png_graph.sh hdisk -1week 30min</para>
                <para>0 */2 * * * monitoring /usr/bin/png_graph.sh hdisk -1month 2hour</para>
                <para>0 0 * * * monitoring /usr/bin/png_graph.sh hdisk -1year 1day</para>
                <para># End  disk admin part</para>
                <para># Begin network admin part</para>
                <para>*/30 * * * * monitoring /usr/bin/png_graph.sh network -1week 30min</para>
                <para>0 */2 * * * monitoring /usr/bin/png_graph.sh network -1month 2hour</para>
                <para>0 0 * * * monitoring /usr/bin/png_graph.sh network -1year 1day</para>
                <para># End  network admin part</para>
                <para># Begin system admin part</para>
                <para>*/5 * * * * monitoring /usr/bin/png_graph.sh system -2day 5min</para>
                <para>*/30 * * * * monitoring /usr/bin/png_graph.sh system -1week 30min</para>
                <para>0 */2 * * * monitoring /usr/bin/png_graph.sh system -1month 2hour</para>
                <para>0 0 * * * monitoring /usr/bin/png_graph.sh system -1year 1day</para>
                <para># End system admin part</para>
                <para># Begin sensors admin part</para>
                <para>*/5 * * * * monitoring /usr/bin/png_graph.sh sensors -2day 5min</para>
                <para>*/30 * * * * monitoring /usr/bin/png_graph.sh sensors -1week 30min</para>
                <para>0 */2 * * * monitoring /usr/bin/png_graph.sh sensors -1month 2hour</para>
                <para>0 0 * * * monitoring /usr/bin/png_graph.sh sensors -1year 1day</para>
                <para># End sensors admin part</para>
                <para># Begin vert admin part</para>
                <para>*/1 * * * * monitoring /usr/bin/net.vert.1.sh</para>
                <para>*/10 * * * * monitoring /usr/bin/net.vert.10.sh</para>
                <para># End  vert admin part</para>
                <para>Выполняем: </para>
                <para># /etc/init.d/crond restart</para>
                <para>Если все хорошо</para>
                <para>Теперь заходим Вашим любимым браузером на страницу http://servername/administration/monitoring/index.html. Здесь уже можем выбрать ссылки на сервер, который вас интересует :) </para>
            </section>
            <section>
                <info>
                    <title>Добавление новых серверов</title>
                </info>
                <para>Если Вам когда-то придется добавить новый сервер, достаточно будет сделать следующее:</para>
                <para>1. Выполнить для него пункт 2 („Серверная” сторона)</para>
                <para>2. Добавить его имя в файл /etc/monitoring/host</para>
                <para>Всё остальное создастся само !!! Наслаждайтесь :))) </para>
            </section>
            <section>
                <info>
                    <title>Альтернативы</title>
                </info>
                <para>Если Вы недовольны реализацией мониторинга таким образом (по моему мнению достаточно неплохое решение ;)) подберите себе лучшую. Вот некоторый перечень альтернатив или дополнений :=) </para>
                <para>Angel Network Monitor http://www.paganini.net/angel/ </para>
                <para>Autostatus http://www.angio.net/consult/autostatus/ </para>
                <para>Cacti http://cacti.net </para>
                <para>HiWAyS http://www.hiways.org/ </para>
                <para>MARS http://www.altara.org/mars.html </para>
                <para>Mon http://www.kernel.org/software/mon/ </para>
                <para>Monit http://www.tildeslash.com/monit/ </para>
                <para>Nagios http://www.nagios.org </para>
                <para>Netup (French) http://www.pasteur.fr/units/sis/netup/ </para>
                <para>NocMonitor http://www2.discpro.org/nocmon/ </para>
                <para>NodeWatch http://www.skendric.com/nodewatch/ </para>
                <para>Penemo http://www.communityprojects.org/apps/penemo/ </para>
                <para>PIKT http://pikt.org/ </para>
                <para>RITW http://www.terravista.pt/Ancora/1883/ritw_e.html </para>
                <para>RRDWorld http://oss.oetiker.ch/rrdtool/rrdworld/index.en.html </para>
                <para>Scotty http://wwwhome.cs.utwente.nl/~schoenw/scotty/ </para>
                <para>Spong http://spong.sourceforge.net/ </para>
                <para>Sysmon http://www.sysmon.org/ </para>
                <para>ZABBIX http://www.zabbix.com </para>
                <para>ZEUS http://www.zeus.com/ </para>
            </section>
        </section>
</article>